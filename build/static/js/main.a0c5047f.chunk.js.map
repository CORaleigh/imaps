{"version":3,"sources":["../node_modules/@esri/calcite-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","Components/LocationSearch/LocationSearch.tsx","Components/MapView/MapView.tsx","Components/MapView/utils/map.ts","Components/PropertyPanel/utils/propertytemplate.ts","Components/PropertyPanel/PropertySearch/utils/search.ts","Components/Basemaps/utils/basemaps.ts","Components/PropertyPanel/PropertyInfo/PropertyInfo.tsx","Components/PropertyPanel/PropertyList/utils/propertylist.ts","Components/PropertyPanel/PropertyList/PropertyList.tsx","Components/PropertyPanel/PropertySearch/PropertySearch.tsx","Components/PropertyPanel/utils/property.ts","Components/PropertyPanel/PropertyPanel.tsx","Components/Print/Print.tsx","Components/Shell/utils/shell.ts","Components/Sketch/utils/sketch.ts","Components/Sketch/SketchSettings.tsx","Components/Sketch/Sketch.tsx","Components/Basemaps/Basemaps.tsx","Components/Measure/Measure.tsx","Components/PropertySelect/PropertySelect.tsx","Components/Legend/Legend.tsx","Components/Bookmarks/Bookmarks.tsx","Components/Layers/utils/layers.ts","Components/Layers/Layers.tsx","Components/ThemeContext.ts","Components/Header/Header.tsx","config/config.ts","Components/TipManager/TipManager.tsx","Components/ActionContext.ts","Components/Shell/Shell.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","LocationSearch","props","ref","useRef","featureRef","useEffect","handles","search","SearchWidget","view","maxSuggestions","searchAllEnabled","popupEnabled","container","current","feature","Feature","push","on","results","forEach","result","graphic","allSources","event","item","layer","name","title","placeholder","locator","remove","handle","destroy","className","MapView","mapRef","useState","loaded","setLoaded","selectionLayer","setSelectionLayer","setView","viewRef","widgets","saveMap","console","log","document","visibilityState","removeMany","allLayers","filter","type","layers","length","toArray","json","toJSON","initialState","viewpoint","targetGeometry","extent","window","localStorage","setItem","JSON","stringify","mapProperties","viewProperties","zoom","WebMap","portalItem","createMapView","when","mapView","getItem","webmap","fromJSON","parse","load","lyr","find","l","visible","opacity","basemap","setTimeout","goTo","initialViewProperties","checkLocalStorage","initialized","home","Home","ui","add","compass","Compass","track","Track","scalebar","ScaleBar","createMapWidgets","FeatureLayer","source","editingEnabled","listMode","legendEnabled","geometryType","objectIdField","fields","renderer","UniqueValueRenderer","field","defaultSymbol","SimpleFillSymbol","style","outline","color","width","uniqueValueInfos","value","symbol","label","geometryChanged","mapPoint","addEventListener","removeEventListener","widget","selectedProperties","setAttribute","queryFeatures","where","returnGeometry","featureSet","applyEdits","deleteFeatures","features","addFeatures","arcadeExpressionInfos","expression","services","group","scrollToService","rect","detail","requestedAccordionItem","getBoundingClientRect","div","querySelector","parentElement","scrollTo","top","scrollTop","behavior","deedCreator","queryRelatedFeatures","relationshipId","relationships","r","objectIds","getAttribute","outFields","deed","bom","createElement","deedBtn","textContent","append","bombtn","getFieldInfos","condoTable","fieldConfigs","FieldInfo","fieldName","alias","includes","ext","fc","pin","reid","owner","address","unshift","condos","addresses","properties","stateHandle","boundary","createTemplate","propertyLayer","PopupTemplate","expressionInfos","fieldInfos","content","text","CustomContent","creator","relatedTableId","returnCentroid","outSpatialReference","wkid","Locator","url","addressToLocations","singleLine","candidates","candidate","dist","geodesicUtils","location","x","geometry","centroid","longitude","y","latitude","spatialReference","cbll","btn","azimuth","toString","tax","attributes","wellCreator","format","dateFormat","places","digitSeparator","mediaInfos","accordion","service","hasAttribute","childElementCount","loader","header","shadowRoot","insertBefore","childNodes","serviceGroup","promises","removeChild","serviceChanged","passive","PropertyInfo","listRef","featureWidget","promiseUtils","relationship","key","caption","sourceURL","popupTemplate","requestAnimationFrame","getColumns","columns","ignoreFields","showColumns","columnName","column","FieldColumnConfig","createFeatureTable","a","table","FeatureTable","PropertyList","setTable","definitionExpression","added","clearSelection","featureSelected","getLayerSource","orderByFields","searchFields","startsWith","resultFields","searchWidget","LayerSearchSource","getSuggestions","params","whereArray","suggestTerm","toUpperCase","returnDistinctValues","num","activeSource","join","sourceIndex","getResults","suggestResult","getProperty","oids","searchCondos","searchResultSelected","term","layerId","searchRelatedCondos","searchComplete","viewModel","selectedSuggestion","f","classList","wildcardSearch","getWildcardSearchWhere","searchTerm","numResults","checkPin","every","p","substring","PropertySearch","searchRef","widgetRef","allPlaceholder","includeDefaultSources","sources","addressTable","condosTable","Collection","watch","setSearchParams","pins","searchParams","URLSearchParams","set","state","history","pushState","pathname","PropertyPanel","setFeature","setFilter","setWhere","selectedTab","setSelectedTab","setAddressTable","setLayer","toggleTabs","tab","dispatchEvent","MouseEvent","allTables","mapViewLoaded","querySelectorAll","back","decodeURIComponent","split","URL","get","getObjectId","reloids","oid","reject","data","propertiesSelected","prop","position","layout","slot","active","match","Print","PrintWidget","panelDismissedChange","target","collapsed","dismissed","actionClicked","action","actions","isTool","innerWidth","isActive","deactivateActions","shellPanel","panel","removeAttribute","sketchHandles","labelClass","LabelClass","labelExpressionInfo","haloSize","haloColor","points","labelingInfo","lines","polygons","graphics","GraphicsLayer","sketchOnUpdate","updateFeatures","refresh","sketchOnDelete","pointFeatures","lineFeatures","polygonFeatures","settingsChanged","settings","pointRenderer","clone","Color","fromHex","pointFillColor","pointFillEnabled","pointFillOpacity","pointOutlineColor","pointOutlineOpacity","pointOutlineWidth","size","pointSize","updatePointRenderer","polygonRenderer","polygonFillEnabled","polygonFillColor","polygonFillOpacity","polygonOutlineColor","polygonOutlineOpacity","polygonOutlineWidth","updatePolygonRenderer","lineRenderer","lineColor","lineOutlineOpacity","lineWidth","updateLineRenderer","createSketchWidget","addMany","sketch","Sketch","popup","autoOpenEnabled","labelText","getElementById","sketchOnCreate","SketchSettings","setGeometryType","sliderChanged","attribute","parseFloat","colorChanged","switchChanged","switched","element","slider","picker","heading","open","collapsible","min","max","step","label-handles","ticks","page-step","snap","class","dir","alignment","status","scale","calcite-hydrated","bind","aria-checked","tabindex","hide-channels","hide-saved","appearance","sketchRef","activeToolChanged","activeTool","lastInRaleigh","filterBasemaps","tags","getBoundary","esriRequest","responseType","response","Polygon","shape","geometryEngine","center","Basemaps","basemapGallery","BasemapGallery","alert","body","contains","message","appendChild","createAlert","query","stationary","inRaleigh","filterFunction","updateBasemapsCallback","items","reverse","basemaps","getItemAt","basemapSelected","activeBasemap","scheme","basemapTheme","g","b","basemapChanged","selection-mode","allow-custom-values","max-items","icon","text-label","aria-hidden","selected","Measure","measureRef","coordRef","setWidget","measurement","Measurement","CoordinateConversion","clear","hidden","PropertySelect","distance","SketchWidget","creationMode","defaultCreateOptions","mode","visibleElements","selectionTools","undoRedoMenu","geometrySet","suffix-text","Legend","legend","LegendWidget","Bookmarks","bookmarks","BookmarksWidget","savedBookmarks","removeAll","layerListItemCreated","undefined","Math","round","parseInt","filterLayers","layerList","operationalItems","toLowerCase","uid","Layers","input","LayerList","listItemCreatedFunction","clearable","ThemeContext","React","createContext","theme","setTheme","Header","links","useContext","styles","Array","from","i","innerHTML","head","placement","group-title","link","href","Actions","component","path","tips","TipManager","setTitle","setTips","closed","setClosed","tipManagerToggled","tipsDismissed","tipsDimissed","intl-close","intl-default-title","intl-pagination-label","intl-next","intl-previous","tip","AppContext","setActions","Shell","tipsTitle","setTipsTitle","setWidth","viewCreated","setViewCreated","setSelectedProperties","ActionContext","windowResize","hasChildNodes","ReactDOM","render","mapInitialized","matchMedia","matches","require","width-scale","onClick","dismissible","text-enabled","showTips","point","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","applyPolyfills","defineCustomElements","StrictMode"],"mappings":"gTAAA,IAAIA,EAAM,CACT,iCAAkC,CACjC,IACA,KAED,8BAA+B,CAC9B,IACA,IAED,2BAA4B,CAC3B,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,6BAA8B,CAC7B,IACA,IAED,4BAA6B,CAC5B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,KAED,oCAAqC,CACpC,IACA,IAED,gCAAiC,CAChC,IACA,GACA,IAED,mCAAoC,CACnC,IACA,GACA,KAED,gCAAiC,CAChC,IACA,GACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,qCAAsC,CACrC,IACA,KAED,mCAAoC,CACnC,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,gCAAiC,CAChC,IACA,KAED,qCAAsC,CACrC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,+BAAgC,CAC/B,IACA,GACA,KAED,8BAA+B,CAC9B,IACA,KAED,wCAAyC,CACxC,IACA,KAED,kCAAmC,CAClC,IACA,IAED,mCAAoC,CACnC,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,sCAAuC,CACtC,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,4BAA6B,CAC5B,IACA,IAED,mCAAoC,CACnC,IACA,GACA,KAED,kCAAmC,CAClC,IACA,KAED,+BAAgC,CAC/B,IACA,KAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uCAAwC,CACvC,IACA,KAED,iCAAkC,CACjC,IACA,KAED,0BA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","file":"static/js/main.a0c5047f.chunk.js","sourcesContent":["var map = {\n\t\"./calcite-accordion_2.entry.js\": [\n\t\t759,\n\t\t104\n\t],\n\t\"./calcite-action_5.entry.js\": [\n\t\t760,\n\t\t75\n\t],\n\t\"./calcite-alert.entry.js\": [\n\t\t761,\n\t\t105\n\t],\n\t\"./calcite-avatar.entry.js\": [\n\t\t762,\n\t\t106\n\t],\n\t\"./calcite-block_2.entry.js\": [\n\t\t763,\n\t\t74\n\t],\n\t\"./calcite-button.entry.js\": [\n\t\t764,\n\t\t137\n\t],\n\t\"./calcite-card.entry.js\": [\n\t\t765,\n\t\t107\n\t],\n\t\"./calcite-checkbox.entry.js\": [\n\t\t766,\n\t\t86\n\t],\n\t\"./calcite-chip.entry.js\": [\n\t\t767,\n\t\t108\n\t],\n\t\"./calcite-color-picker_3.entry.js\": [\n\t\t768,\n\t\t76\n\t],\n\t\"./calcite-combobox_3.entry.js\": [\n\t\t769,\n\t\t11,\n\t\t63\n\t],\n\t\"./calcite-date-picker_5.entry.js\": [\n\t\t770,\n\t\t11,\n\t\t102\n\t],\n\t\"./calcite-dropdown_3.entry.js\": [\n\t\t771,\n\t\t11,\n\t\t138\n\t],\n\t\"./calcite-fab.entry.js\": [\n\t\t772,\n\t\t139\n\t],\n\t\"./calcite-filter.entry.js\": [\n\t\t773,\n\t\t64\n\t],\n\t\"./calcite-flow_2.entry.js\": [\n\t\t774,\n\t\t84\n\t],\n\t\"./calcite-graph.entry.js\": [\n\t\t775,\n\t\t140\n\t],\n\t\"./calcite-handle.entry.js\": [\n\t\t776,\n\t\t246\n\t],\n\t\"./calcite-icon.entry.js\": [\n\t\t777,\n\t\t141\n\t],\n\t\"./calcite-inline-editable.entry.js\": [\n\t\t778,\n\t\t142\n\t],\n\t\"./calcite-input-message.entry.js\": [\n\t\t779,\n\t\t143\n\t],\n\t\"./calcite-input.entry.js\": [\n\t\t780,\n\t\t109\n\t],\n\t\"./calcite-label.entry.js\": [\n\t\t781,\n\t\t144\n\t],\n\t\"./calcite-link.entry.js\": [\n\t\t782,\n\t\t145\n\t],\n\t\"./calcite-loader.entry.js\": [\n\t\t783,\n\t\t146\n\t],\n\t\"./calcite-modal.entry.js\": [\n\t\t784,\n\t\t110\n\t],\n\t\"./calcite-notice.entry.js\": [\n\t\t785,\n\t\t111\n\t],\n\t\"./calcite-option_3.entry.js\": [\n\t\t786,\n\t\t147\n\t],\n\t\"./calcite-pagination.entry.js\": [\n\t\t787,\n\t\t148\n\t],\n\t\"./calcite-pick-list-group.entry.js\": [\n\t\t788,\n\t\t85\n\t],\n\t\"./calcite-pick-list-item.entry.js\": [\n\t\t789,\n\t\t87\n\t],\n\t\"./calcite-pick-list.entry.js\": [\n\t\t790,\n\t\t61\n\t],\n\t\"./calcite-popover_2.entry.js\": [\n\t\t791,\n\t\t11,\n\t\t112\n\t],\n\t\"./calcite-progress.entry.js\": [\n\t\t792,\n\t\t247\n\t],\n\t\"./calcite-radio-button-group.entry.js\": [\n\t\t793,\n\t\t248\n\t],\n\t\"./calcite-radio-button.entry.js\": [\n\t\t794,\n\t\t88\n\t],\n\t\"./calcite-radio-group_2.entry.js\": [\n\t\t795,\n\t\t113\n\t],\n\t\"./calcite-radio.entry.js\": [\n\t\t796,\n\t\t249\n\t],\n\t\"./calcite-rating.entry.js\": [\n\t\t797,\n\t\t114\n\t],\n\t\"./calcite-scrim.entry.js\": [\n\t\t798,\n\t\t250\n\t],\n\t\"./calcite-shell-center-row.entry.js\": [\n\t\t799,\n\t\t115\n\t],\n\t\"./calcite-shell_2.entry.js\": [\n\t\t800,\n\t\t149\n\t],\n\t\"./calcite-slider.entry.js\": [\n\t\t801,\n\t\t89\n\t],\n\t\"./calcite-sortable-list.entry.js\": [\n\t\t802,\n\t\t38,\n\t\t251\n\t],\n\t\"./calcite-split-button.entry.js\": [\n\t\t803,\n\t\t150\n\t],\n\t\"./calcite-stepper_2.entry.js\": [\n\t\t804,\n\t\t116\n\t],\n\t\"./calcite-switch.entry.js\": [\n\t\t805,\n\t\t65\n\t],\n\t\"./calcite-tab_4.entry.js\": [\n\t\t806,\n\t\t90\n\t],\n\t\"./calcite-tile-select-group.entry.js\": [\n\t\t807,\n\t\t252\n\t],\n\t\"./calcite-tile-select.entry.js\": [\n\t\t808,\n\t\t151\n\t],\n\t\"./calcite-tile.entry.js\": [\n\t\t809,\n\t\t253\n\t],\n\t\"./calcite-tip_3.entry.js\": [\n\t\t810,\n\t\t103\n\t],\n\t\"./calcite-tooltip_2.entry.js\": [\n\t\t811,\n\t\t11,\n\t\t117\n\t],\n\t\"./calcite-tree_2.entry.js\": [\n\t\t812,\n\t\t118\n\t],\n\t\"./calcite-value-list-item.entry.js\": [\n\t\t813,\n\t\t77\n\t],\n\t\"./calcite-value-list.entry.js\": [\n\t\t814,\n\t\t38,\n\t\t62\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 685;\nmodule.exports = webpackAsyncContext;","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef } from 'react';\nimport SearchWidget from '@arcgis/core/widgets/Search';\nimport Feature from '@arcgis/core/widgets/Feature';\n\nexport const LocationSearch = (props: any) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const featureRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const handles: any[] = [];\n        const search = new SearchWidget({\n            view: props.view,\n            maxSuggestions: 30,\n            searchAllEnabled: true,\n            popupEnabled: false,\n            container: ref.current as HTMLDivElement,\n        });\n        const feature = new Feature({ view: props.view, container: featureRef.current as HTMLDivElement });\n        handles.push(\n            search.on('search-complete', (results) => {\n                results.results[0].results.forEach((result) => {\n                    feature.graphic = result.feature;\n                });\n            }),\n        );\n        handles.push(\n            search.allSources.on('after-add', (event: any) => {\n                if ((event.item as any).layer) {\n                    event.item.name = (event.item as any).layer.title;\n                    event.item.placeholder = (event.item as any).layer.title;\n                }\n                if ((event.item as any).locator) {\n                    search.allSources.remove(event.item);\n                }\n            }),\n        );\n        return () => {\n            handles.forEach((handle) => {\n                handle.remove();\n            });\n            feature && feature.destroy();\n            search && search.destroy();\n        };\n    }, [props.view]); // only after initial render\n    return (\n        <div className=\"panel\">\n            <div ref={ref}></div>\n            <div ref={featureRef}></div>\n        </div>\n    );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { checkLocalStorage, createMapView, createMapWidgets, createSelectionLayer } from './utils/map';\nexport const MapView = (props: any) => {\n    const mapRef = useRef<HTMLDivElement>(null);\n    const [loaded, setLoaded] = useState(false);\n    const [selectionLayer, setSelectionLayer] = useState<FeatureLayer>();\n\n    const [view, setView] = useState<__esri.MapView>();\n    const viewRef = useRef<__esri.MapView>();\n    const widgets = useRef<any[]>([]);\n\n    const saveMap = () => {\n        console.log(document.visibilityState);\n        if (document.visibilityState === 'hidden') {\n            viewRef.current?.map.removeMany(\n                viewRef.current?.map.allLayers\n                    .filter((layer) => {\n                        return layer.type === 'group' && !(layer as __esri.GroupLayer).layers.length;\n                    })\n                    .toArray(),\n            );\n            const json = (viewRef.current?.map as any).toJSON();\n            json.initialState.viewpoint.targetGeometry = viewRef.current?.extent;\n            window.localStorage.setItem('imaps', JSON.stringify(json));\n        }\n    };\n    useEffect(() => {\n        // read map and view properties from props\n        const mapProperties = { id: props.id };\n        const viewProperties = { zoom: props.zoom };\n        // create map and view\n        if (!loaded) {\n            createMapView(mapRef.current, mapProperties, viewProperties).when((mapView: __esri.MapView) => {\n                checkLocalStorage(mapView);\n\n                setLoaded(true);\n\n                props.initialized(mapView);\n                widgets.current.push(createMapWidgets(mapView));\n                setView(mapView);\n                viewRef.current = mapView;\n                const layer = createSelectionLayer();\n                setSelectionLayer(layer);\n\n                viewRef.current?.map.add(layer);\n\n                viewRef.current?.on('hold', (event: __esri.MapViewHoldEvent) => {\n                    props.geometryChanged(event.mapPoint);\n                });\n            });\n        }\n\n        window.addEventListener('visibilitychange', saveMap);\n        return () => {\n            window.removeEventListener('visibilitychange', saveMap);\n            view && view.destroy();\n            widgets.current.forEach((widget) => {\n                widget && widget.destroy();\n            });\n        };\n    }, []); // only after initial render\n    useEffect(() => {\n        if (props.selectedProperties) {\n            // props.selectedProperties.forEach((feature: __esri.Graphic) => {\n            //     feature.setAttribute('selected', 0);\n            // });\n            if (props.selectedProperties.length === 1) {\n                props.selectedProperties[0].setAttribute('selected', 1);\n            }\n            selectionLayer?.queryFeatures({ where: '1=1', returnGeometry: true }).then((featureSet) => {\n                selectionLayer?.applyEdits({ deleteFeatures: featureSet.features }).then(() => {\n                    props.selectedProperties;\n\n                    selectionLayer?.applyEdits({ addFeatures: props.selectedProperties }).then((result) => {\n                        console.log(result);\n                    });\n                });\n            });\n        }\n    }, [props.selectedProperties]);\n\n    return <div ref={mapRef} />;\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport WebMap from '@arcgis/core/WebMap';\nimport MapView from '@arcgis/core/views/MapView';\nimport Compass from '@arcgis/core/widgets/Compass';\nimport Track from '@arcgis/core/widgets/Track';\nimport Home from '@arcgis/core/widgets/Home';\nimport ScaleBar from '@arcgis/core/widgets/ScaleBar';\n\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\nimport UniqueValueRenderer from '@arcgis/core/renderers/UniqueValueRenderer';\nimport SimpleFillSymbol from '@arcgis/core/symbols/SimpleFillSymbol';\n\nexport const createSelectionLayer = () => {\n    const layer = new FeatureLayer({\n        source: [],\n        editingEnabled: true,\n        listMode: 'hide',\n        legendEnabled: false,\n        geometryType: 'polygon',\n        id: 'selection-layer',\n        objectIdField: 'OBJECTID',\n        fields: [\n            { name: 'OBJECTID', type: 'oid' },\n            { name: 'selected', type: 'small-integer' },\n            { name: 'PIN_NUM', type: 'string' },\n        ],\n        renderer: new UniqueValueRenderer({\n            field: 'selected',\n            defaultSymbol: new SimpleFillSymbol({\n                style: 'none',\n                outline: {\n                    color: [255, 255, 0],\n                    width: 2,\n                },\n            }),\n            uniqueValueInfos: [\n                {\n                    value: 1,\n                    symbol: new SimpleFillSymbol({\n                        style: 'none',\n                        outline: {\n                            color: [255, 255, 0],\n                            width: 2,\n                        },\n                    }),\n                    label: 'single',\n                },\n                {\n                    value: 0,\n                    symbol: new SimpleFillSymbol({\n                        style: 'none',\n                        outline: {\n                            color: [0, 206, 209],\n                            width: 2,\n                        },\n                    }),\n                    label: 'multiple',\n                },\n            ],\n        }),\n    });\n\n    return layer;\n};\nexport const createMapView = (mapRef: any, mapProperties: any, viewProperties: any): MapView => {\n    const map = new WebMap({ portalItem: mapProperties });\n    viewProperties.map = map;\n    viewProperties.container = mapRef;\n    const view = new MapView(viewProperties);\n\n    return view;\n};\n\nexport const checkLocalStorage = (view: MapView): void => {\n    if (window.localStorage.getItem('imaps')) {\n        const webmap: WebMap = WebMap.fromJSON(JSON.parse(window.localStorage.getItem('imaps') as string));\n        webmap.load().then(() => {\n            view.map.allLayers.forEach((layer) => {\n                const lyr = webmap.allLayers.find((l) => {\n                    return layer.id === l.id;\n                });\n                layer.visible = lyr?.visible;\n                layer.opacity = lyr?.opacity;\n            });\n            view.map.basemap = webmap.basemap;\n\n            //booksmarkList = webmap.bookmarks;\n            setTimeout(() => {\n                view.goTo(webmap.initialViewProperties.viewpoint.targetGeometry.extent);\n            }, 5000);\n        });\n    }\n};\n\nexport const createMapWidgets = (view: MapView): any[] => {\n    const widgets = [];\n    const home = new Home({ view: view });\n    view.ui.add(home, 'top-left');\n    widgets.push(home);\n    const compass = new Compass({ view: view });\n    view.ui.add(compass, 'top-left');\n    widgets.push(compass);\n    const track = new Track({ view: view });\n    view.ui.add(track, 'top-left');\n    widgets.push(track);\n    const scalebar = new ScaleBar({ view: view });\n    view.ui.add(scalebar, 'bottom-left');\n    widgets.push(scalebar);\n    return widgets;\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\nimport PopupTemplate from '@arcgis/core/PopupTemplate';\nimport ExpressionInfo from '@arcgis/core/popup/ExpressionInfo';\nimport CustomContent from '@arcgis/core/popup/content/CustomContent';\nimport Locator from '@arcgis/core/tasks/Locator';\nimport * as geodesicUtils from '@arcgis/core/geometry/support/geodesicUtils';\nimport Feature from '@arcgis/core/widgets/Feature';\nimport FieldInfo from '@arcgis/core/popup/FieldInfo';\nimport * as promiseUtils from '@arcgis/core/core/promiseUtils';\n\nconst arcadeExpressionInfos = [\n    {\n        name: 'mailing-address',\n        title: 'mailing-address',\n        expression:\n            'When(IsEmpty($feature.ADDR3),$feature.ADDR1 + TextFormatting.NewLine + $feature.ADDR2,$feature.ADDR1 + TextFormatting.NewLine + $feature.ADDR2 + TextFormatting.NewLine + $feature.ADDR3)',\n    },\n    {\n        name: 'property-values',\n        title: 'property-values',\n        expression:\n            '\"Building Value\"+TextFormatting.NewLine+\"$\"+$feature.BLDG_VAL+TextFormatting.NewLine+\"Land Value\"+TextFormatting.NewLine+\"$\"+$feature.LAND_VAL+TextFormatting.NewLine+\"Total Value\"+TextFormatting.NewLine+\"$\"+$feature.TOTAL_VALUE_ASSD',\n    },\n\n    {\n        name: 'pin',\n        title: 'PIN',\n        expression: \"var num = $feature.PIN_NUM;var ext = $feature.PIN_EXT;return When(ext == '000',num,num+' '+ext);\",\n    },\n    {\n        name: 'build_val',\n        title: 'Building Value',\n        expression: \"var value = $feature.BLDG_VAL;When(IsEmpty(value),'--', '$'+Text(value, '#,###'));\",\n    },\n    {\n        name: 'land_val',\n        title: 'Land Value',\n        expression: \"var value = $feature.LAND_VAL;When(IsEmpty(value),'--', '$'+Text(value, '#,###'));\",\n    },\n    {\n        name: 'total_val',\n        title: 'Total Value',\n        expression: \"var value = $feature.TOTAL_VALUE_ASSD;When(IsEmpty(value),'--', '$'+Text(value, '#,###'));\",\n    },\n    {\n        name: 'sale_price',\n        title: 'Sale Price',\n        expression: \"var value = $feature.TOTSALPRICE;When(IsEmpty(value),'--', '$'+Text(value, '#,###'));\",\n    },\n    {\n        name: 'city',\n        title: 'City',\n        expression: \"var city = $feature.CITY_DECODE;When(IsEmpty(city),'Unincorporated', Proper(city));\",\n    },\n    {\n        name: 'township',\n        title: 'Township',\n        expression: \"var ts = $feature.TOWNSHIP_DECODE;When(IsEmpty(ts),'None', Proper(ts));\",\n    },\n    {\n        name: 'jurisdiction',\n        title: 'Jurisdiction',\n        expression:\n            'var juris = $feature.PLANNING_JURISDICTION;When(' +\n            \"juris == 'RA', 'Raleigh',\" +\n            \"juris == 'CA', 'Cary',\" +\n            \"juris == 'AP', 'Apex',\" +\n            \"juris == 'AN', 'Angier',\" +\n            \"juris == 'CL', 'Clayton',\" +\n            \"juris == 'DU', 'Durham',\" +\n            \"juris == 'FV', 'Fuquay-Varina',\" +\n            \"juris == 'GA', 'Garner',\" +\n            \"juris == 'HS', 'Holly Springs',\" +\n            \"juris == 'KN', 'Knightdale',\" +\n            \"juris == 'MO', 'Morrisville',\" +\n            \"juris == 'RO', 'Rolesville',\" +\n            \"juris == 'WF', 'Wake Forest',\" +\n            \"juris == 'WE', 'Wendell',\" +\n            \"juris == 'ZB', 'Zebulon',\" +\n            \"juris == 'WC', 'Wake County',\" +\n            \" 'Wake County');\",\n    },\n    {\n        name: 'general',\n        title: 'general',\n        expression:\n            '\"PIN\"+TextFormatting.NewLine+$feature.PIN_NUM+\" \"+$feature.PIN_EXT+TextFormatting.NewLine+' +\n            '\"REID\"+TextFormatting.NewLine+$feature.REID+TextFormatting.NewLine+\"City\"+TextFormatting.NewLine+' +\n            'Proper($feature.CITY_DECODE)+TextFormatting.NewLine+\"Jurisdiction\"+TextFormatting.NewLine+' +\n            '$feature.PLANNING_JURISDICTION+TextFormatting.NewLine+\"Township\"+TextFormatting.NewLine+Proper($feature.TOWNSHIP_DECODE)',\n    },\n    // {\n    // \tname: 'addresses',\n    // \ttitle: 'Addresses',\n    // \texpression:\n    // \t\t\"var rel = FeatureSetByRelationshipName($feature, 'CONDO_PROPERTY', ['*'], true);var test = Array(Count(rel));var cnt = 0;var f = First(rel);var fs = FeatureSetByPortalItem(Portal('https://ral.maps.arcgis.com/'), '318be24592ea4dcba042511b3125fd53', 2, ['ADDRESS','FEATURETYPE']);var containfs = Contains(f, fs);var addresses = Array(Count(containfs));var cnt = 0;for (var i in containfs){        addresses[cnt] = {'ADDRESS': i['ADDRESS'], 'FEATURETYPE': i['FEATURETYPE']};    cnt+=1;}function sortAddresses(a,b) {    return  a['ADDRESS'] > b['ADDRESS'];}var sorted =  Sort(addresses, sortAddresses);var list = '';for (var i in sorted) {    list += sorted[i]['ADDRESS'] + ' (' + sorted[i]['FEATURETYPE'] + ')' + TextFormatting.NewLine;}return list;\",\n    // },\n] as ExpressionInfo[];\nconst services: any[] = [\n    {\n        group: {\n            title: 'Electoral',\n            layers: [\n                'Precincts',\n                'Congressional Districts',\n                'NC House of Representatives Districts',\n                'NC Senate Districts',\n                'School Board Districts',\n                'Board of Commissioners Districts',\n                'Superior Court Districts',\n                'Raleigh City Council',\n                'Morrisville Town Council Districts',\n            ],\n        },\n    },\n    {\n        group: {\n            title: 'Environmental',\n            layers: [\n                'Special Flood Hazard Areas - FloodPlain - Floodplain',\n                'Soils',\n                'Critical Watersheds',\n                'Water Supply Watersheds',\n            ],\n        },\n    },\n];\n\nconst scrollToService = (e: any) => {\n    const rect = (e.detail.requestedAccordionItem as HTMLElement).getBoundingClientRect();\n    const div = document.querySelector('#featureWidget')?.parentElement;\n    setTimeout(() => {\n        div?.scrollTo({ top: rect.top + div.scrollTop - 155, behavior: 'smooth' });\n    });\n};\nconst serviceChanged = (graphic: __esri.Graphic, view: __esri.MapView | __esri.SceneView, e: any) => {\n    if (\n        !e.detail.requestedAccordionItem.hasAttribute('active') &&\n        e.detail.requestedAccordionItem.childElementCount === 0\n    ) {\n        const loader = document.createElement('calcite-loader');\n        loader.setAttribute('inline', '');\n        const header = e.detail.requestedAccordionItem.shadowRoot.querySelector(\n            '.accordion-item-header',\n        ) as HTMLElement;\n        header.insertBefore(loader, header.childNodes[1]);\n        const serviceGroup: any = services.find((service) => {\n            return service.group.title === e.detail.requestedAccordionItem.getAttribute('item-title');\n        });\n        const promises: Promise<__esri.FeatureSet>[] = [];\n\n        if (serviceGroup) {\n            const layers = view.map.allLayers.filter((layer) => {\n                return serviceGroup.group.layers.includes(layer.title);\n            });\n            layers.forEach((layer) => {\n                promises.push(\n                    (layer as __esri.FeatureLayer).queryFeatures({\n                        geometry: graphic.geometry,\n                        outFields: ['*'],\n                        returnGeometry: true,\n                    }),\n                );\n            });\n        }\n        if (promises.length) {\n            return Promise.all(promises).then((results) => {\n                results.forEach((result) => {\n                    if (result.features.length) {\n                        result.features.forEach((feature: __esri.Graphic) => {\n                            const div = document.createElement('div');\n                            e.detail.requestedAccordionItem.append(div);\n                            new Feature({ container: div, graphic: feature });\n                        });\n                    }\n                });\n                scrollToService(e);\n                header.removeChild(loader);\n            });\n        } else {\n            header.removeChild(loader);\n            return 'No services found.';\n        }\n    } else {\n        scrollToService(e);\n    }\n};\nconst deedCreator = (e: any) => {\n    return (e.graphic.layer as FeatureLayer)\n        .queryRelatedFeatures({\n            relationshipId: (e.graphic.layer as FeatureLayer).relationships.find((r) => {\n                return r.name === 'CONDO_BOOKS';\n            })?.id,\n            objectIds: [e.graphic.getAttribute('OBJECTID')],\n            outFields: ['BOM_DOC_NUM', 'DEED_DOC_NUM'],\n        })\n        .then((result) => {\n            const deed = result[e.graphic.getAttribute('OBJECTID')].features[0].getAttribute('DEED_DOC_NUM');\n            const bom = result[e.graphic.getAttribute('OBJECTID')].features[0].getAttribute('BOM_DOC_NUM');\n            const div = document.createElement('div');\n            div.setAttribute('style', 'display: flex;flex-direction: row;');\n            if (deed) {\n                const deedBtn = document.createElement('calcite-button');\n                deedBtn.setAttribute('scale', 's');\n                deedBtn.setAttribute('target', '_blank');\n                deedBtn.setAttribute('round', '');\n                deedBtn.setAttribute('icon-start', 'file-text');\n                deedBtn.setAttribute(\n                    'href',\n                    'http://services.wakegov.com/booksweb/pdfview.aspx?docid=' + deed + '&RecordDate=',\n                );\n\n                deedBtn.textContent = 'Deed';\n                div.append(deedBtn);\n            }\n            if (bom) {\n                const bombtn = document.createElement('calcite-button');\n                bombtn.setAttribute('scale', 's');\n                bombtn.setAttribute('target', '_blank');\n                bombtn.setAttribute('round', '');\n                bombtn.setAttribute('icon-start', 'map');\n                bombtn.setAttribute(\n                    'href',\n                    'http://services.wakegov.com/booksweb/pdfview.aspx?docid=' + bom + '&RecordDate=',\n                );\n                bombtn.textContent = 'Book of Maps';\n                div.append(bombtn);\n            }\n\n            return div;\n        });\n};\n\nconst wellCreator = (e: any, view: __esri.MapView) => {\n    const layer = view.map.allLayers.find((layer: __esri.Layer) => {\n        return layer.title.includes('Wells');\n    }) as FeatureLayer;\n    return layer\n        .queryFeatures({\n            where: `PIN_NUM = '${e.graphic.attributes['PIN_NUM']}'`,\n            returnGeometry: false,\n        })\n        .then((featureSet) => {\n            const div = document.createElement('div');\n            if (featureSet.features.length) {\n                const pin = featureSet.features[0].getAttribute('PIN_NUM');\n                const btn = document.createElement('calcite-button');\n                btn.setAttribute('scale', 's');\n                btn.setAttribute('target', '_blank');\n                btn.setAttribute('round', '');\n                btn.setAttribute('icon-start', 'link');\n                btn.setAttribute('href', 'https://maps.wakegov.com/water-analysis/index.html#/?pin=' + pin);\n\n                btn.textContent = 'Wells';\n                div.append(btn);\n            }\n            const layer = view.map.allLayers.find((layer: __esri.Layer) => {\n                return layer.title.includes('Septic');\n            }) as FeatureLayer;\n            layer\n                .queryFeatures({\n                    where: `PIN_NUM = '${e.graphic.attributes['PIN_NUM']}'`,\n                    returnGeometry: false,\n                })\n                .then((featureSet) => {\n                    if (featureSet.features.length) {\n                        const pin = featureSet.features[0].getAttribute('PIN_NUM');\n                        const btn = document.createElement('calcite-button');\n                        btn.setAttribute('scale', 's');\n                        btn.setAttribute('target', '_blank');\n                        btn.setAttribute('round', '');\n                        btn.setAttribute('href', 'https://maps.wakegov.com/septic/index.html#/?pin=' + pin);\n                        btn.setAttribute('icon-start', 'link');\n                        btn.textContent = 'Septic';\n                        div.append(btn);\n                    }\n                });\n            return div;\n        });\n};\n\nexport const getPhotos = (feature: __esri.Graphic): Promise<__esri.MediaInfo[]> => {\n    return promiseUtils.create(function (resolve) {\n        const relationship = (feature.layer as FeatureLayer)?.relationships.find((r) => {\n            return r.name === 'CONDO_PHOTOS';\n        });\n        // const media = ((feature.layer as FeatureLayer).popupTemplate.content as __esri.Content[]).find(\n        //     (content: __esri.Content) => {\n        //         return content?.type === 'media';\n        //     },\n        // );\n\n        // (media as __esri.MediaContent).mediaInfos = [];\n        const mediaInfos: any[] = [];\n        const layer: FeatureLayer = feature.layer as FeatureLayer;\n        layer\n            ?.queryRelatedFeatures({\n                relationshipId: relationship?.id,\n                objectIds: [feature.getAttribute('OBJECTID')],\n                outFields: ['*'],\n            })\n            .then((result) => {\n                for (const key in result) {\n                    result[key].features.forEach((feature: __esri.Graphic) => {\n                        mediaInfos.push({\n                            title: '',\n                            type: 'image',\n                            caption: '',\n                            value: {\n                                sourceURL: `https://services.wakegov.com/realestate/photos/mvideo/${feature.getAttribute(\n                                    'IMAGEDIR',\n                                )}/${feature.getAttribute('IMAGENAME')}`,\n                            },\n                        });\n                    });\n                }\n\n                resolve(mediaInfos);\n            });\n    });\n};\n\n// export const featureLayer = view.map.allLayers.find((layer) => {\n// \treturn layer.title.includes('Property') && layer.type === 'feature';\n// });\n// export const condosTable = view.map.allLayers.find((layer) => {\n// \treturn layer.title.includes('Condos') && layer.type === 'feature';\n// });\n// export const addressTable = view.map.allLayers.find((layer) => {\n// \treturn layer.title.includes('Addresses') && layer.type === 'feature';\n// });\n// export const featureLayer = new FeatureLayer({\n// \tportalItem: {\n// \t\tid: '08050bf067bb4b20adea4b0b4f0a39e3',\n// \t},\n// \tspatialReference: { wkid: 102100 },\n// });\n\n// export const condosTable = new FeatureLayer({\n// \tportalItem: {\n// \t\tid: '08050bf067bb4b20adea4b0b4f0a39e3',\n// \t},\n// \tlayerId: 1,\n// \tspatialReference: { wkid: 102100 },\n// });\n// condosTable.load();\n// export const addressTable = new FeatureLayer({\n// \tportalItem: {\n// \t\tid: '08050bf067bb4b20adea4b0b4f0a39e3',\n// \t},\n// \tlayerId: 4,\n// \tspatialReference: { wkid: 102100 },\n// });\n// addressTable.load();\n\nfunction getFieldInfos(condoTable: FeatureLayer): FieldInfo[] {\n    let fieldConfigs: FieldInfo[] = [];\n    condoTable.fields.forEach((field) => {\n        fieldConfigs.push(\n            new FieldInfo({\n                fieldName: field.name,\n                label: field.alias,\n                visible: ['SITE_ADDRESS', 'OWNER', 'PIN_NUM', 'PIN_EXT', 'REID'].includes(field.name),\n            }),\n        );\n    });\n    const ext = fieldConfigs.find((fc) => {\n        return fc.fieldName === 'PIN_EXT';\n    }) as FieldInfo;\n    const pin = fieldConfigs.find((fc) => {\n        return fc.fieldName === 'PIN_NUM';\n    }) as FieldInfo;\n    const reid = fieldConfigs.find((fc) => {\n        return fc.fieldName === 'REID';\n    }) as FieldInfo;\n    const owner = fieldConfigs.find((fc) => {\n        return fc.fieldName === 'OWNER';\n    }) as FieldInfo;\n    const address = fieldConfigs.find((fc) => {\n        return fc.fieldName === 'SITE_ADDRESS';\n    }) as FieldInfo;\n    fieldConfigs = fieldConfigs.filter((fc) => {\n        return !['SITE_ADDRESS', 'OWNER', 'PIN_NUM', 'PIN_EXT', 'REID'].includes(fc.fieldName);\n    });\n    fieldConfigs.unshift(ext);\n    fieldConfigs.unshift(pin);\n    fieldConfigs.unshift(reid);\n    fieldConfigs.unshift(owner);\n    fieldConfigs.unshift(address);\n    return fieldConfigs;\n}\nexport const createTemplate = (view: __esri.MapView | __esri.SceneView, condoTable: FeatureLayer): PopupTemplate => {\n    const propertyLayer = view.map.allLayers.find((layer) => {\n        return layer.title.includes('Property') && layer.type === 'feature';\n    }) as FeatureLayer;\n    const popupTemplate = new PopupTemplate({\n        expressionInfos: arcadeExpressionInfos,\n        fieldInfos: getFieldInfos(condoTable).map((field) => {\n            return {\n                fieldName: field.fieldName,\n                label: field.label,\n                visible: ['SITE_ADDRESS', 'OWNER', 'PIN_NUM', 'PIN_EXT', 'REID'].includes(field.fieldName),\n            };\n        }),\n        content: [\n            {\n                type: 'text',\n                text: '<h1>{SITE_ADDRESS}</h1>',\n            },\n            new CustomContent({\n                outFields: ['*'],\n                creator: (e: any) => {\n                    (e.graphic.layer as FeatureLayer).relationships.find((r) => {\n                        return r.name.includes('PROPERTY');\n                    })?.relatedTableId;\n\n                    return propertyLayer\n                        ?.queryFeatures({\n                            where: `REID = '${e.graphic.getAttribute('REID')}'`,\n                            outFields: ['OBJECTID', 'PIN_NUM'],\n                            returnGeometry: true,\n                            returnCentroid: true,\n                            outSpatialReference: { wkid: 4326 },\n                        })\n                        .then((result) => {\n                            return new Locator({\n                                url: 'https://maps.raleighnc.gov/arcgis/rest/services/Locators/Locator/GeocodeServer',\n                                outSpatialReference: { wkid: 4326 },\n                            })\n                                .addressToLocations({\n                                    address: { singleLine: e.graphic.getAttribute('SITE_ADDRESS') },\n                                    outFields: ['*'],\n                                })\n                                .then((candidates: __esri.AddressCandidate[]) => {\n                                    if (candidates.length) {\n                                        // const candidate = candidates.find((candidate) => {\n                                        // \treturn candidate.attributes['Loc_name'] === 'WakeStreets';\n                                        // });\n                                        const candidate = candidates[0];\n                                        if (candidate) {\n                                            const dist = geodesicUtils.geodesicDistance(candidate.location, {\n                                                x: (result.features[0]?.geometry as __esri.Polygon).centroid.longitude,\n                                                y: (result.features[0]?.geometry as __esri.Polygon).centroid.latitude,\n                                                spatialReference: { wkid: 4326 } as any,\n                                            } as any);\n                                            const cbll =\n                                                (result.features[0]?.geometry as __esri.Polygon).centroid.latitude +\n                                                ',' +\n                                                (result.features[0]?.geometry as __esri.Polygon).centroid.longitude;\n                                            const div = document.createElement('div');\n                                            div.setAttribute('style', 'display: flex;flex-direction: row;');\n                                            const btn = document.createElement('calcite-button');\n                                            btn.setAttribute('scale', 's');\n                                            btn.setAttribute('target', '_blank');\n                                            btn.setAttribute('round', '');\n                                            btn.setAttribute('icon-start', 'person');\n                                            btn.setAttribute(\n                                                'href',\n                                                'https://maps.google.com?layer=c&cbll=' +\n                                                    cbll +\n                                                    '&cbp=0,' +\n                                                    dist.azimuth?.toString() +\n                                                    ',0,0,0',\n                                            );\n\n                                            btn.textContent = 'Street View';\n\n                                            div.append(btn);\n                                            const tax = document.createElement('calcite-button');\n                                            tax.setAttribute('scale', 's');\n                                            tax.setAttribute('target', '_blank');\n                                            tax.setAttribute(\n                                                'href',\n                                                'http://services.wakegov.com/realestate/Account.asp?id=' +\n                                                    e.graphic.getAttribute('REID'),\n                                            );\n                                            tax.setAttribute('round', '');\n                                            tax.setAttribute('icon-start', 'locator');\n                                            tax.textContent = 'Tax Page';\n                                            div.append(tax);\n                                            return div;\n                                        }\n                                    }\n                                });\n                        });\n                },\n            }),\n            new CustomContent({\n                outFields: ['PIN_NUM'],\n                creator: (e) => {\n                    return wellCreator(e, view as __esri.MapView);\n                },\n            }),\n            {\n                type: 'text',\n                text: '<h2>General</h1>',\n            },\n            {\n                type: 'fields',\n                fieldInfos: [\n                    {\n                        fieldName: 'expression/pin',\n                        label: 'PIN',\n                    },\n                    {\n                        fieldName: 'REID',\n                        label: 'REID',\n                    },\n                    {\n                        fieldName: 'expression/city',\n                        label: 'City',\n                    },\n                    {\n                        fieldName: 'expression/jurisdiction',\n                        label: 'Jurisdiction',\n                    },\n                    {\n                        fieldName: 'expression/township',\n                        label: 'Township',\n                    },\n                ],\n            },\n\n            // {\n            //   type: 'custom',\n            //   text: '<calcite-button scale=\"s\" href=\"#\" class=\"streetView\" target=\"_blank\">Street View</calcite-button>'\n            // },\n            {\n                type: 'text',\n                text: '<h2>Owner</h1>',\n            },\n            {\n                type: 'text',\n                text:\n                    // '<h1 class=\"text-green\">{SITE_ADDRESS}</h1>' +\n                    // '<h2>General</h2>{expression/general}' +\n                    '{OWNER}<br/>{expression/mailing-address}',\n            },\n            {\n                type: 'text',\n                text: '<h2>Valuation</h1>',\n            },\n            {\n                type: 'fields',\n                fieldInfos: [\n                    {\n                        fieldName: 'expression/build_val',\n                    },\n                    {\n                        fieldName: 'expression/land_val',\n                    },\n                    {\n                        fieldName: 'expression/total_val',\n                    },\n                    {\n                        fieldName: 'BILLING_CLASS_DECODE',\n                        label: 'Billing Class',\n                    },\n                ],\n            },\n            {\n                type: 'text',\n                text: '<h2>Last Sale</h1>',\n            },\n            {\n                type: 'fields',\n                fieldInfos: [\n                    {\n                        fieldName: 'SALE_DATE',\n                        format: {\n                            dateFormat: 'short-date',\n                        },\n                        label: 'Date Sold',\n                    },\n                    {\n                        fieldName: 'expression/sale_price',\n                    },\n                ],\n            },\n            {\n                type: 'text',\n                text: '<h2>Deeds</h1>',\n            },\n            {\n                type: 'fields',\n                fieldInfos: [\n                    {\n                        fieldName: 'DEED_BOOK',\n                        label: 'Book',\n                    },\n                    {\n                        fieldName: 'DEED_PAGE',\n                        label: 'Page',\n                    },\n                    {\n                        fieldName: 'DEED_DATE',\n                        format: {\n                            dateFormat: 'short-date',\n                        },\n                        label: 'Deed Date',\n                    },\n                    {\n                        fieldName: 'DEED_ACRES',\n                        format: {\n                            places: 2,\n                        },\n                        label: 'Deed Acres',\n                    },\n                    {\n                        fieldName: 'PROPDESC',\n                        label: 'Legal Description',\n                    },\n                ],\n            },\n\n            new CustomContent({\n                outFields: ['OBJECTID', 'REID'],\n                creator: deedCreator,\n            }),\n            {\n                type: 'text',\n                text: '<h2>Building</h1>',\n            },\n            {\n                type: 'fields',\n                fieldInfos: [\n                    {\n                        fieldName: 'HEATEDAREA',\n                        format: {\n                            digitSeparator: true,\n                        },\n                        label: 'Heated Area',\n                    },\n                    {\n                        fieldName: 'YEAR_BUILT',\n                        format: {\n                            digitSeparator: false,\n                        },\n                        label: 'Year Built',\n                    },\n                    {\n                        fieldName: 'DESIGN_STYLE_DECODE',\n                        label: 'Design/Style',\n                    },\n                    {\n                        fieldName: 'TOTSTRUCTS',\n                        label: 'Total Structures',\n                    },\n                    {\n                        fieldName: 'TOTUNITS',\n                        label: 'Total Units',\n                    },\n                ],\n            },\n            {\n                type: 'media',\n                mediaInfos: [],\n            },\n            {\n                type: 'text',\n                text: '<h2>Services</h1>',\n            },\n            new CustomContent({\n                outFields: ['*'],\n                creator: (e: any) => {\n                    const accordion = document.createElement('calcite-accordion');\n                    accordion.setAttribute('selection-mode', 'single');\n\n                    services.forEach((service) => {\n                        const item = document.createElement('calcite-accordion-item');\n                        item.setAttribute('item-title', service.group.title);\n                        accordion.append(item);\n                    });\n                    //const f = serviceChanged.bind(e.Graphic);\n                    // setTimeout(f, 1000);\n                    const graphic = e.graphic;\n                    accordion.addEventListener(\n                        'calciteAccordionChange',\n                        (e: any) => {\n                            serviceChanged(graphic, view, e);\n                        },\n                        { passive: true },\n                    );\n                    return accordion;\n                },\n            }),\n            // {\n            // \ttype: 'text',\n            // \ttext: '<h2>Addresses</h1>',\n            // },\n            // {\n            // \ttype: 'text',\n            // \ttext: '{expression/addresses}',\n            // },\n        ],\n    });\n    return popupTemplate;\n    // condosTable.popupTemplate = popupTemplate;\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Collection from '@arcgis/core/core/Collection';\nimport LayerSearchSource from '@arcgis/core/widgets/Search/LayerSearchSource';\n\nimport widgetsSearch from '@arcgis/core/widgets/Search';\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\nimport * as promiseUtils from '@arcgis/core/core/promiseUtils';\nlet condos: FeatureLayer;\nlet addresses: FeatureLayer;\nlet search: widgetsSearch;\nlet properties: FeatureLayer;\nconst getSuggestions = (\n    params: any,\n    name: string,\n    layer: FeatureLayer,\n    outFields: string[],\n    orderByFields: string[],\n    searchFields: string[],\n    startsWith: boolean,\n    searchWidget: widgetsSearch,\n) => {\n    const whereArray: string[] = [];\n    searchFields.forEach((field) => {\n        if (startsWith) {\n            whereArray.push(`${field} LIKE '${params.suggestTerm.toUpperCase()}%'`);\n        } else {\n            whereArray.push(`${field} LIKE '%${params.suggestTerm.toUpperCase()}%'`);\n        }\n    });\n    return layer\n        .queryFeatures({\n            returnDistinctValues: true,\n            outFields: outFields,\n            returnGeometry: false,\n            orderByFields: orderByFields,\n            num: searchWidget.activeSource ? 50 : 6,\n            where: whereArray.join(' OR '),\n        })\n        .then((results) => {\n            return results.features.map((feature) => {\n                return {\n                    key: name,\n                    text: feature.getAttribute(outFields[0]),\n                    sourceIndex: params.sourceIndex,\n                };\n            });\n        });\n};\nconst getLayerSource = (\n    placeholder: string,\n    name: string,\n    table: FeatureLayer,\n    outFields: string[],\n    orderByFields: string[],\n    searchFields: string[],\n    startsWith: boolean,\n    resultFields: string[],\n    searchWidget: widgetsSearch,\n) => {\n    return new LayerSearchSource({\n        placeholder: placeholder,\n        name: name,\n        maxSuggestions: 6,\n        getSuggestions: (params: any) => {\n            return getSuggestions(\n                params,\n                name,\n                table,\n                outFields,\n                orderByFields,\n                searchFields,\n                startsWith,\n                searchWidget,\n            );\n        },\n        getResults: (params: any) => {\n            return table\n                .queryFeatures({\n                    where: `${orderByFields[0]} = '${params.suggestResult.text.toUpperCase()}'`,\n                    outFields: resultFields,\n                })\n                .then((results) => {\n                    return results.features.map((feature) => {\n                        return {\n                            feature: feature,\n                            name: name,\n                        };\n                    });\n                }) as any;\n        },\n    });\n};\n\nconst getProperty = (oids: number[]): Promise<__esri.Graphic[]> => {\n    return promiseUtils.create((resolve) => {\n        const relationship = condos.relationships.find((r) => {\n            return r.name === 'CONDO_PROPERTY';\n        });\n        condos\n            .queryRelatedFeatures({\n                relationshipId: relationship?.id,\n                objectIds: oids,\n                outFields: ['OBJECTID', 'REID'],\n                returnGeometry: false,\n            })\n            .then((result) => {\n                const oids: number[] = [];\n                for (const key in result) {\n                    result[key].features.forEach((feature: __esri.Graphic) => {\n                        oids.push(feature.getAttribute('OBJECTID'));\n                    });\n                }\n                properties\n                    .queryFeatures({\n                        objectIds: oids,\n                        outFields: ['*'],\n                        returnGeometry: true,\n                        outSpatialReference: { wkid: 102100 },\n                    })\n                    .then((result) => {\n                        search.view.goTo(result.features);\n                        resolve(result.features);\n                    });\n            });\n    });\n};\nconst searchRelatedCondos = (oids: number[], layer: __esri.FeatureLayer) => {\n    return promiseUtils.create((resolve) => {\n        const relationship = layer.relationships.find((r) => {\n            return r.name === 'ADDRESSES_CONDO';\n        });\n        const params: any = { outFields: ['*'], objectIds: oids, relationshipId: relationship?.id };\n\n        layer.queryRelatedFeatures(params).then((result) => {\n            const oids: number[] = [];\n            const features: __esri.Graphic[] = [];\n            for (const key in result) {\n                result[key].features.forEach((feature: __esri.Graphic) => {\n                    oids.push(feature.getAttribute('OBJECTID'));\n                    features.push(feature);\n                });\n            }\n            getProperty(oids).then((properties: __esri.Graphic[]) => {\n                if (features.length > 1) {\n                    //this.emit('features-selected', result.features);\n                    resolve({ properties: properties, features: features });\n                }\n                if (features.length === 1) {\n                    const feature = features[0];\n                    feature.geometry = properties[0].geometry;\n                    feature.layer = condos;\n                    resolve({ properties: properties, features: features, feature: feature });\n                    //this.emit('feature-selected', feature);\n                }\n\n                // this.emit('properties-selected', properties);\n            });\n        });\n    });\n};\n// const whereDefined = (where: string) => {\n//     searchCondos(where, []);\n// };\nexport const searchCondos = (where: string, oids: number[]): Promise<any> => {\n    return promiseUtils.create((resolve) => {\n        const params: any = { outFields: ['*'] };\n        if (where != '') {\n            params.where = where;\n        } else {\n            params.objectIds = oids;\n        }\n        condos.queryFeatures(params).then((result) => {\n            const oids: number[] = [];\n            result.features.forEach((feature: __esri.Graphic) => {\n                oids.push(feature.getAttribute('OBJECTID'));\n            });\n            getProperty(oids).then((properties: __esri.Graphic[]) => {\n                if (result.features.length > 1) {\n                    //this.emit('features-selected', result.features);\n                    resolve({ properties: properties, features: result.features });\n                }\n                if (result.features.length === 1) {\n                    const feature = result.features[0];\n                    feature.geometry = properties[0].geometry;\n                    feature.layer = condos;\n                    resolve({ properties: properties, features: result.features, feature: feature });\n                    //this.emit('feature-selected', feature);\n                }\n\n                // this.emit('properties-selected', properties);\n            });\n        });\n    });\n};\nconst searchResultSelected = (layer: FeatureLayer, source: string, results: any, term: string) => {\n    return promiseUtils.create((resolve) => {\n        if (!layer && source === 'Owner') {\n            layer = condos;\n        }\n        if (!layer && ['Site Address', 'Street Name'].includes(source)) {\n            layer = addresses;\n        }\n        const oids: number[] = [];\n        results.forEach((r: any) => {\n            oids.push(r.feature.getAttribute('OBJECTID'));\n        });\n        let where = '';\n\n        if (layer?.layerId === 4) {\n            where = `${source === 'Street Name' ? 'FULL_STREET_NAME' : 'SITE_ADDRESS'} = '${term}'`;\n            searchRelatedCondos(oids, layer).then((result) => {\n                resolve(result);\n            });\n        } else {\n            searchCondos(where, oids).then((result) => {\n                resolve(result);\n            });\n        }\n    });\n};\nconst wildcardSearch = (where: string, condoTable: FeatureLayer) => {\n    const oids: number[] = [];\n    condoTable.queryFeatures({ where: where, outFields: ['*'] }).then((result) => {\n        result.features.forEach((f) => {\n            oids.push(f.getAttribute('OBJECTID'));\n        });\n        getProperty(oids);\n        if (result.features.length > 1) {\n            //this.emit('features-selected', result.features);\n        }\n        if (result.features.length === 1) {\n            //this.emit('feature-selected', result.features[0]);\n        }\n        document.querySelector('.esri-search--show-suggestions')?.classList.remove('esri-search--show-suggestions');\n    });\n};\nconst getWildcardSearchWhere = (searchFields: string[], term: string): string => {\n    let where = '';\n    if (!searchFields.length) {\n        where = `OWNER like '%${term.toUpperCase()}%' OR REID like '${term.toUpperCase()}%' OR PIN_NUM like '${term.toUpperCase()}%'`;\n    } else {\n        if (searchFields.includes('OWNER')) {\n            where = `OWNER like '_%${term.toUpperCase()}%'`;\n        }\n        if (searchFields.includes('PIN_NUM')) {\n            where = `PIN_NUM like '%${term.toUpperCase()}%'`;\n        }\n        if (searchFields.includes('REID')) {\n            where = `REID like '%${term.toUpperCase()}%'`;\n        }\n    }\n    return where;\n};\n\nexport const searchComplete = (event: __esri.SearchSearchCompleteEvent): Promise<any> => {\n    return promiseUtils.create((resolve) => {\n        if (!search.viewModel.selectedSuggestion) {\n            let searchFields: string[] = [];\n            if (search.activeSource) {\n                searchFields = (search.activeSource as LayerSearchSource)?.searchFields;\n            }\n            const where = getWildcardSearchWhere(searchFields, event.searchTerm);\n            wildcardSearch(where, condos);\n        }\n        if (event.numResults) {\n            searchResultSelected(\n                (event.results[0].source as LayerSearchSource).layer as FeatureLayer,\n                event.results[0].source.name,\n                event.results[0].results,\n                event.searchTerm,\n            ).then((result) => {\n                resolve(result);\n            });\n        }\n    });\n};\nexport const checkPin = (searchTerm: string): string => {\n    const matches =\n        searchTerm.length === 19 &&\n        searchTerm[4] === '.' &&\n        [searchTerm[7], searchTerm[10], searchTerm[15]].every((p) => p === ' ');\n    if (matches) {\n        searchTerm = searchTerm.substring(0, 4) + searchTerm.substring(8, 10) + searchTerm.substring(11, 15);\n    }\n    return searchTerm;\n};\nexport const setSearchSources = (\n    addressTable: FeatureLayer,\n    condoTable: FeatureLayer,\n    propertyLayer: FeatureLayer,\n    searchWidget: widgetsSearch,\n): Collection<LayerSearchSource> => {\n    condos = condoTable;\n    addresses = addressTable;\n    properties = propertyLayer;\n    search = searchWidget;\n    return new Collection([\n        getLayerSource(\n            'example: 222 W HARGETT ST',\n            'Site Address',\n            addressTable,\n            ['ADDRESS'],\n            ['ADDRESS'],\n            ['ADDRESS'],\n            true,\n            ['ADDRESS', 'REA_REID', 'OBJECTID'],\n            searchWidget,\n        ),\n        getLayerSource(\n            'example: SMITH, JOHN',\n            'Owner',\n            condoTable,\n            ['OWNER'],\n            ['OWNER'],\n            ['OWNER'],\n            false,\n            ['OWNER', 'OBJECTID'],\n            searchWidget,\n        ),\n        getLayerSource(\n            'PIN',\n            'PIN',\n            condoTable,\n            ['PIN_NUM'],\n            ['PIN_NUM'],\n            ['PIN_NUM'],\n            true,\n            ['PIN_NUM', 'OBJECTID'],\n            searchWidget,\n        ),\n        getLayerSource(\n            'REID',\n            'REID',\n            condoTable,\n            ['REID'],\n            ['REID'],\n            ['REID'],\n            true,\n            ['REID', 'OBJECTID'],\n            searchWidget,\n        ),\n        getLayerSource(\n            'example: W HARGETT ST',\n            'Street Name',\n            addressTable,\n            ['STREET', 'ADDR_LIST'],\n            ['STREET'],\n            ['STREET', 'STREET_NODIR'],\n            false,\n            ['STREET', 'REA_REID', 'OBJECTID'],\n            searchWidget,\n        ),\n    ]);\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nlet stateHandle: __esri.WatchHandle;\nlet lastInRaleigh = false;\nlet boundary: __esri.Geometry;\nimport esriRequest from '@arcgis/core/request';\nimport Polygon from '@arcgis/core/geometry/Polygon';\nimport * as geometryEngine from '@arcgis/core/geometry/geometryEngine';\nimport * as promiseUtils from '@arcgis/core/core/promiseUtils';\nimport * as type from '@arcgis/core/smartMapping/symbology/type';\n\nexport const createAlert = () => {\n    const alert = document.createElement('calcite-alert');\n    alert.setAttribute('auto-dismiss', '');\n    alert.setAttribute('auto-dismiss-duration', 'fast');\n    alert.setAttribute('scale', 'm');\n    alert.setAttribute('color', 'yellow');\n    alert.setAttribute('theme', document.body.classList.contains('dark') ? 'dark' : 'light');\n    const title = document.createElement('div');\n    title.slot = 'alert-title';\n    title.textContent = 'Image basemap changed';\n    const message = document.createElement('div');\n    message.slot = 'alert-message';\n    message.textContent = 'Image basemap changed';\n    alert.appendChild(title);\n    alert.appendChild(message);\n    document.body.appendChild(alert);\n};\n\nexport const basemapChanged = (activeBasemap: __esri.Basemap, view: __esri.MapView, selectedTab: string) => {\n    const scheme = type.getSchemes({ basemap: activeBasemap, geometryType: 'polygon' });\n\n    const propertyLayer = view.map.allLayers.find((layer) => {\n        return layer.type === 'feature' && layer.title.startsWith('Property');\n    }) as __esri.FeatureLayer;\n    const renderer = (propertyLayer.renderer as __esri.SimpleRenderer).clone();\n    if (scheme.basemapTheme === 'light') {\n        (renderer.symbol as __esri.SimpleFillSymbol).outline.color.r = 0;\n        (renderer.symbol as __esri.SimpleFillSymbol).outline.color.g = 0;\n        (renderer.symbol as __esri.SimpleFillSymbol).outline.color.b = 0;\n    }\n    if (scheme.basemapTheme === 'dark' || selectedTab === 'imagery') {\n        (renderer.symbol as __esri.SimpleFillSymbol).outline.color.r = 255;\n        (renderer.symbol as __esri.SimpleFillSymbol).outline.color.g = 255;\n        (renderer.symbol as __esri.SimpleFillSymbol).outline.color.b = 255;\n    }\n    propertyLayer.renderer = renderer;\n    propertyLayer.refresh();\n};\nexport const basemapSelected = (value: string, view: __esri.MapView, basemapGallery: __esri.BasemapGallery): void => {\n    const query: any = {};\n    if (!boundary) {\n        getBoundary(view).then((result) => {\n            boundary = result;\n        });\n    }\n    const handle = view.watch('stationary', (stationary: boolean) => {\n        if (stationary) {\n            const inRaleigh = geometryEngine.contains(boundary, view.center);\n            if (inRaleigh != lastInRaleigh) {\n                lastInRaleigh = inRaleigh;\n\n                (basemapGallery.source as __esri.PortalBasemapsSource).refresh();\n            }\n        }\n    });\n    //selected = value;\n    if (value === 'imagery') {\n        document.querySelector('.basemaps-base .esri-button-menu')?.removeAttribute('hidden');\n        query.id = '492386759d264d49948bf7f83957ddb9';\n        (basemapGallery.source as __esri.PortalBasemapsSource).filterFunction = filterBasemaps;\n        (basemapGallery.source as __esri.PortalBasemapsSource).updateBasemapsCallback = (items: __esri.Basemap[]) => {\n            return items.reverse();\n        };\n        setTimeout(() => {\n            stateHandle = (basemapGallery.source as __esri.PortalBasemapsSource).watch('state', (state) => {\n                if (state === 'ready' && value === 'imagery') {\n                    const basemap = basemapGallery.source.basemaps.find((basemap) => {\n                        return basemap.portalItem.title === view.map.basemap.title;\n                    });\n                    if (!basemap && !lastInRaleigh && view.map.basemap.portalItem) {\n                        setTimeout(() => {\n                            const message = document.querySelector('div[slot=\"alert-message\"]') as any;\n                            message.textContent = `${\n                                view.map.basemap.portalItem.title\n                            } imagery not available outside Raleigh, switching to ${\n                                basemapGallery.source.basemaps.getItemAt(0).portalItem.title\n                            }`;\n                            view.map.basemap = basemapGallery.source.basemaps.getItemAt(0);\n                            document.querySelector('calcite-alert')?.setAttribute('active', '');\n                        });\n                    }\n                }\n            });\n        }, 1000);\n    } else {\n        document.querySelector('.basemaps-base .esri-button-menu')?.setAttribute('hidden', '');\n\n        handle?.remove();\n        stateHandle?.remove();\n        (basemapGallery.source as __esri.PortalBasemapsSource).filterFunction = () => {\n            return true;\n        };\n        (basemapGallery.source as __esri.PortalBasemapsSource).updateBasemapsCallback = (items: __esri.Basemap[]) => {\n            return items;\n        };\n    }\n    (basemapGallery.source as __esri.PortalBasemapsSource).query = query;\n};\n\nexport const filterBasemaps = (item: __esri.Basemap): boolean => {\n    if (lastInRaleigh) {\n        return true;\n    } else {\n        return item.portalItem.tags.includes('countywide');\n    }\n};\n\nexport const getBoundary = (view: __esri.MapView): Promise<__esri.Geometry> => {\n    return promiseUtils.create((resolve) => {\n        esriRequest(\n            'https://maps.raleighnc.gov/images/rest/services/Orthos2020/ImageServer/queryBoundary?outSR=102100&f=json',\n            { responseType: 'json' },\n        ).then((response) => {\n            const geometry: Polygon = Polygon.fromJSON(response.data.shape);\n            lastInRaleigh = geometryEngine.contains(geometry, view.center);\n            resolve(geometry);\n        });\n    });\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef, useState } from 'react';\nimport Feature from '@arcgis/core/widgets/Feature';\nimport { createTemplate, getPhotos } from '../utils/propertytemplate';\nimport './PropertyInfo.scss';\nexport const PropertyInfo = (props: any) => {\n    const listRef = useRef<HTMLDivElement>(null);\n    const [loaded, setLoaded] = useState(false);\n    const featureWidget = useRef<Feature>();\n    const [view, setView] = useState<__esri.MapView>();\n    useEffect(() => {\n        if (!loaded && props.view) {\n            setView(props.view);\n            featureWidget.current = new Feature({\n                container: listRef.current as HTMLDivElement,\n                view: view,\n            });\n            setLoaded(true);\n        }\n\n        return () => {\n            console.log('cleanup');\n        };\n    }); // only after initial render\n    useEffect(() => {\n        if (featureWidget.current) {\n            if (props.feature) {\n                getPhotos(props.feature).then((mediaInfos: __esri.MediaInfo[]) => {\n                    props.feature.popupTemplate = createTemplate(\n                        view as __esri.MapView,\n                        props.feature.layer as __esri.FeatureLayer,\n                    );\n                    const media = (props.feature.popupTemplate.content as __esri.Content[]).find(\n                        (content: __esri.Content) => {\n                            return content?.type === 'media';\n                        },\n                    ) as __esri.MediaContent;\n                    media.mediaInfos = mediaInfos;\n                    if (featureWidget.current) {\n                        featureWidget.current.graphic = props.feature;\n                    }\n                    requestAnimationFrame(() => {\n                        document\n                            .querySelector('.esri-feature')\n                            ?.parentElement?.scrollTo({ top: 0, behavior: 'smooth' });\n                    });\n                });\n            }\n        }\n    }, [props.feature]);\n    return <div ref={listRef}></div>;\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport FeatureTable from '@arcgis/core/widgets/FeatureTable';\nimport FieldColumnConfig from '@arcgis/core/widgets/FeatureTable/FieldColumnConfig';\nconst getColumns = (layer: __esri.FeatureLayer): FieldColumnConfig[] => {\n    const columns: FieldColumnConfig[] = [];\n\n    const ignoreFields = ['OBJECTID', 'PARCELPK', 'GlobalID'];\n    const showColumns = ['SITE_ADDRESS', 'OWNER', 'REID', 'PIN_NUM', 'PIN_EXT'];\n    showColumns.forEach((columnName) => {\n        const field = layer.fields.find((column) => {\n            return column.name === columnName;\n        }) as __esri.Field;\n        columns.push(\n            new FieldColumnConfig({\n                alias: field.alias,\n                name: field.name,\n                field: field,\n                layer: layer,\n                visible: showColumns.includes(field.name),\n            } as any),\n        );\n    });\n    layer.fields.forEach((field) => {\n        if (!ignoreFields.includes(field.name) && !showColumns.includes(field.name)) {\n            columns.push(\n                new FieldColumnConfig({\n                    alias: field.alias,\n                    name: field.name,\n                    field: field,\n                    layer: layer,\n                    visible: showColumns.includes(field.name),\n                } as any),\n            );\n        }\n    });\n    return columns;\n};\n\nexport const createFeatureTable = async (\n    ref: any,\n    view: __esri.MapView,\n    layer: __esri.FeatureLayer,\n): Promise<FeatureTable> => {\n    await layer.load();\n    const table = new FeatureTable({\n        layer: layer,\n        container: ref.current as HTMLDivElement,\n        fieldConfigs: getColumns(layer),\n        view: view,\n    });\n    return table;\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef, useState } from 'react';\nimport FeatureTable from '@arcgis/core/widgets/FeatureTable';\nimport { createFeatureTable } from './utils/propertylist';\nexport const PropertyList = (props: any) => {\n    const listRef = useRef<HTMLDivElement>(null);\n    const [loaded, setLoaded] = useState(false);\n    const [table, setTable] = useState<FeatureTable>();\n    useEffect(() => {\n        if (!loaded) {\n            createFeatureTable(listRef, props.view, props.layer).then((table) => {\n                setTable(table);\n                setLoaded(true);\n                if (props.filter) {\n                    table.layer.definitionExpression = props.filter;\n                } else {\n                    table.layer.definitionExpression = 'OBJECTID IS NOT NULL';\n                }\n                table.on('selection-change', (event: __esri.FeatureTableSelectionChangeEvent) => {\n                    if (event.added.length) {\n                        table.clearSelection();\n                        props.featureSelected(event.added[0].feature);\n                    }\n                });\n            });\n        }\n\n        return () => {\n            // table && table.destroy();\n        };\n    }, []); // only after initial render\n    useEffect(() => {\n        if (table) {\n            table.layer.definitionExpression = props.filter;\n        }\n    }, [props.filter]);\n    return <div ref={listRef}></div>;\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef, useState } from 'react';\nimport SearchWidget from '@arcgis/core/widgets/Search';\nimport './PropertySearch.scss';\nimport { checkPin, searchComplete, searchCondos, setSearchSources } from './utils/search';\nimport widgetsSearch from '@arcgis/core/widgets/Search';\nexport const PropertySearch = (props: any) => {\n    const searchRef = useRef<HTMLDivElement>(null);\n    const widgetRef = useRef<widgetsSearch>();\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        if (!loaded) {\n            const search = new SearchWidget({\n                container: searchRef.current as HTMLDivElement,\n                view: props.view,\n                allPlaceholder: 'Address, owner, PIN, or REID',\n                includeDefaultSources: false,\n                popupEnabled: false,\n            });\n            widgetRef.current = search;\n            search.sources = setSearchSources(props.addressTable, props.condosTable, props.propertyLayer, search);\n            search.on('search-complete', (event) => {\n                searchComplete(event).then((result: any) => {\n                    props.searchComplete(result);\n                });\n            });\n            search.watch('searchTerm', (searchTerm) => {\n                if (searchTerm != checkPin(searchTerm)) {\n                    search.searchTerm = checkPin(searchTerm);\n                }\n            });\n            setLoaded(true);\n        }\n        return () => {\n            console.log('cleanup');\n        };\n    }, [props.view, props.addressTable, props.condosTable, props.propertyLayer, props.searchComplete]); // only after initial render\n    useEffect(() => {\n        searchCondos(props.where, []).then((result) => {\n            props.searchComplete(result);\n        });\n    }, [props.where]);\n    return <div ref={searchRef}></div>;\n};\n","import * as promiseUtils from '@arcgis/core/core/promiseUtils';\nimport { reject } from '@arcgis/core/core/promiseUtils';\nexport const geometryChanged = (\n    view: __esri.MapView,\n    layer: __esri.FeatureLayer,\n    geometry: __esri.Geometry,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Promise<any> => {\n    return promiseUtils.create((resolve) => {\n        layer\n            ?.queryFeatures({\n                geometry: geometry,\n                outFields: ['OBJECTID', 'REID', 'PIN_NUM'],\n                returnGeometry: true,\n                outSpatialReference: view?.spatialReference,\n            })\n            .then((featureSet) => {\n                view?.goTo(featureSet.features);\n                const oids = featureSet.features.map((feature) => {\n                    return feature.getObjectId();\n                });\n                layer.queryRelatedFeatures({ relationshipId: 0, objectIds: oids, outFields: ['*'] }).then((result) => {\n                    const reloids: number[] = [];\n                    const features: __esri.Graphic[] = [];\n                    oids.forEach((oid) => {\n                        result[oid]?.features.forEach((feature: __esri.Graphic) => {\n                            reloids.push(feature.getAttribute('OBJECTID'));\n                            features.push(feature);\n                        });\n                    });\n                    if (reloids.length) {\n                        resolve({\n                            where: `OBJECTID in (${reloids.toString()})`,\n                            features: features,\n                            properties: featureSet.features,\n                        });\n                    } else {\n                        reject();\n                    }\n                });\n            });\n    });\n};\n\nexport const setSearchParams = (features: __esri.Graphic[]): void => {\n    const pins: string[] = features.map((feature: __esri.Graphic) => {\n        return feature.getAttribute('PIN_NUM');\n    });\n    //\tconst url = new URL(document.URL);\n    const searchParams = new URLSearchParams();\n    if (pins) {\n        searchParams.set('pins', pins.toString());\n\n        const state = { pins: pins.toString() };\n        if (history.state) {\n            if (history.state.pins != state.pins) {\n                history.pushState({ pins: pins.toString() }, '', `${location.pathname}?${searchParams.toString()}`);\n            }\n        } else {\n            history.pushState({ pins: pins.toString() }, '', `${location.pathname}?${searchParams.toString()}`);\n        }\n\n        //url.searchParams\n    }\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { PropertyInfo } from './PropertyInfo/PropertyInfo';\nimport { PropertyList } from './PropertyList/PropertyList';\nimport './PropertyPanel.scss';\nimport { PropertySearch } from './PropertySearch/PropertySearch';\nimport { geometryChanged, setSearchParams } from './utils/property';\n\n//\nexport const PropertyPanel = (props: any) => {\n    const state = useRef({ pins: '' });\n    const [loaded, setLoaded] = useState(false);\n    const [view, setView] = useState<__esri.MapView>();\n    const [feature, setFeature] = useState<__esri.Graphic>();\n    //const featureRef = useRef<__esri.Graphic>();\n    const [filter, setFilter] = useState('OBJECTID IS NULL');\n    const [where, setWhere] = useState('OBJECTID IS NULL');\n\n    const [table, setTable] = useState<__esri.FeatureLayer>();\n    const [selectedTab, setSelectedTab] = useState('list');\n    const [addressTable, setAddressTable] = useState<__esri.FeatureLayer>();\n    let properties: __esri.Graphic[] = [];\n\n    const [layer, setLayer] = useState<__esri.FeatureLayer>();\n\n    const mapViewLoaded = (mapView: __esri.MapView) => {\n        setTable(\n            mapView.map.allTables.find((layer) => {\n                return layer.title.includes('Condo') && layer.type === 'feature';\n            }) as __esri.FeatureLayer,\n        );\n\n        setAddressTable(\n            mapView.map.allTables.find((layer) => {\n                return layer.title.includes('Address') && layer.type === 'feature';\n            }) as __esri.FeatureLayer,\n        );\n        setLayer(\n            mapView.map.allLayers.find((layer) => {\n                return layer.title.includes('Property') && layer.type === 'feature';\n            }) as __esri.FeatureLayer,\n        );\n        setLoaded(true);\n        setView(mapView);\n        //new FeatureTable({ container: panelRef.current as HTMLDivElement, layer: layer, view: mapView });\n    };\n    const toggleTabs = (tab: string) => {\n        (document.querySelector(\n            `calcite-tab-title:${tab === 'list' ? 'first' : 'last'}-child`,\n        ) as HTMLElement).dispatchEvent(new MouseEvent('click'));\n        setSelectedTab(tab);\n    };\n    const searchComplete = (result: any) => {\n        if (result.feature) {\n            setFeature(result.features[0]);\n            //featureRef.current = result.features[0];\n            setSearchParams([result.features[0]]);\n            toggleTabs('info');\n        } else {\n            toggleTabs('list');\n        }\n        const oids = result?.features.map((feature: __esri.Graphic) => {\n            return feature.getAttribute('OBJECTID');\n        });\n        setFilter(`OBJECTID in (${oids.toString()})`);\n        properties = result.properties;\n        properties.forEach((prop) => {\n            prop.setAttribute('selected', 0);\n        });\n        props.propertiesSelected(properties);\n    };\n    const tableFeatureSelected = (feature: __esri.Graphic) => {\n        if (feature) {\n            properties.forEach((prop) => {\n                if (prop.getAttribute('PIN_NUM') != feature?.getAttribute('PIN_NUM')) {\n                    prop.setAttribute('selected', 0);\n                }\n            });\n            const match = properties.find((prop) => {\n                return prop.getAttribute('PIN_NUM') === feature?.getAttribute('PIN_NUM');\n            });\n            match?.setAttribute('selected', 1);\n            feature.geometry = match?.geometry as __esri.Geometry;\n\n            setFeature(feature);\n            //featureRef.current = feature;\n            setSearchParams([feature]);\n\n            toggleTabs('info');\n            props.propertiesSelected(properties);\n        }\n    };\n\n    useEffect(() => {\n        if (!loaded) {\n            const mapView = props.view as __esri.MapView;\n            mapViewLoaded(mapView);\n            document.querySelectorAll('calcite-tab-nav').forEach((tab) => {\n                tab.addEventListener('calciteTabChange', (event) => {\n                    setSelectedTab((event as any).detail.tab === 0 ? 'list' : 'info');\n                });\n            });\n            window.addEventListener('popstate', (e) => {\n                if (e.state.pins === state.current.pins) {\n                    history.back();\n                } else {\n                    if (e.state.pins) {\n                        setWhere(`PIN_NUM in ('${decodeURIComponent(history.state.pins.split(',').join(`','`))}')`);\n                    }\n                }\n                state.current = e.state;\n            });\n            const url = new URL(document.URL);\n            const pins = url.searchParams.get('pins');\n            if (pins) {\n                setWhere(`PIN_NUM in ('${decodeURIComponent(pins.split(',').join(`','`))}')`);\n            }\n        }\n        return () => {\n            console.log('cleanup');\n        };\n    }, []); // only after initial render\n    useEffect(() => {\n        geometryChanged(view as __esri.MapView, layer as __esri.FeatureLayer, props.geometry).then((data) => {\n            setFilter(data.where);\n            props.propertiesSelected(data.properties);\n            if (data.features.length === 1) {\n                const f = data.features[0] as __esri.Graphic;\n                f.layer = table as __esri.FeatureLayer;\n                f.popupTemplate = table?.popupTemplate as __esri.PopupTemplate;\n                const feature = data.features[0] as __esri.Graphic;\n                feature.geometry = data.properties.find((prop: __esri.Graphic) => {\n                    return prop.getAttribute('PIN_NUM') === feature.getAttribute('PIN_NUM');\n                })?.geometry;\n                setFeature(feature);\n\n                //featureRef.current = feature;\n                setSearchParams([feature]);\n\n                toggleTabs('info');\n            } else {\n                toggleTabs('list');\n            }\n        });\n    }, [props.geometry, props.propertiesSelected]);\n    return (\n        <div className=\"panel\">\n            {loaded && (\n                <PropertySearch\n                    view={view}\n                    condosTable={table}\n                    addressTable={addressTable}\n                    propertyLayer={layer}\n                    where={where}\n                    searchComplete={searchComplete}\n                ></PropertySearch>\n            )}\n\n            <calcite-tabs position=\"below\" layout=\"center\">\n                <calcite-tab-nav slot=\"tab-nav\">\n                    <calcite-tab-title active={selectedTab === 'list'}>List</calcite-tab-title>\n                    <calcite-tab-title active={selectedTab === 'info'}>Info</calcite-tab-title>\n                </calcite-tab-nav>\n\n                <calcite-tab active={selectedTab === 'list' ? '' : null}>\n                    {loaded && (\n                        <PropertyList\n                            layer={table}\n                            view={view}\n                            filter={filter}\n                            featureSelected={tableFeatureSelected}\n                        ></PropertyList>\n                    )}\n                </calcite-tab>\n\n                <calcite-tab active={selectedTab === 'info' ? '' : null}>\n                    {loaded && <PropertyInfo view={view} feature={feature} />}\n                </calcite-tab>\n            </calcite-tabs>\n        </div>\n    );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef } from 'react';\nimport PrintWidget from '@arcgis/core/widgets/Print';\nexport const Print = (props: any) => {\n    const ref = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n        new PrintWidget({\n            container: ref.current as HTMLDivElement,\n            view: props.view,\n        });\n        return () => {\n            console.log('cleanup');\n        };\n    }, [props.view]); // only after initial render\n    return <div ref={ref}></div>;\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst panelDismissedChange = (e: Event) => {\n    const shellPanel = (e.target as HTMLElement)?.parentElement;\n    (shellPanel as HTMLCalciteShellPanelElement).collapsed = (e.target as HTMLCalcitePanelElement)?.dismissed;\n};\n\nexport const initialized = (): void => {\n    const panels = document.querySelectorAll('calcite-panel');\n    panels.forEach((panel) => {\n        panel?.addEventListener('calcitePanelDismissedChange', panelDismissedChange);\n    });\n};\n\nexport const deactivate = (): void => {\n    const panels = document.querySelectorAll('calcite-panel');\n    panels.forEach((panel) => {\n        panel?.removeEventListener('calcitePanelDismissedChange', panelDismissedChange);\n    });\n};\nconst deactivateActions = (actions: any[], isTool: boolean): void => {\n    if (innerWidth < 1000) {\n        actions.forEach((a) => {\n            a.isActive = false;\n        });\n    } else {\n        if (isTool) {\n            actions.forEach((a) => {\n                a.isActive = a.isActive && !a.isTool;\n            });\n        } else {\n            actions.forEach((a) => {\n                a.isActive = a.isActive && a.isTool;\n            });\n        }\n    }\n};\nexport const actionClicked = (e: any, action: any, actions: any[]): any[] => {\n    deactivateActions(actions, action.isTool);\n    action.isActive = true;\n    const shellPanel = (e.target as HTMLElement)?.parentElement?.parentElement;\n    const panel = shellPanel?.querySelector('calcite-panel');\n    debugger;\n    if (!action.isActive) {\n        shellPanel?.setAttribute('collapsed', '');\n        panel?.setAttribute('dismissed', '');\n    } else {\n        shellPanel?.removeAttribute('collapsed');\n        panel?.removeAttribute('dismissed');\n    }\n\n    return actions;\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Sketch from '@arcgis/core/widgets/Sketch';\nimport Color from '@arcgis/core/Color';\n\nimport GraphicsLayer from '@arcgis/core/layers/GraphicsLayer';\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\nimport LabelClass from '@arcgis/core/layers/support/LabelClass';\nexport const sketchHandles: any[] = [];\nconst labelClass = new LabelClass({\n    labelExpressionInfo: { expression: '$feature.label' },\n    symbol: {\n        type: 'text',\n        color: 'black',\n        haloSize: 1,\n        haloColor: 'white',\n    } as any,\n});\nexport const points = new FeatureLayer({\n    source: [],\n    fields: [\n        { type: 'oid', name: 'OBJECTID' },\n        { type: 'string', name: 'label' },\n    ],\n    objectIdField: 'OBJECTID',\n    geometryType: 'point',\n    listMode: 'hide',\n    legendEnabled: false,\n    id: 'sketch-points',\n    renderer: { type: 'simple', symbol: { type: 'simple-marker', color: [255, 255, 255, 1] } } as any,\n    labelingInfo: [labelClass],\n});\nexport const lines = new FeatureLayer({\n    source: [],\n    fields: [\n        { type: 'oid', name: 'OBJECTID' },\n        { type: 'string', name: 'label' },\n    ],\n    objectIdField: 'OBJECTID',\n    geometryType: 'polyline',\n    legendEnabled: false,\n    listMode: 'hide',\n    id: 'sketch-lines',\n    labelingInfo: [labelClass],\n});\nexport const polygons = new FeatureLayer({\n    source: [],\n    fields: [\n        { type: 'oid', name: 'OBJECTID' },\n        { type: 'string', name: 'label' },\n    ],\n    objectIdField: 'OBJECTID',\n    geometryType: 'polygon',\n    listMode: 'hide',\n    legendEnabled: false,\n    id: 'sketch-polygons',\n    renderer: {\n        type: 'simple',\n        symbol: {\n            type: 'simple-fill',\n            color: [255, 255, 255, 0.5],\n            outline: {\n                type: 'simple-line',\n                color: [255, 255, 255, 1],\n            },\n        },\n    } as any,\n\n    labelingInfo: [labelClass],\n});\nconst graphics = new GraphicsLayer({ listMode: 'hide', opacity: 0 });\n\nconst sketchOnCreate = (event: __esri.SketchCreateEvent, view: __esri.MapView) => {\n    if (event.state === 'start') {\n        view.popup.autoOpenEnabled = false;\n    }\n    if (event.state === 'complete') {\n        const graphic: __esri.Graphic = event.graphic;\n        const labelText = document.getElementById('labelInput')?.getAttribute('value');\n        graphic.setAttribute('label', labelText);\n        if (graphic.geometry.type === 'point') {\n            points.applyEdits({ addFeatures: [graphic] }).then(() => {\n                points.refresh();\n            });\n        }\n        if (graphic.geometry.type === 'polyline') {\n            lines.applyEdits({ addFeatures: [graphic] }).then(() => {\n                lines.refresh();\n            });\n        }\n        if (graphic.geometry.type === 'polygon') {\n            polygons.applyEdits({ addFeatures: [graphic] }).then(() => {\n                polygons.refresh();\n            });\n        }\n        view.popup.autoOpenEnabled = true;\n    }\n};\n\nconst sketchOnUpdate = (event: __esri.SketchUpdateEvent) => {\n    if (event.state === 'start') {\n        graphics.opacity = 0.5;\n    }\n    if (event.state === 'complete') {\n        graphics.opacity = 0;\n        if (event.graphics[0].geometry.type === 'point') {\n            points.applyEdits({ updateFeatures: event.graphics }).then(() => {\n                points.refresh();\n            });\n        }\n        if (event.graphics[0].geometry.type === 'polyline') {\n            lines.applyEdits({ updateFeatures: event.graphics }).then(() => {\n                lines.refresh();\n            });\n        }\n        if (event.graphics[0].geometry.type === 'polygon') {\n            polygons.applyEdits({ updateFeatures: event.graphics }).then(() => {\n                polygons.refresh();\n            });\n        }\n    }\n};\n\nconst sketchOnDelete = (event: __esri.SketchDeleteEvent) => {\n    const pointFeatures: __esri.Graphic[] = [];\n    const lineFeatures: __esri.Graphic[] = [];\n    const polygonFeatures: __esri.Graphic[] = [];\n    event.graphics.forEach((graphic) => {\n        if (graphic.geometry.type === 'point') {\n            pointFeatures.push(graphic);\n        }\n        if (graphic.geometry.type === 'polyline') {\n            lineFeatures.push(graphic);\n        }\n        if (graphic.geometry.type === 'polygon') {\n            polygonFeatures.push(graphic);\n        }\n    });\n    points.applyEdits({ deleteFeatures: pointFeatures }).then(() => {\n        points.refresh();\n    });\n    lines.applyEdits({ deleteFeatures: lineFeatures }).then(() => {\n        lines.refresh();\n    });\n    polygons.applyEdits({ deleteFeatures: polygonFeatures }).then(() => {\n        polygons.refresh();\n    });\n};\n\nexport const getInitialSettings = (): any => {\n    return {\n        pointSize: 10,\n        pointFillEnabled: true,\n        pointFillColor: '#FF0000',\n        pointOutlineColor: '#000000',\n        pointFillOpacity: 0.5,\n        pointOutlineOpacity: 1,\n        pointOutlineWidth: 1,\n        lineOutlineOpacity: 1,\n        lineWidth: 2,\n        lineColor: '#FF0000',\n\n        polygonFillEnabled: true,\n        polygonFillOpacity: 0.5,\n        polygonOutlineOpacity: 1,\n        polygonOutlineWidth: 2,\n        polygonOutlineColor: '#000000',\n        polygonFillColor: '#FF0000',\n    };\n};\n\nconst updatePointRenderer = (settings: any) => {\n    const pointRenderer = (points.renderer as __esri.SimpleRenderer).clone();\n    const symbol: __esri.SimpleMarkerSymbol = pointRenderer.symbol as __esri.SimpleMarkerSymbol;\n\n    symbol.color = Color.fromHex(settings.pointFillColor);\n    if (!settings.pointFillEnabled) {\n        symbol.color.a = 0;\n    } else {\n        symbol.color.a = settings.pointFillOpacity;\n    }\n    symbol.outline.color = Color.fromHex(settings.pointOutlineColor);\n    symbol.outline.color.a = settings.pointOutlineOpacity;\n    symbol.outline.width = settings.pointOutlineWidth;\n    symbol.size = settings.pointSize;\n    points.renderer = pointRenderer;\n};\n\nconst updatePolygonRenderer = (settings: any) => {\n    const polygonRenderer = (polygons.renderer as __esri.SimpleRenderer).clone();\n    const symbol: __esri.SimpleFillSymbol = polygonRenderer.symbol as __esri.SimpleFillSymbol;\n    if (settings.polygonFillEnabled) {\n        symbol.style = 'solid';\n    } else {\n        symbol.style = 'none';\n    }\n    symbol.color = Color.fromHex(settings.polygonFillColor);\n    symbol.color.a = settings.polygonFillOpacity;\n    symbol.outline.color = Color.fromHex(settings.polygonOutlineColor);\n    symbol.outline.color.a = settings.polygonOutlineOpacity;\n    symbol.outline.width = settings.polygonOutlineWidth;\n    polygons.renderer = polygonRenderer;\n};\n\nconst updateLineRenderer = (settings: any) => {\n    const lineRenderer = (lines.renderer as __esri.SimpleRenderer).clone();\n    const symbol: __esri.SimpleLineSymbol = lineRenderer.symbol as __esri.SimpleLineSymbol;\n    symbol.color = Color.fromHex(settings.lineColor);\n    symbol.color.a = settings.lineOutlineOpacity;\n    symbol.width = settings.lineWidth;\n    lines.renderer = lineRenderer;\n};\n\nexport const settingsChanged = (settings: any, geometryType: string) => {\n    if (geometryType === 'point') {\n        updatePointRenderer(settings);\n    }\n    if (geometryType === 'polygon') {\n        updatePolygonRenderer(settings);\n    }\n    if (geometryType === 'line') {\n        updateLineRenderer(settings);\n    }\n};\nexport const createSketchWidget = (ref: any, view: __esri.MapView): Sketch => {\n    view.map.addMany([points, lines, polygons, graphics]);\n    const sketch = new Sketch({\n        container: ref.current as HTMLDivElement,\n        view: view,\n        layer: graphics,\n    });\n    sketch.on('create', (event: __esri.SketchCreateEvent) => {\n        sketchOnCreate(event, view);\n    });\n    sketch.on('update', sketchOnUpdate);\n    sketch.on('delete', sketchOnDelete);\n    return sketch;\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { getInitialSettings } from './utils/sketch';\n\nexport const SketchSettings = (props: any) => {\n    const [geometryType, setGeometryType] = useState(null);\n    const ref = useRef<HTMLDivElement>(null);\n    const settings = useRef(getInitialSettings());\n    // const [settings, setSettings] = useState<any>(() => {\n    //     const initialSettings = getInitialSettings();\n    //     return initialSettings;\n    // });\n    const sliderChanged = (event: any) => {\n        const attribute = (event.target as HTMLElement).getAttribute('name');\n        if (attribute) {\n            settings.current = { ...settings.current, ...{ [attribute]: parseFloat(event.target.value) } };\n            requestAnimationFrame(() => {\n                props.settingsChanged(settings.current);\n            });\n        }\n    };\n    const colorChanged = (event: any) => {\n        const attribute = (event.target as HTMLElement).getAttribute('name');\n        if (attribute) {\n            settings.current = { ...settings.current, ...{ [attribute]: event.target.value } };\n            requestAnimationFrame(() => {\n                props.settingsChanged(settings.current);\n            });\n        }\n    };\n    const switchChanged = (event: any) => {\n        const attribute = (event.target as HTMLElement).getAttribute('name');\n        if (attribute) {\n            settings.current = { ...settings.current, ...{ [attribute]: (event as any).detail.switched } };\n            requestAnimationFrame(() => {\n                props.settingsChanged(settings.current);\n            });\n        }\n    };\n    useEffect(() => {\n        setGeometryType(props.geometryType);\n        requestAnimationFrame(() => {\n            ref.current?.querySelectorAll('calcite-slider').forEach((element: Element) => {\n                element.addEventListener('calciteSliderChange', sliderChanged);\n            });\n            ref.current?.querySelectorAll('calcite-color-picker').forEach((element: Element) => {\n                element.addEventListener('calciteColorPickerChange', colorChanged);\n            });\n            ref.current?.querySelectorAll('calcite-switch').forEach((element: Element) => {\n                element.addEventListener('calciteSwitchChange', switchChanged);\n            });\n        });\n\n        return () => {\n            ref.current?.querySelectorAll('calcite-slider').forEach((slider: Element) => {\n                slider.removeEventListener('calciteSliderChange', sliderChanged);\n            });\n            ref.current?.querySelectorAll('calcite-slider').forEach((picker: Element) => {\n                picker.removeEventListener('calciteColorPickerChange', colorChanged);\n            });\n            ref.current?.querySelectorAll('calcite-switch').forEach((element: Element) => {\n                element.addEventListener('calciteSwitchChange', switchChanged);\n            });\n        };\n    }, [props.geometryType]); // only after initial render\n    return (\n        <div ref={ref} className=\"panel\">\n            {geometryType === 'point' ? (\n                <div>\n                    <calcite-block key=\"symbol\" heading=\"Symbol\" open collapsible>\n                        <calcite-block-section text=\"Size\">\n                            <calcite-slider\n                                min=\"0\"\n                                max=\"30\"\n                                value={settings.current.pointSize}\n                                step=\"0.1\"\n                                label=\"Size\"\n                                label-handles=\"\"\n                                ticks=\"0\"\n                                page-step=\"5\"\n                                name=\"pointSize\"\n                                snap=\"\"\n                            ></calcite-slider>\n                        </calcite-block-section>\n                    </calcite-block>\n                    <calcite-block key=\"fill\" heading=\"Fill\" open collapsible>\n                        <calcite-label\n                            layout=\"inline-space-between\"\n                            class=\"sc-calcite-label-h sc-calcite-label-s\"\n                            dir=\"ltr\"\n                            alignment=\"start\"\n                            status=\"idle\"\n                            scale=\"m\"\n                            calcite-hydrated=\"\"\n                        >\n                            <label className=\"sc-calcite-label-h sc-calcite-label-s sc-calcite-label\">\n                                Enable fill\n                                <calcite-switch\n                                    name=\"pointFillEnabled\"\n                                    value=\"enabled\"\n                                    switched={settings.current.pointFillEnabled}\n                                    bind={this}\n                                    aria-checked=\"true\"\n                                    dir=\"ltr\"\n                                    tabindex=\"0\"\n                                    scale=\"m\"\n                                    calcite-hydrated=\"\"\n                                ></calcite-switch>\n                            </label>\n                        </calcite-label>\n                        {settings.current.pointFillEnabled ? (\n                            <div>\n                                <calcite-block-section key=\"color\" text=\"Color\">\n                                    <calcite-color-picker\n                                        dir=\"ltr\"\n                                        hide-channels=\"\"\n                                        hide-saved=\"\"\n                                        scale=\"m\"\n                                        value={settings.current.pointFillColor}\n                                        appearance=\"default\"\n                                        name=\"pointFillColor\"\n                                        calcite-hydrated=\"\"\n                                        id=\"pointFill\"\n                                    ></calcite-color-picker>\n                                </calcite-block-section>\n                                <calcite-block-section key=\"transparency\" text=\"Fill transparency\">\n                                    <calcite-slider\n                                        min=\"0\"\n                                        max=\"1\"\n                                        value={settings.current.pointFillOpacity}\n                                        bind={this}\n                                        step=\"0.1\"\n                                        label=\"Opacity\"\n                                        label-handles=\"\"\n                                        ticks=\"0\"\n                                        page-step=\"5\"\n                                        name=\"fill-opacity\"\n                                        id=\"pointFillOpacity\"\n                                        snap=\"\"\n                                    ></calcite-slider>\n                                </calcite-block-section>{' '}\n                            </div>\n                        ) : (\n                            ''\n                        )}\n                    </calcite-block>\n                    <calcite-block key=\"outline\" heading=\"Outline\" open collapsible>\n                        <calcite-block-section text=\"Color\">\n                            <calcite-color-picker\n                                dir=\"ltr\"\n                                hide-channels=\"\"\n                                hide-saved=\"\"\n                                scale=\"m\"\n                                value={settings.current.pointOutlineColor}\n                                appearance=\"default\"\n                                name=\"pointOutlineColor\"\n                                calcite-hydrated=\"\"\n                            ></calcite-color-picker>\n                        </calcite-block-section>\n                        <calcite-block-section text=\"Outline transparency\">\n                            <calcite-slider\n                                min=\"0\"\n                                max=\"1\"\n                                value={settings.current.pointOutlineOpacity}\n                                bind={this}\n                                step=\"0.1\"\n                                label=\"Opacity\"\n                                label-handles=\"\"\n                                ticks=\"0\"\n                                page-step=\"5\"\n                                name=\"pointOutlineOpacity\"\n                                snap=\"\"\n                            ></calcite-slider>\n                        </calcite-block-section>\n                        <calcite-block-section text=\"Stroke\">\n                            <calcite-slider\n                                min=\"0\"\n                                max=\"10\"\n                                value={settings.current.pointOutlineWidth}\n                                step=\"0.1\"\n                                label=\"Width\"\n                                label-handles=\"\"\n                                ticks=\"0\"\n                                page-step=\"5\"\n                                name=\"pointOutlineWidth\"\n                                snap=\"\"\n                            ></calcite-slider>\n                        </calcite-block-section>\n                    </calcite-block>\n                </div>\n            ) : (\n                ''\n            )}\n            {geometryType === 'polyline' ? (\n                <div>\n                    <calcite-block key=\"line\" heading=\"Line\" open collapsible>\n                        <calcite-block-section text=\"Color\">\n                            <calcite-color-picker\n                                dir=\"ltr\"\n                                hide-channels=\"\"\n                                hide-saved=\"\"\n                                scale=\"m\"\n                                value={settings.current.lineColor}\n                                appearance=\"default\"\n                                name=\"lineColor\"\n                                calcite-hydrated=\"\"\n                            ></calcite-color-picker>\n                        </calcite-block-section>\n\n                        <calcite-block-section text=\"Line transparency\">\n                            <calcite-slider\n                                min=\"0\"\n                                max=\"1\"\n                                value={settings.current.lineOutlineOpacity}\n                                bind={this}\n                                step=\"0.1\"\n                                label=\"Opacity\"\n                                label-handles=\"\"\n                                ticks=\"0\"\n                                page-step=\"5\"\n                                name=\"lineOutlineOpacity\"\n                                snap=\"\"\n                            ></calcite-slider>\n                        </calcite-block-section>\n                        <calcite-block-section text=\"Stroke\">\n                            <calcite-slider\n                                min=\"0\"\n                                max=\"10\"\n                                value={settings.current.lineWidth}\n                                bind={this}\n                                step=\"0.1\"\n                                label=\"Width\"\n                                label-handles=\"\"\n                                ticks=\"0\"\n                                page-step=\"5\"\n                                name=\"lineWidth\"\n                                snap=\"\"\n                            ></calcite-slider>\n                        </calcite-block-section>\n                    </calcite-block>\n                </div>\n            ) : (\n                ''\n            )}\n            {geometryType === 'polygon' ? (\n                <div>\n                    <calcite-block key=\"fill\" heading=\"Fill\" open collapsible>\n                        <calcite-label\n                            layout=\"inline-space-between\"\n                            class=\"sc-calcite-label-h sc-calcite-label-s\"\n                            dir=\"ltr\"\n                            alignment=\"start\"\n                            status=\"idle\"\n                            scale=\"m\"\n                            calcite-hydrated=\"\"\n                        >\n                            <label className=\"sc-calcite-label-h sc-calcite-label-s sc-calcite-label\">\n                                Enable fill\n                                <calcite-switch\n                                    name=\"polygonFillEnabled\"\n                                    value=\"enabled\"\n                                    switched={settings.current.polygonFillEnabled}\n                                    bind={this}\n                                    aria-checked=\"true\"\n                                    dir=\"ltr\"\n                                    tabindex=\"0\"\n                                    scale=\"m\"\n                                    calcite-hydrated=\"\"\n                                ></calcite-switch>\n                            </label>\n                        </calcite-label>\n                        {settings.current.polygonFillEnabled ? (\n                            <div>\n                                <calcite-block-section key=\"color\" text=\"Color\">\n                                    <calcite-color-picker\n                                        dir=\"ltr\"\n                                        hide-channels=\"\"\n                                        hide-saved=\"\"\n                                        scale=\"m\"\n                                        value={settings.current.polygonFillColor}\n                                        appearance=\"default\"\n                                        name=\"polygonFillColor\"\n                                        calcite-hydrated=\"\"\n                                    ></calcite-color-picker>\n                                </calcite-block-section>\n                                <calcite-block-section key=\"transparency\" text=\"Fill transparency\">\n                                    <calcite-slider\n                                        min=\"0\"\n                                        max=\"1\"\n                                        value={settings.current.polygonFillOpacity}\n                                        bind={this}\n                                        step=\"0.1\"\n                                        label=\"Opacity\"\n                                        label-handles=\"\"\n                                        ticks=\"0\"\n                                        page-step=\"5\"\n                                        name=\"polygonFillOpacity\"\n                                        snap=\"\"\n                                    ></calcite-slider>\n                                </calcite-block-section>\n                            </div>\n                        ) : (\n                            ''\n                        )}\n                    </calcite-block>\n                    <calcite-block key=\"outline\" heading=\"Outline\" open collapsible>\n                        <calcite-block-section text=\"Color\">\n                            <calcite-color-picker\n                                dir=\"ltr\"\n                                hide-channels=\"\"\n                                hide-saved=\"\"\n                                scale=\"m\"\n                                value={settings.current.polygonOutlineColor}\n                                appearance=\"default\"\n                                name=\"polygonOutlineColor\"\n                                calcite-hydrated=\"\"\n                            ></calcite-color-picker>\n                        </calcite-block-section>\n                        <calcite-block-section text=\"Outline transparency\">\n                            <calcite-slider\n                                min=\"0\"\n                                max=\"1\"\n                                value={settings.current.polygonOutlineOpacity}\n                                bind={this}\n                                step=\"0.1\"\n                                label=\"Opacity\"\n                                label-handles=\"\"\n                                ticks=\"0\"\n                                page-step=\"5\"\n                                name=\"polygonOutlineOpacity\"\n                                snap=\"\"\n                            ></calcite-slider>\n                        </calcite-block-section>\n                        <calcite-block-section text=\"Stroke\">\n                            <calcite-slider\n                                min=\"0\"\n                                max=\"10\"\n                                value={settings.current.polygonOutlineWidth}\n                                bind={this}\n                                step=\"0.1\"\n                                label=\"Width\"\n                                label-handles=\"\"\n                                ticks=\"0\"\n                                page-step=\"5\"\n                                name=\"polygonOutlineWidth\"\n                                snap=\"\"\n                            ></calcite-slider>\n                        </calcite-block-section>\n                    </calcite-block>\n                </div>\n            ) : (\n                ''\n            )}\n        </div>\n    );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { SketchSettings } from './SketchSettings';\nimport { createSketchWidget, settingsChanged, sketchHandles } from './utils/sketch';\nexport const Sketch = (props: any) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const sketchRef = useRef<__esri.Sketch>();\n    const [geometryType, setGeometryType] = useState<string | null>(null);\n    const activeToolChanged = (activeTool: string) => {\n        if (['rectangle', 'circle'].includes(activeTool)) {\n            setGeometryType('polygon');\n        } else if (activeTool) {\n            setGeometryType(activeTool);\n        }\n    };\n    useEffect(() => {\n        const sketch: __esri.Sketch = createSketchWidget(ref, props.view);\n        sketchHandles.push(sketch.watch('activeTool', activeToolChanged));\n        sketchRef.current = sketch;\n        return () => {\n            sketchHandles.forEach((handle) => {\n                handle.remove();\n            });\n        };\n    }, []);\n\n    return (\n        <div className=\"panel\">\n            <div ref={ref}></div>\n\n            <calcite-label>\n                Text Label\n                <calcite-input id=\"labelInput\" placeholder=\"Label\" type=\"textarea\"></calcite-input>\n            </calcite-label>\n            <SketchSettings\n                settingsChanged={(settings: any) => {\n                    if (geometryType) {\n                        settingsChanged(settings, geometryType);\n                    }\n                }}\n                geometryType={geometryType}\n            />\n        </div>\n    );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef } from 'react';\nimport BasemapGallery from '@arcgis/core/widgets/BasemapGallery';\nimport { basemapChanged, basemapSelected, createAlert } from './utils/basemaps';\nexport const Basemaps = (props: any) => {\n    const ref = useRef<HTMLDivElement>(null);\n    let selectedTab = 'basemaps';\n    useEffect(() => {\n        const basemapGallery = new BasemapGallery({\n            container: ref.current as HTMLDivElement,\n            view: props.view,\n        });\n        createAlert();\n        document?.querySelector('calcite-combobox')?.addEventListener('calciteComboboxItemChange', (event: any) => {\n            const tab = (event as any).detail.value;\n            //setSelectedTab(tab);\n            selectedTab = tab;\n            basemapSelected(tab, props.view, basemapGallery);\n        });\n        basemapGallery.watch('activeBasemap', (activeBasemap: __esri.Basemap) => {\n            basemapChanged(activeBasemap, props.view, selectedTab);\n        });\n\n        return () => {\n            console.log('cleanup');\n        };\n    }); // only after initial render\n    return (\n        <div className=\"panel\">\n            <calcite-combobox\n                label=\"demo combobox\"\n                selection-mode=\"single\"\n                allow-custom-values=\"false\"\n                scale=\"m\"\n                max-items=\"0\"\n                dir=\"ltr\"\n                calcite-hydrated=\"\"\n            >\n                <calcite-combobox-item\n                    icon=\"layer-basemap\"\n                    value=\"basemaps\"\n                    text-label=\"Basemaps\"\n                    aria-hidden=\"\"\n                    dir=\"ltr\"\n                    scale=\"m\"\n                    tabindex=\"-1\"\n                    calcite-hydrated=\"\"\n                    key=\"basemaps\"\n                    selected\n                ></calcite-combobox-item>\n                <calcite-combobox-item\n                    icon=\"image-layer\"\n                    value=\"imagery\"\n                    key=\"imagery\"\n                    text-label=\"Imagery\"\n                    aria-hidden=\"\"\n                    dir=\"ltr\"\n                    scale=\"m\"\n                    tabindex=\"-1\"\n                    calcite-hydrated=\"\"\n                ></calcite-combobox-item>\n            </calcite-combobox>\n            <div ref={ref}></div>\n        </div>\n    );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef, useState } from 'react';\nimport Measurement from '@arcgis/core/widgets/Measurement';\nimport CoordinateConversion from '@arcgis/core/widgets/CoordinateConversion';\nimport './Measure.scss';\nexport const Measure = (props: any) => {\n    const measureRef = useRef<HTMLDivElement>(null);\n    const coordRef = useRef<HTMLDivElement>(null);\n\n    const [widget, setWidget] = useState<string>();\n    useEffect(() => {\n        const measurement = new Measurement({\n            container: measureRef.current as HTMLDivElement,\n            view: props.view,\n        });\n        new CoordinateConversion({\n            container: coordRef.current as HTMLDivElement,\n            view: props.view,\n        });\n        document.querySelector('calcite-radio-group')?.addEventListener('calciteRadioGroupChange', (e: any) => {\n            if (e.detail === 'distance') {\n                measurement.activeTool = 'distance';\n                setWidget('measurement');\n            }\n            if (e.detail === 'area') {\n                measurement.activeTool = 'area';\n                setWidget('measurement');\n            }\n            if (e.detail === 'coordinates') {\n                setWidget('coordinates');\n            }\n            if (e.detail === 'clear') {\n                measurement.clear();\n            }\n        });\n        return () => {\n            measurement && measurement.destroy();\n        };\n    }, [props.view]); // only after initial render\n    return (\n        <div className=\"panel\">\n            <calcite-radio-group layout=\"horizontal\" appearance=\"solid\" scale=\"m\" width=\"auto\">\n                <calcite-radio-group-item value=\"distance\" icon=\"measure-line\">\n                    Distance\n                </calcite-radio-group-item>\n                <calcite-radio-group-item value=\"area\" icon=\"measure-area\">\n                    Area\n                </calcite-radio-group-item>\n                <calcite-radio-group-item value=\"coordinates\" icon=\"pin\">\n                    Coordinates\n                </calcite-radio-group-item>\n                <calcite-radio-group-item value=\"clear\" icon=\"trash\">\n                    Clear\n                </calcite-radio-group-item>\n            </calcite-radio-group>\n            <div ref={measureRef} hidden={widget != 'measurement'}></div>\n            <div ref={coordRef} hidden={widget != 'coordinates'}></div>\n        </div>\n    );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef, useState } from 'react';\nimport SketchWidget from '@arcgis/core/widgets/Sketch';\nimport GraphicsLayer from '@arcgis/core/layers/GraphicsLayer';\nimport * as geometryEngine from '@arcgis/core/geometry/geometryEngine';\n\nexport const PropertySelect = (props: any) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const [distance] = useState(0);\n    useEffect(() => {\n        const sketch = new SketchWidget({\n            container: ref.current as HTMLDivElement,\n            view: props.view,\n            creationMode: 'single',\n            defaultCreateOptions: {\n                mode: 'hybrid',\n            },\n            visibleElements: {\n                selectionTools: {\n                    'lasso-selection': false,\n                    'rectangle-selection': false,\n                },\n                undoRedoMenu: false,\n            },\n            layer: new GraphicsLayer({ listMode: 'hide' }),\n        });\n        sketch.on('create', (e) => {\n            if (e.state === 'complete') {\n                let geometry = e.graphic.geometry;\n                if (distance > 0) {\n                    geometry = geometryEngine.geodesicBuffer(e.graphic.geometry, distance, 'feet') as __esri.Geometry;\n                }\n                props.geometrySet(geometry);\n            }\n        });\n        return () => {\n            console.log('cleanup');\n        };\n    }, [props.view, props.geometrySet]); // only after initial render\n    return (\n        <div className=\"panel\">\n            <div ref={ref}></div>\n            <calcite-label>\n                Buffer distance\n                <calcite-input\n                    type=\"number\"\n                    max=\"3000\"\n                    min=\"0\"\n                    step=\"50\"\n                    placeholder=\"Distance\"\n                    suffix-text=\"ft\"\n                    value={distance}\n                ></calcite-input>\n            </calcite-label>\n        </div>\n    );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef } from 'react';\nimport LegendWidget from '@arcgis/core/widgets/Legend';\n\nexport const Legend = (props: any) => {\n    const ref = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n        const legend = new LegendWidget({\n            container: ref.current as HTMLDivElement,\n            view: props.view,\n        });\n        return () => {\n            legend && legend.destroy();\n        };\n    }, [props.view]); // only after initial render\n    return <div ref={ref}></div>;\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef } from 'react';\nimport BookmarksWidget from '@arcgis/core/widgets/Bookmarks';\nimport WebMap from '@arcgis/core/WebMap';\nimport * as promiseUtils from '@arcgis/core/core/promiseUtils';\n\nconst checkSavedBookmarks = (): Promise<any[]> => {\n    return promiseUtils.create((resolve) => {\n        if (window.localStorage.getItem('imaps')) {\n            const webmap: WebMap = WebMap.fromJSON(JSON.parse(window.localStorage.getItem('imaps') as string));\n            webmap.load().then(() => {\n                resolve(webmap.bookmarks);\n            });\n        }\n    });\n};\nexport const Bookmarks = (props: any) => {\n    const ref = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n        const bookmarks = new BookmarksWidget({\n            container: ref.current as HTMLDivElement,\n            view: props.view,\n            editingEnabled: true,\n        });\n        checkSavedBookmarks().then((savedBookmarks) => {\n            bookmarks.bookmarks.removeAll();\n            bookmarks.bookmarks.addMany(savedBookmarks);\n        });\n        return () => {\n            bookmarks && bookmarks.destroy();\n        };\n    }, [props.id, props.zoom]); // only after initial render\n    return <div ref={ref}></div>;\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport const layerListItemCreated = (event: any): void => {\n    const item = event.item;\n    if (item.layer.type != 'group' && item.layer.type != undefined) {\n        const slider = document.createElement('calcite-slider');\n        slider.setAttribute('min', '0');\n        slider.setAttribute('max', '100');\n        slider.setAttribute('min-label', '0%');\n        slider.setAttribute('max-label', '100%');\n        slider.setAttribute('label-handles', '');\n        slider.setAttribute('value', Math.round(item?.layer.opacity * 100).toString());\n        slider.setAttribute('data', item.layer.id);\n        slider.addEventListener(\n            'calciteSliderUpdate',\n            (event) => {\n                item.layer.opacity = Math.round(parseInt((event?.target as any)?.getAttribute('value'))) / 100;\n            },\n            { passive: true },\n        );\n        item.panel = {\n            content: [slider, 'legend'],\n            open: item.layer.visible,\n        };\n    }\n};\nexport const filterLayers = (value: string, layerList: __esri.LayerList): void => {\n    layerList.operationalItems.forEach((item: __esri.ListItem) => {\n        if (item.layer.type === 'group') {\n            let open = false;\n            (item.layer as __esri.GroupLayer).layers.forEach((layer) => {\n                if (layer.title.toLowerCase().includes(value.toLowerCase())) {\n                    layer.listMode = 'show';\n                    open = true;\n                } else {\n                    layer.listMode = 'hide';\n                }\n            });\n            if (!value.length) {\n                item.open = false;\n                document\n                    .querySelector(`#layerListDiv_${(item as any).uid}__title`)\n                    ?.parentElement?.parentElement?.parentElement?.removeAttribute('hidden');\n            } else if (!open) {\n                item.open = false;\n                document\n                    .querySelector(`#layerListDiv_${(item as any).uid}__title`)\n                    ?.parentElement?.parentElement?.parentElement?.setAttribute('hidden', '');\n            } else {\n                item.open = true;\n                document\n                    .querySelector(`#layerListDiv_${(item as any).uid}__title`)\n                    ?.parentElement?.parentElement?.parentElement?.removeAttribute('hidden');\n            }\n        }\n    });\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef } from 'react';\nimport LayerList from '@arcgis/core/widgets/LayerList';\nimport { filterLayers, layerListItemCreated } from './utils/layers';\nimport './Layers.scss';\nexport const Layers = (props: any) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const input = useRef<HTMLCalciteInputElement>(null);\n    useEffect(() => {\n        const layerList = new LayerList({\n            container: ref.current as HTMLDivElement,\n            view: props.view,\n            listItemCreatedFunction: layerListItemCreated,\n        });\n        input.current?.addEventListener('calciteInputInput', (event: any) => {\n            filterLayers(event.target.value, layerList as LayerList);\n        });\n        return () => {\n            input.current?.removeEventListener('calciteInputInput', (event: any) => {\n                filterLayers(event.target.value, layerList as LayerList);\n            });\n            layerList && layerList.destroy();\n        };\n    }, [props.view]); // only after initial render\n    return (\n        <div className=\"panel\">\n            <div className=\"row sticky\">\n                <calcite-input\n                    ref={input}\n                    clearable\n                    placeholder=\"Filter by layer name\"\n                    scale=\"s\"\n                    id=\"layerSearch\"\n                ></calcite-input>\n                <calcite-action icon=\"viewHide\" scale=\"s\"></calcite-action>\n            </div>\n            <div ref={ref}></div>\n        </div>\n    );\n};\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport React from 'react';\n\nconst ThemeContext = React.createContext({\n    theme: 'dark',\n    setTheme: (theme: string) => {\n        theme = 'dark';\n        console.log(theme);\n    },\n});\n\nexport default ThemeContext;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport ThemeContext from '../ThemeContext';\nimport './Header.scss';\nexport const Header = (props: any) => {\n    const ref = useRef<HTMLElement>();\n    const [links, setLinks] = useState(props.links);\n    const { theme, setTheme } = useContext(ThemeContext);\n    useEffect(() => {\n        ref.current?.addEventListener('calciteDropdownSelect', (event: any) => {\n            requestAnimationFrame(() => {\n                const theme = event.target.querySelector('calcite-dropdown-item[active]').getAttribute('value');\n                setTheme(theme);\n                const styles = document.querySelectorAll('style');\n                const styleArray = Array.from(styles);\n                styleArray.forEach((style, i) => {\n                    if (style.innerHTML.includes(`--esri-calcite-theme-name: \"${theme}\"`)) {\n                        document.head.appendChild(style);\n                    }\n                });\n            });\n        });\n    }, []);\n    return (\n        <header>\n            <h2>iMAPS</h2>\n            <calcite-dropdown ref={ref} placement=\"bottom-trailing\" scale=\"m\" width=\"m\" type=\"click\">\n                <calcite-button slot=\"dropdown-trigger\">\n                    <calcite-icon icon=\"hamburger\"></calcite-icon>\n                </calcite-button>\n                {links.map((group: any) => {\n                    return (\n                        <calcite-dropdown-group selection-mode=\"none\" group-title={group.title} key={group.title}>\n                            {group.links.map((link: any) => {\n                                return (\n                                    <calcite-dropdown-item href={link.href} target=\"_blank\" key={link.title}>\n                                        {link.title}\n                                    </calcite-dropdown-item>\n                                );\n                            })}\n                        </calcite-dropdown-group>\n                    );\n                })}\n                <calcite-dropdown-group selection-mode=\"single\" group-title=\"Theme\">\n                    <calcite-dropdown-item value=\"light\" active={theme === 'light' ? '' : null}>\n                        Light\n                    </calcite-dropdown-item>\n                    <calcite-dropdown-item value=\"dark\" active={theme === 'dark' ? '' : null}>\n                        Dark\n                    </calcite-dropdown-item>\n                </calcite-dropdown-group>\n            </calcite-dropdown>\n        </header>\n    );\n};\n","export const Actions = [\n    {\n        title: 'Property Search',\n        icon: 'search',\n        isTool: false,\n        isActive: true,\n        container: 'propertySearch',\n        component: 'PropertyPanel',\n        path: '../PropertyPanel/PropertyPanel',\n        tips: [\n            { title: 'Search Categories', text: 'Select a search category to get more results as you type' },\n            { title: 'Search Categories', text: 'Select a search category to get more results as you type' },\n        ],\n    },\n    {\n        title: 'Location Search',\n        icon: 'pin',\n        isTool: false,\n        isActive: false,\n        container: 'locationSearch',\n        component: 'LocationSearch',\n        path: '../LocationSearch/LocationSearch',\n        tips: [\n            { title: 'Test', text: 'Select a search category to get more results as you type' },\n            { title: 'Test1', text: 'Select a search category to get more results as you type' },\n        ],\n    },\n    {\n        title: 'Layers',\n        icon: 'layers',\n        isTool: false,\n        isActive: false,\n        container: 'layers',\n        component: 'Layers',\n        path: '../Layers/Layers',\n    },\n    {\n        title: 'Legend',\n        icon: 'legend',\n        isTool: false,\n        isActive: false,\n        container: 'legend',\n        component: 'Legend',\n        path: '../Legend/Legend',\n    },\n    {\n        title: 'Basemaps',\n        icon: 'basemap',\n        isTool: false,\n        isActive: false,\n        container: 'basemaps',\n        component: 'Basemaps',\n        path: '../Basemaps/Basemaps',\n    },\n    {\n        title: 'Property Select',\n        icon: 'selection',\n        isTool: true,\n        isActive: false,\n        container: 'propertySelect',\n        component: 'PropertySelect',\n        path: '../PropertySelect/PropertySelect',\n    },\n    {\n        title: 'Measure',\n        icon: 'measure',\n        isTool: true,\n        isActive: false,\n        container: 'measure',\n        component: 'Measure',\n        path: '../Measure/Measure',\n    },\n    {\n        title: 'Sketch',\n        icon: 'pencil',\n        isTool: true,\n        isActive: false,\n        container: 'sketch',\n        component: 'Sketch',\n        path: '../Sketch/Sketch',\n    },\n    {\n        title: 'Bookmarks',\n        icon: 'bookmark',\n        isTool: true,\n        isActive: false,\n        container: 'bookmarks',\n        component: 'Bookmarks',\n        path: '../Bookmarks/Bookmarks',\n    },\n    {\n        title: 'Print',\n        icon: 'print',\n        isTool: true,\n        isActive: false,\n        container: 'print',\n        component: 'Print',\n        path: '../Print/Print',\n    },\n];\n\nexport const links = [\n    {\n        title: 'Help',\n        links: [\n            { title: 'Help Document', href: 'https://raleighnc.gov' },\n            { title: 'Feedback', href: 'https://arcg.is/1GurDS' },\n        ],\n    },\n    {\n        title: 'Data Download',\n        links: [\n            { title: 'Wake County Open Data', href: 'https://data-wake.opendata.arcgis.com/' },\n            { title: 'Raleigh Open Data', href: 'https://data.raleighnc.gov/' },\n        ],\n    },\n    {\n        title: 'Links',\n        links: [\n            { title: 'Wake County', href: 'https://wakegov.com' },\n            { title: 'City of Raleigh', href: 'https://raleighnc.gov/' },\n        ],\n    },\n];\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport ThemeContext from '../ThemeContext';\nimport './TipManager.scss';\nexport const TipManager = (props: any) => {\n    const ref = useRef<HTMLElement>();\n    const [title, setTitle] = useState();\n    const [tips, setTips] = useState<any[]>([]);\n    const [closed, setClosed] = useState(true);\n    const { theme } = useContext(ThemeContext);\n\n    useEffect(() => {\n        const tipManagerToggled = (event: any) => {\n            if (event.target.closed) {\n                props.tipsDismissed();\n            }\n        };\n        ref.current?.addEventListener('calciteTipManagerToggle', tipManagerToggled);\n        return () => {\n            ref.current?.removeEventListener('calciteTipManagerToggle', tipManagerToggled);\n        };\n    }, [props.tipsDimissed]);\n    useEffect(() => {\n        setTitle(props.title);\n        setTips(props.tips);\n\n        setClosed(!props.tips.length);\n    }, [props.tips]); // only after initial render\n    return (\n        <calcite-tip-manager\n            ref={ref}\n            theme={theme}\n            dir=\"ltr\"\n            intl-close=\"Close\"\n            intl-default-title={title}\n            intl-pagination-label=\"Tip\"\n            intl-next=\"Next\"\n            intl-previous=\"Previous\"\n            closed={closed ? '' : null}\n        >\n            {tips?.map((tip, i) => {\n                return (\n                    <calcite-tip heading={tip.title} key={tip.title + i}>\n                        {tip.text}\n                    </calcite-tip>\n                );\n            })}\n        </calcite-tip-manager>\n    );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport React from 'react';\nimport { Actions } from '../config/config';\n// Make sure the shape of the default value passed to\n// createContext matches the shape that the consumers expect!\nexport const AppContext = React.createContext({\n    actions: Actions,\n    setActions: (actions: any[]) => {\n        actions = Actions;\n        console.log(actions);\n    },\n});\nexport default AppContext;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { LocationSearch } from '../LocationSearch/LocationSearch';\nimport { MapView } from '../MapView/MapView';\nimport { PropertyPanel } from '../PropertyPanel/PropertyPanel';\nimport { Print } from '../Print/Print';\n\nimport './Shell.scss';\nimport { actionClicked, deactivate, initialized } from './utils/shell';\nimport { Sketch } from '../Sketch/Sketch';\nimport { Basemaps } from '../Basemaps/Basemaps';\nimport { Measure } from '../Measure/Measure';\nimport { PropertySelect } from '../PropertySelect/PropertySelect';\nimport { Legend } from '../Legend/Legend';\nimport { Bookmarks } from '../Bookmarks/Bookmarks';\nimport ReactDOM from 'react-dom';\nimport { Layers } from '../Layers/Layers';\nimport ThemeContext from '../ThemeContext';\nimport { Header } from '../Header/Header';\nimport { links } from '../../config/config';\nimport { TipManager } from '../TipManager/TipManager';\nimport ActionContext from '../ActionContext';\n\nexport const Shell = (props: any) => {\n    //const [actions, setActions] = useState(props.actions);\n    const [tips, setTips] = useState<any>([]);\n    const [tipsTitle, setTipsTitle] = useState<string>();\n\n    const [width, setWidth] = useState(window.innerWidth);\n    const [view, setView] = useState<__esri.MapView | null>(null);\n    const [viewCreated, setViewCreated] = useState(false);\n    const [selectedProperties, setSelectedProperties] = useState<__esri.Graphic[]>([]);\n\n    const { theme, setTheme } = useContext(ThemeContext);\n    const { actions, setActions } = useContext(ActionContext);\n    const propertiesSelected = (properties: __esri.Graphic[]) => {\n        setSelectedProperties([...[], ...properties]);\n        const active = actions.find((action) => {\n            return action.isActive;\n        });\n        if (active) {\n            active.isActive = false;\n        }\n        const search = actions.find((action) => {\n            return action.title === 'Property Search';\n        });\n        if (search) {\n            search.isActive = true;\n        }\n        setActions([...[], ...actions]);\n    };\n    const windowResize = () => {\n        setWidth(window.innerWidth);\n    };\n    const setWidget = (action: any) => {\n        if (action) {\n            const container = document.getElementById(action.container);\n            if (!container?.hasChildNodes()) {\n                if (action.title === 'Property Search') {\n                    ReactDOM.render(<PropertyPanel view={view} propertiesSelected={propertiesSelected} />, container);\n                }\n                if (action.title === 'Location Search') {\n                    ReactDOM.render(<LocationSearch view={view} />, container);\n                }\n                if (action.title === 'Layers') {\n                    ReactDOM.render(<Layers view={view} />, container);\n                }\n                if (action.title === 'Basemaps') {\n                    ReactDOM.render(<Basemaps view={view} />, container);\n                }\n                if (action.title === 'Legend') {\n                    ReactDOM.render(<Legend view={view} />, container);\n                }\n                if (action.title === 'Property Select') {\n                    ReactDOM.render(\n                        <PropertySelect\n                            view={view}\n                            geometrySet={(g: any) => {\n                                const container = document.getElementById('propertySearch');\n\n                                ReactDOM.render(\n                                    <PropertyPanel geometry={g} propertiesSelected={propertiesSelected} />,\n                                    container,\n                                );\n                            }}\n                        />,\n                        container,\n                    );\n                }\n                if (action.title === 'Measure') {\n                    ReactDOM.render(<Measure view={view} />, container);\n                }\n                if (action.title === 'Sketch') {\n                    ReactDOM.render(<Sketch view={view} />, container);\n                }\n                if (action.title === 'Bookmarks') {\n                    ReactDOM.render(<Bookmarks view={view} />, container);\n                }\n                if (action.title === 'Print') {\n                    ReactDOM.render(<Print view={view} />, container);\n                }\n            }\n        }\n    };\n    const tipsDismissed = () => {\n        setTips([]);\n        setTipsTitle('');\n    };\n    const showTips = () => {\n        const action = actions.find((action: any) => {\n            return action.isActive;\n        });\n        return action?.tips?.length ? (\n            <calcite-action\n                text=\"Action\"\n                label=\"Action\"\n                slot=\"header-actions-end\"\n                icon=\"lightbulb\"\n                appearance=\"solid\"\n                scale=\"m\"\n                calcite-hydrated=\"\"\n                onClick={() => {\n                    setTips([...tips, ...action.tips]);\n                    setTipsTitle(action.title);\n                }}\n            ></calcite-action>\n        ) : (\n            ''\n        );\n    };\n\n    const mapInitialized = async (mapView: __esri.MapView) => {\n        if (!viewCreated) {\n            setView(mapView);\n            setViewCreated(true);\n\n            const container = document.getElementById('propertySearch');\n            if (mapView.map) {\n                ReactDOM.render(<PropertyPanel view={mapView} propertiesSelected={propertiesSelected} />, container);\n            }\n        }\n    };\n\n    const geometryChanged = (point: __esri.Point) => {\n        const container = document.getElementById('propertySearch');\n\n        ReactDOM.render(<PropertyPanel geometry={point} propertiesSelected={propertiesSelected} />, container);\n    };\n\n    const updateTheme = () => {\n        if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n            setTheme('dark');\n            require(`@arcgis/core/assets/esri/themes/light/main.css`);\n\n            require(`@arcgis/core/assets/esri/themes/dark/main.css`);\n        } else {\n            setTheme('light');\n            require(`@arcgis/core/assets/esri/themes/dark/main.css`);\n\n            require(`@arcgis/core/assets/esri/themes/light/main.css`);\n        }\n        // if (window.matchMedia != undefined) {\n        //     window.matchMedia('(prefers-color-scheme: dark)')?.addEventListener('change', (e) => {\n        //         const newTheme = e.matches ? 'dark' : 'light';\n        //         setTheme(newTheme);\n        //         const styles = document.querySelectorAll('style');\n        //         const styleArray = Array.from(styles);\n        //         styleArray.forEach((style: any) => {\n        //             if (style.innerHTML.includes(`--esri-calcite-theme-name: \"${newTheme}\"`)) {\n        //                 document.head.appendChild(style);\n        //             }\n        //         });\n        //     });\n        // }\n    };\n\n    useEffect(() => {\n        initialized();\n        updateTheme();\n\n        window.addEventListener('resize', windowResize);\n\n        return () => {\n            window.removeEventListener('resize', windowResize);\n            deactivate();\n        };\n    }, [props.actions]);\n    return (\n        <div>\n            <calcite-shell theme={theme} className=\"shell\">\n                {width >= 1000 ? (\n                    <calcite-shell-panel slot=\"primary-panel\" position=\"start\" width-scale=\"l\" collapsed>\n                        <calcite-action-bar slot=\"action-bar\">\n                            {actions.map((action: any) => {\n                                if (action.isTool) {\n                                    return (\n                                        <calcite-action\n                                            key={action.icon}\n                                            name={action.container}\n                                            text={action.title}\n                                            icon={action.icon}\n                                            onClick={(e: any) => {\n                                                setActions([...actionClicked(e, action, props.actions)]);\n                                                setWidget(action);\n                                            }}\n                                            active={action.isActive === true ? '' : null}\n                                        ></calcite-action>\n                                    );\n                                }\n                            })}\n                        </calcite-action-bar>\n                        <calcite-panel dismissible dismissed>\n                            <div slot=\"header-content\">\n                                {\n                                    actions.find((action: any) => {\n                                        return action.isActive && action.isTool;\n                                    })?.title\n                                }\n                            </div>\n                            <div slot=\"header-trailing-content\">\n                                <calcite-action\n                                    label=\"Performs another custom action\"\n                                    text=\"Perform Another Action!\"\n                                    text-enabled\n                                    icon=\"blog\"\n                                ></calcite-action>\n                            </div>\n                            {actions.map((action: any) => {\n                                if (action.isTool) {\n                                    return (\n                                        <div\n                                            id={action.container}\n                                            key={action.container}\n                                            hidden={!action.isActive}\n                                        ></div>\n                                    );\n                                }\n                            })}\n                        </calcite-panel>\n                    </calcite-shell-panel>\n                ) : (\n                    ''\n                )}\n\n                <calcite-shell-panel slot=\"contextual-panel\" position=\"end\" width-scale=\"l\">\n                    <calcite-action-bar slot=\"action-bar\">\n                        {actions.map((action: any) => {\n                            if (!action.isTool || width < 1000) {\n                                return (\n                                    <calcite-action\n                                        key={action.icon}\n                                        text={action.title}\n                                        name={action.container}\n                                        icon={action.icon}\n                                        onClick={async (e: any) => {\n                                            setActions([...actionClicked(e, action, props.actions)]);\n                                            setWidget(action);\n                                        }}\n                                        active={action.isActive === true ? '' : null}\n                                    ></calcite-action>\n                                );\n                            }\n                        })}\n                    </calcite-action-bar>\n                    <calcite-panel dismissible>\n                        <div slot=\"header-content\">\n                            {\n                                actions.find((action: any) => {\n                                    return action.isActive;\n                                })?.title\n                            }\n                        </div>\n                        {showTips()}\n\n                        {actions.map((action: any) => {\n                            if (!action.isTool || width < 1000) {\n                                return (\n                                    <div id={action.container} key={action.container} hidden={!action.isActive}></div>\n                                );\n                            }\n                        })}\n                    </calcite-panel>\n                </calcite-shell-panel>\n\n                <div slot=\"shell-header\">\n                    <Header links={links} />\n                </div>\n                <MapView\n                    id=\"95092428774c4b1fb6a3b6f5fed9fbc4\"\n                    zoom=\"10\"\n                    initialized={mapInitialized}\n                    geometryChanged={geometryChanged}\n                    selectedProperties={selectedProperties}\n                />\n            </calcite-shell>\n            <TipManager tips={tips} title={tipsTitle} closed tipsDismissed={tipsDismissed} />\n        </div>\n    );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useState } from 'react';\nimport { Shell } from './Components/Shell/Shell';\nimport './App.scss';\nimport { Actions } from './config/config';\nimport ThemeContext from './Components/ThemeContext';\nimport ActionContext from './Components/ActionContext';\n\nfunction App() {\n    const [theme, setTheme] = useState('dark');\n    const [actions, setActions] = useState<any>(Actions);\n\n    return (\n        <ThemeContext.Provider value={{ theme, setTheme }}>\n            <ActionContext.Provider value={{ actions, setActions }}>\n                <Shell actions={actions} />\n            </ActionContext.Provider>\n        </ThemeContext.Provider>\n    );\n}\n\nexport default App;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport '@esri/calcite-components/dist';\nimport '@esri/calcite-components';\n\nimport { applyPolyfills, defineCustomElements } from '@esri/calcite-components/dist/loader';\n\n(async function init(): Promise<void> {\n    await applyPolyfills();\n    defineCustomElements(window);\n    ReactDOM.render(\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>,\n        document.getElementById('root'),\n    );\n\n    // If you want to start measuring performance in your app, pass a function\n    // to log results (for example: reportWebVitals(console.log))\n    // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n    reportWebVitals();\n})();\n"],"sourceRoot":""}