import{e as r,K as P,gZ as d,I as c,a3 as u,fB as g,a5 as _,a4 as y,as as p,y as l,a as b}from"./index-7753bab1.js";let e=class extends P{constructor(t){super(t),this.constrainResult=s=>s,this._snapPoints=null,this._frameTask=null,this._abortController=null,this._stagedPoint=null,this._snap=d(async(s,n,o,i)=>{const a=this._frameTask;if(p(a))return;const h=await a.schedule(()=>n.snap({...s,context:o,signal:i}),i);h.valid&&await a.schedule(()=>{this.stagedPoint=h.apply(),s!==this._snapPoints&&c(this._snapPoints)&&(this.stagedPoint=n.update({...this._snapPoints,context:o}))},i)})}get stagedPoint(){return this._stagedPoint}set stagedPoint(t){this._stagedPoint=this.constrainResult(t)}initialize(){var s,n;const t=this.view.type==="3d"?(n=(s=this.view)==null?void 0:s.resourceController)==null?void 0:n.scheduler:null;this._frameTask=c(t)?t.registerTask(u.SNAPPING):g}destroy(){this._abortController=_(this._abortController),this._frameTask=y(this._frameTask)}update(t,s,n){this._snapPoints=t;const{point:o,scenePoint:i}=t,a=s.update({point:o,scenePoint:i,context:n});return this.stagedPoint=a,a}async snap(t,s,n){const{point:o,scenePoint:i}=t;return this.stagedPoint=s.update({point:o,scenePoint:i,context:n}),this._snapPoints=t,p(this._abortController)&&(this._abortController=new AbortController),this._snap(t,s,n,this._abortController.signal)}async resnap(t,s){p(this._snapPoints)||await this.snap(this._snapPoints,t,s)}abort(){this._abortController=_(this._abortController),this._snapPoints=null}};r([l({constructOnly:!0})],e.prototype,"view",void 0),r([l()],e.prototype,"stagedPoint",null),r([l()],e.prototype,"constrainResult",void 0),r([l()],e.prototype,"_stagedPoint",void 0),e=r([b("esri.views.interactive.snapping.SnappingOperation")],e);export{e as h};
