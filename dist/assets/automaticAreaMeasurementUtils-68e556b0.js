import{gb as R,as as W,aB as g,cF as $,cS as C,cb as k,df as M,gc as q,gd as S,f as U,I as v}from"./index-84d82762.js";import{k as w,o as l,r as A}from"./automaticLengthMeasurementUtils-f7d9be4b.js";import{r as F}from"./earcut-61f7b102.js";import{j as x,E as B,Y as E,K as G}from"./plane-1f295e9f.js";import{S as I}from"./triangle-ac18bcbd.js";import{geodesicArea as K}from"./geometryEngine-6532c452.js";function Y(r,t=m()){return b(r,t)}function Z(r,t=m()){return b(r,t,!1)}function b(r,t,s=r.hasZ){const u=w(r.spatialReference),a=R(u);if(W(a))return null;const y=(c,o)=>!(o.length<2)&&($(c,o[0],o[1],s&&o[2]||0),!0);let p=0;for(const c of r.rings){const o=c.length;if(o<3)continue;const{positionsWorldCoords:e}=t;for(;e.length<o;)e.push(g());const h=z,f=$(D,0,0,0),j=1/o;for(let n=0;n<o;n++){if(!y(h,c[n])||!C(h,r.spatialReference,e[n],u))return null;k(f,f,e[n],j)}const d=x(e[0],e[1],f,B());if(M(E(d))===0)continue;for(let n=0;n<o;n++)G(d,f,e[n],e[n]);const i=H(e);for(let n=0;n<i.length;n+=3)p+=I(e[i[n]],e[i[n+1]],e[i[n+2]])}return l(p,a)}const z=g(),D=g();function m(){return{positionsWorldCoords:[]}}function H(r){return F(J(r),[],2)}function J(r){const t=new Float64Array(2*r.length);for(let s=0;s<r.length;++s){const u=r[s],a=2*s;t[a+0]=u[0],t[a+1]=u[1]}return t}function L(r){const{spatialReference:t}=r;return A(t,N,O,P,r)}function N(r){return l(Math.abs(q([r],"square-meters")[0]),"square-meters")}function O(r){try{return l(Math.abs(K(r,"square-meters")),"square-meters")}catch{return null}}function P(r){const t=[];return S(r,t)?l(Math.abs(q([{type:"polygon",rings:t,spatialReference:U.WGS84}],"square-meters")[0]),"square-meters"):null}function Q(r,t,s=m()){if(t==="on-the-ground"){const u=L(r);return v(u)?u:Z(r,s)}return Y(r,s)}function nr(r,t=m()){return Q(r,"on-the-ground",t)}export{Q as i,nr as u};
