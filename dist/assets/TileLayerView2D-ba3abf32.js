import{ni as w,nj as y,nk as I,nl as V,x as v,aS as H,ac as l,iu as c,aR as T,e as o,y as g,a as q}from"./index-7753bab1.js";import"./Rasterizer-2404cb3f.js";import"./EffectView-9a9cc65b.js";import"./Container-e3ecda87.js";import"./BufferPool-4d960ed1.js";import"./color-12b7e170.js";import"./WGLContainer-96eaf2e6.js";import"./vec4f32-0d1b2306.js";import"./enums-64ab819c.js";import"./Texture-280a81f5.js";import"./ProgramTemplate-2e0574b1.js";import"./MaterialKey-3f38180b.js";import"./utils-4f0216af.js";import"./VertexArrayObject-6236f727.js";import"./number-b10bd8f5.js";import"./StyleDefinition-fbc907c2.js";import"./enums-fb086c25.js";import"./MagnifierPrograms-77463854.js";import"./OrderIndependentTransparency-92d1201d.js";import"./floatRGBA-bba05acf.js";import"./webgl-debug-b1f7a2c5.js";import{a as U}from"./GraphicsView2D-ca6259e4.js";import"./AttributeStoreView-f3aaf29c.js";import"./earcut-61f7b102.js";import"./vec3f32-ad1dc57f.js";import{t as Q,o as f,n as d}from"./imageUtils-73d3e2ff.js";import{f as S}from"./LayerView2D-b33f1dd0.js";import{n as b}from"./HighlightGraphicContainer-b31291a4.js";import{u as C}from"./LayerView-cbdf5e80.js";import{i as k}from"./RefreshableLayerView-7454ec77.js";import{P as F,S as P}from"./MapServiceLayerViewHelper-62b72330.js";import{a as R}from"./drapedUtils-1e8dccc4.js";import"./_commonjsHelpers-2f3e7994.js";import"./cimAnalyzer-722d658f.js";import"./fontUtils-e3f547af.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./enums-55085e26.js";import"./alignmentUtils-ae955d28.js";import"./definitions-19bfb61c.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-7be86a04.js";import"./rasterizingUtils-f87f34e2.js";import"./VertexElementDescriptor-2925c6af.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./imageutils-6fd93b2b.js";import"./Matcher-e9338b7e.js";import"./visualVariablesUtils-12809f65.js";import"./visualVariablesUtils-adab3121.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-4a50d17a.js";import"./ExpandedCIM-cef3d690.js";import"./CircularArray-0c9f2155.js";import"./ComputedAttributeStorage-a430cba7.js";import"./arcadeTimeUtils-4fcddf82.js";import"./centroid-dd07ec07.js";import"./basicInterfaces-04e01328.js";import"./normalizeUtilsSync-cc2bb1e6.js";import"./schemaUtils-7a3def44.js";import"./util-64d9ac67.js";import"./TiledDisplayObject-5d69f8c4.js";import"./BitmapTileContainer-d50d927e.js";import"./Bitmap-21e425ac.js";import"./TileContainer-4fbb726d.js";import"./BaseGraphicContainer-07fa04bd.js";import"./FeatureContainer-21cef038.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-2efb8cde.js";import"./popupUtils-c3d678aa.js";const G=[0,0];let h=class extends k(Q(S(C))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}update(t){var e;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(e=this._highlightView)==null||e.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,i)=>this.fetchTile(e,i)}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),F(this,this.layer)){const e=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new b(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new P({createFetchPopupFeaturesQueryGeometry:(i,r)=>R(i,r,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(i,r)=>{e.graphicUpdateHandler({graphic:i,property:r})},layerView:this,updatingHandles:this.updatingHandles})}this.requestUpdate(),this.addAttachHandles(v(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(t,e){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(t,e):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):{remove(){}}}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var e;return H((e=this.layer.tileInfo)==null?void 0:e.spatialReference,t)}async doRefresh(){!this.attached||this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach(t=>this._enqueueTileFetch(t)))}isUpdating(){var t;return((t=this._fetchQueue)==null?void 0:t.updating)??!1}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(G,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(e),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,e={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:n=0}=e;if(!i)try{return await this._fetchImage(t,r)}catch(s){if(!l(s)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(n<3){const m=this._tileInfoView.getTileParentId(t.id);if(m){const u=new c(m),_=await this.fetchTile(u,{...e,resamplingLevel:n+1});return d(this._tileInfoView,_,u,t)}}throw s}const a=new c(0,0,0,0);let p;try{if(await i.fetchAvailabilityUpsample(t.level,t.row,t.col,a,{signal:r}),a.level!==t.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);p=await this._fetchImage(a,r)}catch(s){if(l(s))throw s;p=await this._fetchImage(t,r)}return this.resampling?d(this._tileInfoView,p,a,t):p}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(e){l(e)||T.getLogger(this.declaredClass).error(e)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}};o([g()],h.prototype,"_fetchQueue",void 0),o([g()],h.prototype,"resampling",null),h=o([q("esri.views.2d.layers.TileLayerView2D")],h);const Yt=h;export{Yt as default};
