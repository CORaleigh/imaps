import{ah as v,I as r,j2 as T,j3 as G,j4 as z,aB as g,aG as L,aE as A,aD as U,cg as j,d3 as q,j5 as b,dJ as B,L as P,dg as X,dm as $,d9 as E,as as m,cM as J,a1 as Q,x as M,j6 as Y,a6 as _,ae as K,av as N,bR as ee,ba as V,cu as te,e as p,dy as ie,T as ne,c2 as se,y as h,a as re,cv as O,cB as R,dc as H,d1 as ae}from"./index-84d82762.js";import{Q as oe,O as pe}from"./quat-125beff5.js";import{e as I}from"./quatf64-3363c48e.js";import{n as x}from"./sphere-52f8f52c.js";import{i as C,x as w,m as he,X as ce}from"./SnappingDragPipelineStep-65a01c0a.js";import{w as le,V as de,g as me,p as ge,a as D}from"./SnappingContext-910a0375.js";import{h as ue}from"./SnappingOperation-d3c0deb2.js";import{M as F}from"./hydratedFeatures-872b9f3f.js";function y(t,e,i=null){return r(i)?[t,e,i]:[t,e]}function Z(t,e,i=null){return r(i)?{x:t,y:e,z:i}:{x:t,y:e}}class W{constructor(e){this.spatialReference=e}mapToLocalMultiple(e){return B(e.map(i=>this.mapToLocal(i)))}get doUnnormalization(){return!1}}class ve extends W{constructor(e,i,n=null){super(i),this._defaultZ=n,this.transform=T(),this.transformInv=T(),this.transform=G(e),z(this.transformInv,this.transform)}makeMapPoint(e,i){return y(e,i,this._defaultZ)}mapToLocal(e){return Z(this.transform[0]*e[0]+this.transform[2]*e[1]+this.transform[4],this.transform[1]*e[0]+this.transform[3]*e[1]+this.transform[5])}localToMap(e){return y(this.transformInv[0]*e.x+this.transformInv[2]*e.y+this.transformInv[4],this.transformInv[1]*e.x+this.transformInv[3]*e.y+this.transformInv[5],this._defaultZ)}}class ye extends W{constructor(e,i){super(e.spatialReference),this.view=e,this.defaultZ=null,this.pWS=g(),this.tangentFrameUpWS=g(),this.tangentFrameRightWS=g(),this.tangentFrameForwardWS=g(),this.localFrameRightWS=g(),this.localFrameUpWS=g(),this.worldToLocalTransform=I(),this.localToWorldTransform=I(),this.scale=1,this.scale=e.resolution,this.referenceMapPoint=i,this.defaultZ=i.hasZ?i.z:null;const n=e.state.camera.viewRight;this.view.renderCoordsHelper.toRenderCoords(this.referenceMapPoint,this.pWS),this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS,x.X,this.tangentFrameRightWS),this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS,x.Y,this.tangentFrameUpWS),this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS,x.Z,this.tangentFrameForwardWS);const a=g();L(a,this.tangentFrameForwardWS,A(n,this.tangentFrameForwardWS)),U(this.localFrameRightWS,n,a),j(this.localFrameRightWS,this.localFrameRightWS),q(this.localFrameUpWS,this.tangentFrameForwardWS,this.localFrameRightWS),oe(this.worldToLocalTransform,this.localFrameRightWS,this.tangentFrameRightWS),pe(this.localToWorldTransform,this.worldToLocalTransform)}get doUnnormalization(){return this.view.viewingMode==="global"}makeMapPoint(e,i){return y(e,i,this.defaultZ)}mapToLocal(e){const i=g();this.view.renderCoordsHelper.toRenderCoords(new v({x:e[0],y:e[1],spatialReference:this.spatialReference}),i),b(i,i,this.worldToLocalTransform);const n=this.view.renderCoordsHelper.fromRenderCoords(i,this.view.spatialReference);return r(n)?Z(n.x/this.scale,n.y/this.scale):null}localToMap(e){const i=g();this.view.renderCoordsHelper.toRenderCoords(new v({x:e.x*this.scale,y:e.y*this.scale,spatialReference:this.spatialReference}),i),b(i,i,this.localToWorldTransform);const n=this.view.renderCoordsHelper.fromRenderCoords(i,this.view.spatialReference);return r(n)?y(n.x,n.y,this.defaultZ):null}}function Ie(t,e){if(t.type==="2d")return new ve(t.state.transform,t.spatialReference,e.length>2?e[2]:null);if(t.type==="3d"){const i=e.length>2?new v({x:e[0],y:e[1],z:e[2],spatialReference:t.spatialReference}):new v({x:e[0],y:e[1],spatialReference:t.spatialReference});return new ye(t,i)}return null}const Ce=["freehand","hybrid","click"],k="click";class fe{constructor({grabbableForEvent:e}){this.events=new P,this.interactive=!0,this.selectable=!1,this.cursor=null,this.grabbable=!0,this.grabbableForEvent=e}intersectionDistance(e,i){return 0}attach(){}detach(){}onElevationChange(){}onViewChange(){}}let o=class extends P.EventedMixin(X){constructor(t){super(t),this._createOperationCompleted=!1,this._pointerDownStates=new Set,this.isDraped=!0,this.labelOptions=new $,this.tooltipOptions=new E,this.snapToSceneEnabled=null,this.lastVertex=null,m(t.elevationInfo)&&(this.elevationInfo=J(!!t.hasZ))}initialize(){const{geometryType:t,view:e}=this,i=e.spatialReference,n="viewingMode"in e.state?e.state.viewingMode:Q.Local,a=t==="segment"||t==="multipoint"?"polyline":t;this.coordinateHelper=le(this.hasZ,this.hasM,i),this._editGeometryOperations=new de(new me(a,this.coordinateHelper)),this._snappingOperation=new ue({view:e,constrainResult:s=>{var d;return m(s)?s:(d=this._getEffectiveDrawSurface())==null?void 0:d.constrainZ(s)}}),this.handles.add(M(()=>this.stagedVertex,s=>{m(s)||this.emit("cursor-update",{updated:null,vertices:[{componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(s)}],operation:"apply",type:"vertex-update"})},{sync:!0,equals:(s,d)=>ie(s,d,C)})),this._activeComponent=new ge(i,n),this._editGeometryOperations.data.components.push(this._activeComponent);const l=this.segmentLabels;r(l)&&(l.context={view:e,editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,labelOptions:this.labelOptions},this.handles.add([M(()=>this.labelOptions.enabled,s=>{l.visible=s},ne),this.on("cursor-update",()=>{const s=this.stagedVertex;l.stagedVertex=r(s)?this.coordinateHelper.pointToVector(s):null})])),this.handles.add(this._editGeometryOperations.on(["vertex-add","vertex-update","vertex-remove"],s=>{const d=s.vertices.map(u=>({componentIndex:0,vertexIndex:u.index,coordinates:this.coordinateHelper.vectorToArray(u.pos)})),c=d.map(u=>u.coordinates);switch(s.type){case"vertex-add":this.emit(s.type,{...s,added:c,vertices:d});break;case"vertex-update":this.emit(s.type,{...s,updated:c,vertices:d});break;case"vertex-remove":this.emit(s.type,{...s,removed:c,vertices:d})}const S=this._activeComponent.getLastVertex(),f=r(S)?this.coordinateHelper.vectorToDehydratedPoint(S.pos):null;(m(f)||m(this.lastVertex)||!C(this.lastVertex,f))&&(this.lastVertex=f)})),this._manipulator=new fe({grabbableForEvent:s=>this.drawingMode!=="click"||s.pointerType==="touch"&&this._snappingEnabled&&this._pointerDownStates.size===1}),this.manipulators.add(this._manipulator),this._manipulator.grabbable=t!=="point",this.handles.add([this._createManipulatorDragPipeline(this._manipulator),this._manipulator.events.on("immediate-click",s=>this._onImmediateClick(s)),this._manipulator.events.on("immediate-double-click",s=>this._onImmediateDoubleClick(s))]),Y(this,()=>{const s=se(this.view.inputManager.latestPointerType,"mouse"),d=this._getSnappingContext(s);r(this.snappingManager)&&this.updatingHandles.addPromise(V(this._snappingOperation.resnap(this.snappingManager,d)))})}destroy(){_(this.segmentLabels),_(this._snappingOperation),this._editGeometryOperations=_(this._editGeometryOperations)}get _snappingEnabled(){return r(this.snappingManager)&&this.snappingManager.options.effectiveEnabled}get _requiresScenePoint(){const t=this._getEffectiveDrawSurface();return this.view.type==="3d"&&this.drawSurface!==t}get canRedo(){return this._editGeometryOperations.canRedo}get canUndo(){return this._editGeometryOperations.canUndo}get committedVertices(){return this._activeComponent.vertices.map(t=>this.coordinateHelper.vectorToArray(t.pos))}set drawingMode(t){this._set("drawingMode",t??k)}get interactive(){return this._manipulator.interactive}set interactive(t){this._manipulator.interactive=t}get isCompleted(){return this._createOperationCompleted}get numCommittedVertices(){return this._activeComponent.vertices.length}get numVertices(){return r(this.stagedVertex)?this._activeComponent.vertices.length+1:this._activeComponent.vertices.length}get snappingOptions(){return r(this.snappingManager)?this.snappingManager.options:null}get stagedVertex(){return this._snappingOperation.stagedPoint}set stagedVertex(t){this._snappingOperation.stagedPoint=K(t)}get updating(){return this.updatingHandles.updating}get vertices(){const t=this.committedVertices;return r(this.stagedVertex)&&t.push(this.coordinateHelper.pointToArray(this.stagedVertex)),t}cancel(){this.complete({aborted:!0})}commitStagedVertex(){if(this._snappingOperation.abort(),r(this.stagedVertex)){const{stagedVertex:t}=this;this.stagedVertex=null,this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(t))}}complete(t){const e=t&&t.aborted||!1;this._snappingOperation.abort(),r(this.snappingManager)&&this.snappingManager.doneSnapping(),this.geometryType==="segment"||this.geometryType==="point"?this.commitStagedVertex():this.stagedVertex=null;const i=this.geometryType==="multipoint"&&this.numVertices===0||this.geometryType==="polyline"&&this.numVertices<2||this.geometryType==="polygon"&&this.numVertices<3;this._createOperationCompleted=!i,(this.isCompleted||e)&&this.emit("complete",{vertices:this.vertices.map((n,a)=>({componentIndex:0,vertexIndex:a,coordinates:n})),aborted:e,type:"complete"})}onInputEvent(t){switch(t.type){case"pointer-down":this._pointerDownStates.add(t.pointerId);break;case"pointer-up":this._pointerDownStates.delete(t.pointerId)}switch(t.type){case"pointer-move":return this._onPointerMove(t);case"hold":return this._onHold(t)}}redo(){this._editGeometryOperations.redo()}undo(){r(this.snappingManager)&&this.snappingManager.doneSnapping(),this._editGeometryOperations.undo()}_closeOnClickVertexIndex(t){const e=this._activeComponent;if(this.geometryType==="polygon"&&e.vertices.length>2){if(this._vertexWithinPointerDistance(e.vertices[0].pos,t))return 0;if(this._vertexWithinPointerDistance(e.vertices[e.vertices.length-1].pos,t))return e.vertices.length-1}return null}_createManipulatorDragPipeline(t){switch(N(this.drawingMode)){case"click":return this._createManipulatorDragPipelineClick(t);case"freehand":return this._createManipulatorDragPipelineFreehand(t);case"hybrid":return this._createManipulatorDragPipelineHybrid(t)}}_createManipulatorDragPipelineClick(t){return w(t,(e,i,n,a)=>{const l=a==="touch"&&this._snappingEnabled;if(this.isCompleted||!l)return;const{snappingStep:s,cancelSnapping:d}=he({predicate:()=>l,snappingManager:this.snappingManager,snappingContext:new D({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:a,visualizer:this.snappingVisualizer}),updatingHandles:this.updatingHandles,useZ:!this._requiresScenePoint});n=n.next(c=>(l&&r(this.snappingManager)&&this.snappingManager.doneSnapping(),c)).next(d),i.next(this._screenToMapDragEventStep()).next(c=>(c.action==="start"&&(this.stagedVertex=c.mapStart,(this.geometryType==="segment"||l&&this.numVertices===0)&&this.commitStagedVertex()),c)).next(ce(this.view,this.elevationInfo)).next(...s).next(c=>(l&&(this.stagedVertex=c.mapEnd,c.action==="end"&&this.commitStagedVertex()),c)).next(c=>(c.action==="end"&&(this.geometryType!=="segment"&&this.geometryType!=="point"||this.complete()),c))})}_createManipulatorDragPipelineFreehand(t){return w(t,(e,i)=>{this.isCompleted||i.next(this._screenToMapDragEventStep()).next(n=>(n.action==="start"&&(m(this.stagedVertex)&&(this.stagedVertex=n.mapStart),this.geometryType==="segment"&&this.commitStagedVertex()),n)).next(n=>{switch(n.action){case"start":case"update":this.stagedVertex=n.mapEnd,this.geometryType!=="polygon"&&this.geometryType!=="polyline"||this.commitStagedVertex();break;case"end":this.complete()}return n})})}_createManipulatorDragPipelineHybrid(t){return w(t,(e,i)=>{this.isCompleted||i.next(this._screenToMapDragEventStep()).next(n=>(n.action==="start"&&(m(this.stagedVertex)&&(this.stagedVertex=n.mapStart),this.commitStagedVertex()),n)).next(n=>{switch(n.action){case"start":case"update":this.stagedVertex=n.mapEnd,this.geometryType!=="polygon"&&this.geometryType!=="polyline"||this.commitStagedVertex();break;case"end":this.geometryType!=="segment"&&this.geometryType!=="point"||this.complete()}return n})})}get _drawAtFixedElevation(){return(this.geometryType==="segment"||this.geometryType==="polygon")&&this.numCommittedVertices>0}_getEffectiveDrawSurface(){if(m(this.elevationDrawSurface))return this.drawSurface;if(!this.coordinateHelper.hasZ())return this.elevationDrawSurface.defaultZ=null,this.elevationDrawSurface;let t=this.defaultZ,e=!1;return r(this.elevationInfo)&&this.elevationInfo.mode==="absolute-height"&&(e=!0),r(this.snapToSceneEnabled)&&(e=this.snapToSceneEnabled),r(this.elevationInfo)&&this.elevationInfo.mode==="on-the-ground"&&(e=!1),this._drawAtFixedElevation&&(t=this.coordinateHelper.getZ(this._activeComponent.vertices[0].pos),e=!1),e?this.drawSurface:(this.elevationDrawSurface.defaultZ=t,this.elevationDrawSurface)}_mapToScreen(t){var e;return(e=this._getEffectiveDrawSurface())==null?void 0:e.mapToScreen(t)}_onHold(t){this._snappingOperation.abort(),this.drawingMode==="click"&&t.pointerType==="touch"&&this._snappingEnabled&&(this.stagedVertex=t.mapPoint),t.stopPropagation()}_onImmediateClick(t){if(t.pointerType==="mouse"&&t.button===2||this._manipulator.dragging)return;const e=this._activeComponent,i=this._closeOnClickVertexIndex(t.screenPoint);if(r(i))return t.stopPropagation(),void this.complete();const n=this._screenToMap(t.screenPoint);if(r(n))switch(this.drawingMode){case"freehand":this.geometryType==="point"&&(r(this.stagedVertex)?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(n)),this.complete());break;case"click":case"hybrid":this._snappingOperation.abort(),r(this.stagedVertex)?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(n)),(this.geometryType==="point"||this.geometryType==="segment"&&e.vertices.length===2||this.geometryType==="segment"&&this.drawingMode==="hybrid"&&e.vertices.length===1)&&this.complete()}t.stopPropagation()}_onImmediateDoubleClick(t){this._manipulator.dragging||this.geometryType==="point"||(this.complete(),t.stopPropagation())}_onPointerMove(t){var c;const e=ee(t.x,t.y),i=this._snappingOperation;if(this._manipulator.dragging||this._pointerDownStates.has(t.pointerId)||this._manipulator.grabbing||!this._manipulator.interactive)return void i.abort();t.stopPropagation();const n=this._closeOnClickVertexIndex(e);if(r(n))return this._closeOnVertex(n),void i.abort();const a=this._screenToMap(e),l=this._requiresScenePoint?(c=this.drawSurface)==null?void 0:c.screenToMap(e):null;if(this._manipulator.cursor=r(a)?"crosshair":null,m(a))return void i.abort();const s=this.snappingManager;if(m(s))return this.stagedVertex=a,void i.abort();const d=this._getSnappingContext(t.pointerType);this.updatingHandles.addPromise(V(i.snap({point:a,scenePoint:l},s,d)))}_closeOnVertex(t){this.stagedVertex=null;const e={componentIndex:0,vertexIndex:t,coordinates:this.coordinateHelper.vectorToArray(this._activeComponent.vertices[t].pos)};this.emit("cursor-update",{updated:null,vertices:[e],operation:"apply",type:"vertex-update"})}_screenToMap(t){var e;return(e=this._getEffectiveDrawSurface())==null?void 0:e.screenToMap(t)}_screenToMapDragEventStep(){let t=null;return e=>{if(e.action==="start"&&(t=this._screenToMap(e.screenStart)),m(t))return null;const i=this._screenToMap(e.screenEnd);return r(i)?{...e,mapStart:t,mapEnd:i}:null}}_vertexWithinPointerDistance(t,e){const n=this._mapToScreen(this.coordinateHelper.vectorToDehydratedPoint(t));return!!r(n)&&_e(n,e,25)}_getSnappingContext(t){const e=this._drawAtFixedElevation?te(this.elevationDrawSurface,({defaultZ:i})=>i):null;return new D({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:t,visualizer:this.snappingVisualizer,selfSnappingZ:r(e)?{value:e,elevationInfo:this.elevationInfo}:null})}};function _e(t,e,i){const n=t.x-e.x,a=t.y-e.y;return n*n+a*a<=i}p([h()],o.prototype,"_snappingEnabled",null),p([h()],o.prototype,"defaultZ",void 0),p([h()],o.prototype,"isDraped",void 0),p([h({value:k})],o.prototype,"drawingMode",null),p([h({constructOnly:!0})],o.prototype,"elevationDrawSurface",void 0),p([h({constructOnly:!0})],o.prototype,"elevationInfo",void 0),p([h({constructOnly:!0,type:$})],o.prototype,"labelOptions",void 0),p([h({constructOnly:!0,type:E})],o.prototype,"tooltipOptions",void 0),p([h({constructOnly:!0})],o.prototype,"geometryType",void 0),p([h({constructOnly:!0})],o.prototype,"hasM",void 0),p([h({constructOnly:!0})],o.prototype,"hasZ",void 0),p([h({constructOnly:!0})],o.prototype,"manipulators",void 0),p([h({constructOnly:!0})],o.prototype,"drawSurface",void 0),p([h({constructOnly:!0})],o.prototype,"segmentLabels",void 0),p([h({constructOnly:!0})],o.prototype,"snappingManager",void 0),p([h({constructOnly:!0})],o.prototype,"snappingVisualizer",void 0),p([h()],o.prototype,"snapToSceneEnabled",void 0),p([h()],o.prototype,"_snappingOperation",void 0),p([h()],o.prototype,"stagedVertex",null),p([h()],o.prototype,"lastVertex",void 0),p([h()],o.prototype,"updating",null),p([h({constructOnly:!0})],o.prototype,"view",void 0),o=p([re("esri.views.draw.DrawOperation")],o);class De{constructor(e,i,n,a=null){this._elevationInfo=e,this.defaultZ=i,this._view=n,this._excludeGraphics=a}screenToMap(e){if(r(this.defaultZ))return this._view.sceneIntersectionHelper.intersectElevationFromScreen(O(e.x,e.y),this._elevationInfo,this.defaultZ,this._excludeGraphics);const i=this._view.sceneIntersectionHelper.intersectElevationFromScreen(O(e.x,e.y),this._elevationInfo,0,this._excludeGraphics);return r(i)&&(i.z=void 0),i}mapToScreen(e){const i=R(e.x,e.y,H(this._view,e,this._elevationInfo),e.spatialReference);return this._view.toScreen(i)}constrainZ(e){const{defaultZ:i}=this;return r(i)&&e.z!==i&&((e=F(e)).z=i),e}}class Pe{constructor(e,i,n=[]){this.view=e,this.elevationInfo=i,this.exclude=n}screenToMap(e){const i=this.view.toMap(e,{exclude:this.exclude});return r(i)&&(i.z=ae(i,this.view,this.elevationInfo)),i}mapToScreen(e){let i=e;return r(this.elevationInfo)&&(i=R(e.x,e.y,H(this.view,e,this.elevationInfo),e.spatialReference)),this.view.toScreen(i)}constrainZ(e){return e}}class $e{constructor(e,i=!1,n=0){this.view=e,this.hasZ=i,this.defaultZ=n,this.mapToScreen=a=>e.toScreen(a),this.screenToMap=i?a=>{const l=e.toMap(a);return l.z=n,l}:a=>e.toMap(a)}constrainZ(e){const{defaultZ:i}=this;return this.hasZ&&e.z!==i&&((e=F(e)).z=i),e}}export{Z as R,Ie as S,$e as a,Ce as b,Pe as c,k as e,o as k,De as o};
