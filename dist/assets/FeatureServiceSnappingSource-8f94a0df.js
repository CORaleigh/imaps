import{cF as B,et as W,e as n,y as a,a as S,K as E,I as h,f$ as Z,as as T,x as m,dq as J,iW as F,dg as q,B as b,S as G,g as A,c as Q,dY as X,qe as K,bc as Y,f_ as j,w as ee,c3 as te,a_ as ie,iZ as se,cB as ne,nd as ae,pW as re,m1 as oe,ag as le,ah as de,ai as he,G as ue,ab as L,qf as pe,ba as w,cu as ce,fp as ye,Q as ge,cE as fe,cQ as U,qg as ve,qh as we}from"./index-84d82762.js";import{W as _e,$ as me,a as Se}from"./boundedPlane-c5a4c5a6.js";import{i as be,p as Ie}from"./queryEngineUtils-eaedb757.js";import{h as Oe}from"./WorkerHandle-61a7c51a.js";import"./sphere-52f8f52c.js";import"./mat3f64-221ce671.js";import"./mat4f64-65d35099.js";import"./quatf64-3363c48e.js";import"./lineSegment-d5143484.js";import"./plane-1f295e9f.js";import"./VertexSnappingCandidate-8eb455b1.js";import"./PointSnappingHint-78f462a1.js";function k(e,t){return me(t.extent,V),Se(V,B(ke,e.x,e.y,0))}const V=_e(),ke=W();let y=class extends E{get tiles(){const t=this.tilesCoveringView,i=h(this.pointOfInterest)?this.pointOfInterest:this.view.center;return t.sort((o,s)=>k(i,o)-k(i,s)),t}_scaleEnabled(){return Z(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||T(this.tileInfo))return[];if(!this._scaleEnabled)return[];const{spans:t,lodInfo:i}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:o}=i,s=[];for(const{row:l,colFrom:r,colTo:d}of t)for(let u=r;u<=d;u++){const g=i.normalizeCol(u),f=new F(null,o,l,g);this.tileInfo.updateTileInfo(f),s.push(f)}return s}get tileInfo(){var t;return((t=this.view.featuresTilingScheme)==null?void 0:t.tileInfo)??null}get tileSize(){return h(this.tileInfo)?this.tileInfo.size[0]:256}constructor(t){super(t),this.pointOfInterest=null}initialize(){this.addHandles(m(()=>{var t,i;return(i=(t=this.view)==null?void 0:t.state)==null?void 0:i.viewpoint},()=>this.notifyChange("tilesCoveringView"),J))}};n([a({readOnly:!0})],y.prototype,"tiles",null),n([a({readOnly:!0})],y.prototype,"_scaleEnabled",null),n([a({readOnly:!0})],y.prototype,"tilesCoveringView",null),n([a({readOnly:!0})],y.prototype,"tileInfo",null),n([a({readOnly:!0})],y.prototype,"tileSize",null),n([a({constructOnly:!0})],y.prototype,"view",void 0),n([a({constructOnly:!0})],y.prototype,"layer",void 0),n([a()],y.prototype,"pointOfInterest",void 0),y=n([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],y);var C;(function(e){e[e.INVISIBLE=0]="INVISIBLE",e[e.VISIBLE_WHEN_EXTENDED=1]="VISIBLE_WHEN_EXTENDED",e[e.VISIBLE_ON_SURFACE=2]="VISIBLE_ON_SURFACE"})(C||(C={}));let v=class extends q{get tiles(){const e=this.tilesCoveringView,t=this._effectivePointOfInterest;if(h(t)){const i=e.map(o=>k(t,o));for(let o=1;o<i.length;o++)if(i[o-1]>i[o])return e.sort((s,l)=>k(t,s)-k(t,l)),e.slice()}return e}get tilesCoveringView(){var e,t;return this._filterTiles((t=(e=this.view.featureTiles)==null?void 0:e.tiles)==null?void 0:t.toArray()).map(He)}get tileInfo(){var e;return((e=this.view.featureTiles)==null?void 0:e.tilingScheme.toTileInfo())??null}get tileSize(){var e;return((e=this.view.featureTiles)==null?void 0:e.tileSize)??256}get _effectivePointOfInterest(){var t;const e=this.pointOfInterest;return h(e)?e:(t=this.view.pointsOfInterest)==null?void 0:t.focus.location}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.handles.add(m(()=>this.view.featureTiles,e=>{this.handles.remove(D),e&&this.handles.add(e.addClient(),D)},b))}_filterTiles(e){return T(e)?[]:e.filter(t=>Math.abs(t.measures.screenRect[3]-t.measures.screenRect[1])>$e&&t.measures.visibility===C.VISIBLE_ON_SURFACE)}};function He({lij:[e,t,i],extent:o}){return new F(`${e}/${t}/${i}`,e,t,i,o)}n([a({readOnly:!0})],v.prototype,"tiles",null),n([a({readOnly:!0})],v.prototype,"tilesCoveringView",null),n([a({readOnly:!0})],v.prototype,"tileInfo",null),n([a({readOnly:!0})],v.prototype,"tileSize",null),n([a({constructOnly:!0})],v.prototype,"view",void 0),n([a()],v.prototype,"pointOfInterest",void 0),n([a()],v.prototype,"_effectivePointOfInterest",null),v=n([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],v);const $e=50,D="feature-tiles",Ee=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let I=class extends E{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=Ee.map(e=>new G({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=l=>{if(h(l.label))return l.label;let r=l.lij.toString();return h(l.loadPriority)&&(r+=` (${l.loadPriority})`),r},t=this.getTiles(),i=new Array,o=new Set((this._labels.size,this._labels.keys()));t.forEach((l,r)=>{const d=l.lij.toString();o.delete(d);const u=l.lij[0],g=l.geometry;if(this.enablePolygons&&!this._polygons.has(d)){const f=new A({geometry:g,symbol:this._symbols[u%this._symbols.length]});this._polygons.set(d,f),i.push(f)}if(this.enableLabels){const f=e(l),N=r/(t.length-1),P=j(0,200,N),z=j(20,6,N)/.75,M=h(l.loadPriority)&&l.loadPriority>=t.length,R=new Q([P,M?0:P,M?0:P]),x=this.view.type==="3d"?()=>new X({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new K({text:f,halo:{color:"white",size:1/.75},material:{color:R},size:z})]}):()=>new Y({text:f,haloColor:"white",haloSize:1/.75,color:R,size:z}),H=this._labels.get(d);if(H){const O=x();(T(H.symbol)||JSON.stringify(O)!==JSON.stringify(H.symbol))&&(H.symbol=O)}else{const O=new A({geometry:g.extent.center,symbol:x()});this._labels.set(d,O),i.push(O)}}});const s=new Array;o.forEach(l=>{const r=this._polygons.get(l);r!=null&&(s.push(r),this._polygons.delete(l));const d=this._labels.get(l);d!=null&&(s.push(d),this._labels.delete(l))}),this.view.graphics.removeMany(s),this.view.graphics.addMany(i)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};n([a({constructOnly:!0})],I.prototype,"view",void 0),n([a({readOnly:!0})],I.prototype,"updating",void 0),n([a()],I.prototype,"enabled",null),I=n([S("esri.views.support.TileTreeDebugger")],I);let $=class extends I{constructor(e){super(e),this._handles=new ee}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this._handles.add(te(()=>clearInterval(e)))}destroy(){this._handles.destroy()}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(s=>{e.set(s.data.id,s.featureCount)}),this._debugInfo.pendingTiles.forEach(s=>{e.set(s.data.id,s.featureCount),t.set(s.data.id,s.state)});const i=s=>{const l=t.get(s),r=e.get(s)??"?";return l?`${l}:${r}
${s}`:`store:${r}
${s}`},o=new Map;return this._debugInfo.storedTiles.forEach(s=>{o.set(s.data.id,s.data)}),this._debugInfo.pendingTiles.forEach(s=>{o.set(s.data.id,s.data)}),Array.from(o.values()).map(s=>({lij:[s.level,s.row,s.col],geometry:ie.fromExtent(se(s.extent,this.view.spatialReference)),label:i(s.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};n([a({constructOnly:!0})],$.prototype,"handle",void 0),$=n([S("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],$);let p=class extends q{get updating(){return this.updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:o}of t)for(const{z:s}of o)i.push(s);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this._editId=0}destroy(){this._workerHandle.destroy()}initialize(){this._workerHandle=new Te(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.points,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.handles.add([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){var s;const i=this._serviceInfoFromLayer(e.layer);if(T(i))return;const o={configuration:this._convertConfiguration(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:(s=e.layer.elevationInfo)==null?void 0:s.toJSON()};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",o,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=this._convertConfiguration(e);await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const i=e.point,o={distance:e.distance,mode:e.mode,point:ne(i[0],i[1],i[2],e.coordinateHelper.spatialReference.toJSON()),types:e.types,filter:h(e.filter)?e.filter.toJSON():null};return this._workerHandle.invoke(o,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:h(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async applyEdits(e,t){var r,d,u;const i=this._editId++,o={id:i};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",o,t));const s=await this.updatingHandles.addPromise(ae(e.result,t)),l={id:i,edits:{addedFeatures:((r=s.addedFeatures)==null?void 0:r.map(({objectId:g})=>g).filter(h))??[],deletedFeatures:((d=s.deletedFeatures)==null?void 0:d.map(({objectId:g,globalId:f})=>({objectId:g,globalId:f})))??[],updatedFeatures:((u=s.updatedFeatures)==null?void 0:u.map(({objectId:g})=>g).filter(h))??[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",l,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}_convertConfiguration(e){return{filter:h(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}_serviceInfoFromLayer(e){var t,i;return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:((t=e.parsedUrl)==null?void 0:t.path)??"",fields:e.fields.map(o=>o.toJSON()),geometryType:re.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:(i=e.timeInfo)==null?void 0:i.toJSON()}}};n([a({constructOnly:!0})],p.prototype,"schedule",void 0),n([a({constructOnly:!0})],p.prototype,"hasZ",void 0),n([a({constructOnly:!0})],p.prototype,"elevationAlignPointsInFeatures",void 0),n([a({constructOnly:!0})],p.prototype,"queryForSymbologySnapping",void 0),n([a({readOnly:!0})],p.prototype,"updating",null),n([a({readOnly:!0})],p.prototype,"availability",void 0),n([a()],p.prototype,"_workerHandleUpdating",void 0),p=n([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],p);class Te extends Oe{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let _=class extends E{get tiles(){return[new F("0/0/0",0,0,0,oe(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new le({origin:new de({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new he({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};n([a({readOnly:!0})],_.prototype,"tiles",null),n([a({readOnly:!0})],_.prototype,"tileInfo",null),n([a({readOnly:!0})],_.prototype,"tileSize",null),n([a({constructOnly:!0})],_.prototype,"layer",void 0),n([a()],_.prototype,"pointOfInterest",void 0),_=n([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],_);let c=class extends ue(E){get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){var e;return((e=this._workerHandle)==null?void 0:e.updating)||this.updatingHandles.updating}get configuration(){const{view:e}=this,t=h(e)?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:t}}get availability(){var e;return((e=this._workerHandle)==null?void 0:e.availability)??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._workerHandle=null,this._debug=null}initialize(){let e;const t=this.view;if(h(t))switch(t.type){case"2d":this._tilesOfInterest=new y({view:t,layer:this._layer}),e=this._workerHandle=new p;break;case"3d":{const{resourceController:i}=t,o=this._layer,s=t.whenLayerView(o);this._tilesOfInterest=new v({view:t}),e=this._workerHandle=new p({schedule:r=>i.immediate.schedule(r),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(r,d)=>{const u=await s;return L(d),u.elevationAlignPointsInFeatures(r,d)},queryForSymbologySnapping:async(r,d)=>{const u=await s;return L(d),u.queryForSymbologySnapping(r,d)}});const l=new we(null);s.then(r=>l.set(r)),this.addHandles([t.elevationProvider.on("elevation-change",({context:r})=>{const{elevationInfo:d}=o;pe(r,d)&&w(e.notifyElevationSourceChange())}),m(()=>o.elevationInfo,()=>w(e.notifyElevationSourceChange()),b),m(()=>ce(l.get(),({processor:r})=>r==null?void 0:r.renderer),()=>w(e.notifySymbologyChange()),b),m(()=>ye(l.get(),!1,r=>r.symbologySnappingSupported),r=>w(e.setSymbologySnappingSupported(r)),b),ge(()=>{var r;return(r=fe(l.get()))==null?void 0:r.layer},["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}else this._tilesOfInterest=new _({layer:this._layer}),e=this._workerHandle=new p;this.handles.add([U(e)]),w(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this.updatingHandles.add(()=>this._updateTilesParameters,()=>w(e.updateTiles(this._updateTilesParameters,null)),b),this.handles.add([m(()=>this.configuration,i=>w(e.configure(i,null)),J)]),h(t)&&this.handles.add(m(()=>ve.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new $({view:t,handle:e}),this.handles.add(U(this._debug),"debug")):!i&&this._debug&&this.handles.remove("debug")},b)),this.handles.add(this.layerSource.layer.on("apply-edits",i=>{w(e.applyEdits(i,null))}))}refresh(){var e;(e=this._workerHandle)==null||e.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,point:o}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(o);const s=this._getGroundElevation;return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(l=>be(l,s))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}get _getGroundElevation(){return Ie(this.view)}};n([a({constructOnly:!0})],c.prototype,"spatialReference",void 0),n([a({constructOnly:!0})],c.prototype,"layerSource",void 0),n([a({constructOnly:!0})],c.prototype,"view",void 0),n([a()],c.prototype,"_tilesOfInterest",void 0),n([a({readOnly:!0})],c.prototype,"_updateTilesParameters",null),n([a({readOnly:!0})],c.prototype,"updating",null),n([a({readOnly:!0})],c.prototype,"configuration",null),n([a({readOnly:!0})],c.prototype,"availability",null),n([a()],c.prototype,"_getGroundElevation",null),c=n([S("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],c);export{c as FeatureServiceSnappingSource};
