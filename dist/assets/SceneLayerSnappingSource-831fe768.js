import{kA as L,e as s,y as n,a as w,dg as v,qj as C,qk as b,aB as m,a4 as E,a5 as H,as as f,cQ as _,cu as I,f6 as x,K as A,ab as O,I as $}from"./index-84d82762.js";import{h as S}from"./WorkerHandle-61a7c51a.js";import{D as u}from"./workerHelper-e33d2952.js";import{f as D}from"./edgeProcessing-35d8264c.js";import{E as R}from"./sphere-52f8f52c.js";import{r as V}from"./VertexSnappingCandidate-8eb455b1.js";import"./BufferView-578ce2f0.js";import"./InterleavedLayout-1996db1f.js";import"./types-e1c0a5bf.js";import"./deduplicate-2d2e364b.js";import"./Indices-27da97a1.js";import"./VertexAttribute-15d1866a.js";import"./glUtil-7a9be557.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./mat3f64-221ce671.js";import"./mat4f64-65d35099.js";import"./quatf64-3363c48e.js";import"./PointSnappingHint-78f462a1.js";class P extends S{constructor(e){super("EdgeProcessingWorker","extract",{extract:r=>[r.dataBuffer],extractComponentsEdgeLocations:r=>[r.dataBuffer],extractEdgeLocations:r=>[r.dataBuffer]},e)}async process(e,r,i){if(i)return D(e);const a=await this.invoke(new g(e),r);return this._unpackOutput(a)}async extractEdgeLocations(e,r){const i=await this.invokeMethod("extractEdgeLocations",new g(e),r);return u(i)}async extractComponentsEdgeLocations(e,r){const i=await this.invokeMethod("extractComponentsEdgeLocations",new g(e),r);return u(i)}_unpackOutput(e){return{regular:{instancesData:u(e.regular.instancesData),lodInfo:{lengths:new Float32Array(e.regular.lodInfo.lengths)}},silhouette:{instancesData:u(e.silhouette.instancesData),lodInfo:{lengths:new Float32Array(e.silhouette.lodInfo.lengths)}},averageEdgeLength:e.averageEdgeLength}}}class g{constructor(e){this.dataBuffer=e.data.buffer,this.writerSettings=e.writerSettings,this.skipDeduplicate=e.skipDeduplicate,this.indices=Array.isArray(e.indices)?e.indices:e.indices.buffer,this.indicesType=Array.isArray(e.indices)?"Array":L(e.indices)?"Uint32Array":"Uint16Array",this.indicesLength=e.indicesLength}}let d=class extends v{constructor(t){super(t),this.availability=0,this._ids=new Set}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new j(this.schedule,{fetchAllEdgeLocations:(t,e)=>this._fetchAllEdgeLocations(t,e)})}async fetchCandidates(t,e){const r=t.coordinateHelper,{point:i}=t,a=B;this.renderCoordsHelper.toRenderCoords(i,r.spatialReference,a);const h=t.distance,c=typeof h=="number"?h:h.distance,p=await this._workerHandle.invoke({bounds:R(a[0],a[1],a[2],c),types:t.types},e);return p.candidates.sort((y,k)=>y.distance-k.distance),p.candidates.map(y=>this._convertCandidate(r,y))}async add(t,e){this._ids.add(t.id),await this._workerHandle.invokeMethod("add",t,e)}async remove(t,e){this._ids.delete(t.id),await this._workerHandle.invokeMethod("remove",t,e)}_convertCandidate(t,e){switch(e.type){case"edge":return new C({objectId:e.objectId,targetPoint:this._convertRenderCoordinate(t,e.target),edgeStart:this._convertRenderCoordinate(t,e.start),edgeEnd:this._convertRenderCoordinate(t,e.end),isDraped:!1});case"vertex":return new V({objectId:e.objectId,targetPoint:this._convertRenderCoordinate(t,e.target),isDraped:!1})}}_convertRenderCoordinate({spatialReference:t},e){const r=m();return this.renderCoordsHelper.fromRenderCoords(e,r,t),b(r)}async _fetchAllEdgeLocations(t,e){const r=[],i=[];for(const{id:a,uid:h}of t.components)this._ids.has(a)&&r.push((async()=>{const c=await this.fetchEdgeLocations(a,e.signal),p=c.locations.buffer;return i.push(p),{id:a,uid:h,objectIds:c.objectIds,locations:p,origin:c.origin,type:c.type}})());return{result:{components:(await Promise.all(r)).filter(({id:a})=>this._ids.has(a))},transferList:i}}};s([n({constructOnly:!0})],d.prototype,"renderCoordsHelper",void 0),s([n({constructOnly:!0})],d.prototype,"fetchEdgeLocations",void 0),s([n({constructOnly:!0})],d.prototype,"schedule",void 0),s([n({readOnly:!0})],d.prototype,"availability",void 0),d=s([w("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],d);class j extends S{constructor(e,r){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:r})}}const B=m();let o=class extends v{get updating(){return this.updatingHandles.updating}constructor(t){super(t),this.availability=1,this._abortController=new AbortController}destroy(){this._tracker=E(this._tracker),this._abortController=H(this._abortController)}initialize(){const{view:t}=this,e=t.resourceController;this._edgeWorker=new P(r=>e.immediate.schedule(r)),this._workerHandle=new d({renderCoordsHelper:this.view.renderCoordsHelper,schedule:r=>e.immediate.schedule(r),fetchEdgeLocations:async(r,i)=>{if(f(this._tracker))throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(r,this._edgeWorker,i)}}),this.updatingHandles.addPromise(this._setupLayerView()),this.handles.add([_(this._workerHandle),_(this._edgeWorker)])}async fetchCandidates(t,e){return this._workerHandle.fetchCandidates(t,e)}refresh(){}async _setupLayerView(){if(this.destroyed)return;const t=I(this._abortController,r=>r.signal),e=await this.getLayerView();f(e)||x(t)||(this._tracker=e.trackSnappingSources({add:(r,i)=>{this.updatingHandles.addPromise(this._workerHandle.add({id:r,bounds:i},t))},remove:r=>{this.updatingHandles.addPromise(this._workerHandle.remove({id:r},t))}}))}};s([n({constructOnly:!0})],o.prototype,"getLayerView",void 0),s([n({constructOnly:!0})],o.prototype,"view",void 0),s([n({readOnly:!0})],o.prototype,"updating",null),s([n({readOnly:!0})],o.prototype,"availability",void 0),o=s([w("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],o);let l=class extends A{get updating(){return this._i3sSources.some(t=>t.updating)}constructor(t){super(t),this.availability=1,this._i3sSources=[]}destroy(){this._i3sSources.forEach(t=>t.destroy()),this._i3sSources.length=0}initialize(){const{view:t}=this,e=this.layerSource.layer;this._i3sSources=e.type==="building-scene"?this._getBuildingSceneI3SSources(t,e):[this._getSceneLayerI3SSource(t,e)]}async fetchCandidates(t,e){const r=await Promise.all(this._i3sSources.map(i=>i.fetchCandidates(t,e)));return O(e),r.flat()}refresh(){this._i3sSources.forEach(t=>t.refresh())}_getBuildingSceneI3SSources(t,e){return e.allSublayers.toArray().map(r=>r.type==="building-component"?new o({getLayerView:async()=>(await t.whenLayerView(e)).whenSublayerView(r),view:t}):null).filter($)}_getSceneLayerI3SSource(t,e){return new o({getLayerView:async()=>{const r=await t.whenLayerView(e);return r.type==="scene-layer-graphics-3d"?void 0:r},view:t})}};s([n({constructOnly:!0})],l.prototype,"layerSource",void 0),s([n({constructOnly:!0})],l.prototype,"view",void 0),s([n({readOnly:!0})],l.prototype,"updating",null),s([n({readOnly:!0})],l.prototype,"availability",void 0),l=s([w("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],l);export{l as SceneLayerSnappingSource};
