import{e as O,y as z,J as $t,a as Lt,l as jt,ad as Et,I as $,as as H,ae as Nt,aR as Z,av as ft,bz as qt,P as nt,ab as Gt,ca as Ot,aq as Wt,lO as It,ap as zt}from"./index-84d82762.js";import{s as gt}from"./pixelRangeUtils-03719dd8.js";let yt=class{constructor(e=null,n=null,r=null){this.minValue=e,this.maxValue=n,this.noDataValue=r}};var tt;let q=tt=class extends jt{static createEmptyBand(t,e){return new(tt.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){var t;return(t=this.pixels)==null?void 0:t.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new Et("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new yt)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(n=>this._calculateBandStatistics(n,this.mask));const t=this.mask;let e=0;if($(t))for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[e,n]=gt(t),r=this.pixels,a=this.width*this.height,s=r.length;let l,c,o;const h=[];for(let i=0;i<s;i++){o=tt.createEmptyBand(t,a),l=r[i];for(let u=0;u<a;u++)c=l[u],o[u]=c>n?n:c<e?e:c;h.push(o)}this.pixels=h,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(H(t)||t.length===0||!e||e.length===0)return this;const r=e.length,a=t.some(l=>l>=e.length),s=r===t.length&&!t.some((l,c)=>l!==c);return a||s?this:new tt({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map(l=>e[l]),statistics:n&&t.map(l=>n[l])})}clone(){const t=new tt({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;$(this.mask)&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const n=tt.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const r=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=r?this.pixels[e].slice(0,this.pixels[e].length):new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=Nt(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:r,pixels:a}=this;if(!t||!a||!a.length)return void Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,l,c,o;s=l=c=a[0],a.length>=3?(l=a[1],c=a[2]):a.length===2&&(l=a[1]);const h=new Uint32Array(t),i=this.width*this.height;if(s.length===i)if($(e)&&e.length===i)if(n)for(o=0;o<i;o++){const u=e[o];if(u){const p=u/255;h[o]=r?u<<24|c[o]*p<<16|l[o]*p<<8|s[o]*p:u<<24|c[o]<<16|l[o]<<8|s[o]}}else for(o=0;o<i;o++)e[o]&&(h[o]=255<<24|c[o]<<16|l[o]<<8|s[o]);else for(o=0;o<i;o++)h[o]=255<<24|c[o]<<16|l[o]<<8|s[o];else Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:r}=this;if(!t||!e||!e.length)return void Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const a=this.pixelType;let s=1,l=0,c=1;if(r&&r.length>0){for(const d of r)if(d.minValue!=null&&(l=Math.min(l,d.minValue)),d.maxValue!=null&&d.minValue!=null){const g=d.maxValue-d.minValue;c=Math.max(c,g)}s=255/c}else{let d=255;a==="s8"?(l=-128,d=127):a==="u16"?d=65535:a==="s16"?(l=-32768,d=32767):a==="u32"?d=4294967295:a==="s32"?(l=-2147483648,d=2147483647):a==="f32"?(l=-34e38,d=34e38):a==="f64"&&(l=-Number.MAX_VALUE,d=Number.MAX_VALUE),s=255/(d-l)}const o=new Uint32Array(t),h=this.width*this.height;let i,u,p,f,m;if(i=u=p=e[0],i.length!==h)return Z.getLogger(this.declaredClass).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(u=e[1],e.length>=3&&(p=e[2]),$(n)&&n.length===h)for(f=0;f<h;f++)n[f]&&(o[f]=255<<24|(p[f]-l)*s<<16|(u[f]-l)*s<<8|(i[f]-l)*s);else for(f=0;f<h;f++)o[f]=255<<24|(p[f]-l)*s<<16|(u[f]-l)*s<<8|(i[f]-l)*s;else if($(n)&&n.length===h)for(f=0;f<h;f++)m=(i[f]-l)*s,n[f]&&(o[f]=255<<24|m<<16|m<<8|m);else for(f=0;f<h;f++)m=(i[f]-l)*s,o[f]=255<<24|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e||!e.length)return Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let r,a,s,l;r=a=s=e[0],e.length>=3?(a=e[1],s=e[2]):e.length===2&&(a=e[1]);const c=this.width*this.height;if(r.length!==c)return Z.getLogger(this.declaredClass).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let o=0;if($(n)&&n.length===c)for(l=0;l<c;l++)t[o++]=r[l],t[o++]=a[l],t[o++]=s[l],t[o++]=1&n[l];else for(l=0;l<c;l++)t[o++]=r[l],t[o++]=a[l],t[o++]=s[l],t[o++]=1}_calculateBandStatistics(t,e){let n=1/0,r=-1/0;const a=t.length;let s,l=0;if($(e))for(s=0;s<a;s++)e[s]&&(l=t[s],n=l<n?l:n,r=l>r?l:r);else for(s=0;s<a;s++)l=t[s],n=l<n?l:n,r=l>r?l:r;return new yt(n,r)}};O([z({json:{write:!0}})],q.prototype,"width",void 0),O([z({json:{write:!0}})],q.prototype,"height",void 0),O([z({json:{write:!0}})],q.prototype,"pixelType",void 0),O([$t("pixelType")],q.prototype,"castPixelType",null),O([z({json:{write:!0}})],q.prototype,"validPixelCount",void 0),O([z({json:{write:!0}})],q.prototype,"mask",void 0),O([z({json:{write:!0}})],q.prototype,"maskIsAlpha",void 0),O([z({json:{write:!0}})],q.prototype,"pixels",void 0),O([z()],q.prototype,"premultiplyAlpha",void 0),O([z({json:{write:!0}})],q.prototype,"statistics",void 0),O([z({json:{write:!0}})],q.prototype,"depthCount",void 0),O([z({json:{write:!0}})],q.prototype,"noDataValues",void 0),O([z({json:{write:!0}})],q.prototype,"bandMasks",void 0),q=tt=O([Lt("esri.layers.support.PixelBlock")],q);const D=q;var kt,Mt;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(kt||(kt={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(Mt||(Mt={}));const we=6;function L(t){return $(t)&&t.declaredClass==="esri.layers.support.PixelBlock"&&t.pixels&&t.pixels.length>0}function ye(t,e){if(!(e!=null&&e.length)||!L(t))return t;const n=t.pixels.length;return e&&e.some(r=>r>=n)||n===1&&e.length===1&&e[0]===0?t:n!==e.length||e.some((r,a)=>r!==a)?new D({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map(r=>t.pixels[r]),statistics:t.statistics&&e.map(r=>t.statistics[r])}):t}function ke(t){if(!(t!=null&&t.length)||t.some(i=>!L(i)))return null;if(t.length===1)return $(t[0])?t[0].clone():null;const e=t,{width:n,height:r,pixelType:a}=e[0];if(e.some(i=>i.width!==n||i.height!==r))return null;const s=e.map(({mask:i})=>i).filter(i=>i!=null);let l=null;s.length&&(l=new Uint8Array(n*r),l.set(s[0]),s.length>1&&St(s.slice(1),l));const c=[];e.forEach(({pixels:i})=>c.push(...i));const o=e.map(({statistics:i})=>i).filter(i=>i==null?void 0:i.length),h=[];return o.forEach(i=>h.push(...i)),new D({pixelType:a,width:n,height:r,mask:l,pixels:c,statistics:h.length?h:null})}function Me(t){if(!t)return;const e=t.colormap;if(!e||e.length===0)return;const n=e.sort((u,p)=>u[0]-p[0]);let r=0;n[0][0]<0&&(r=n[0][0]);const a=Math.max(256,n[n.length-1][0]-r+1),s=new Uint8Array(4*a),l=[];let c,o=0,h=0;const i=n[0].length===5;if(a>65536)return n.forEach(u=>{l[u[0]-r]=i?u.slice(1):u.slice(1).concat([255])}),{indexed2DColormap:l,offset:r,alphaSpecified:i};if(t.fillUnspecified)for(c=n[h],o=c[0]-r;o<a;o++)s[4*o]=c[1],s[4*o+1]=c[2],s[4*o+2]=c[3],s[4*o+3]=i?c[4]:255,o===c[0]-r&&(c=h===n.length-1?c:n[++h]);else for(o=0;o<n.length;o++)c=n[o],h=4*(c[0]-r),s[h]=c[1],s[h+1]=c[2],s[h+2]=c[3],s[h+3]=i?c[4]:255;return{indexedColormap:s,offset:r,alphaSpecified:i}}function Ae(t,e){if(!L(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),r=n.pixels;let a=n.mask;const s=n.width*n.height;if(r.length!==1)return t;const{indexedColormap:l,indexed2DColormap:c,offset:o,alphaSpecified:h}=e;let i=0;const u=r[0],p=new Uint8Array(u.length),f=new Uint8Array(u.length),m=new Uint8Array(u.length);let d,g=0;if(l){const y=l.length-1;if($(a))for(i=0;i<s;i++)a[i]&&(g=4*(u[i]-o),g<o||g>y?a[i]=0:(p[i]=l[g],f[i]=l[g+1],m[i]=l[g+2],a[i]=l[g+3]));else{for(a=new Uint8Array(s),i=0;i<s;i++)g=4*(u[i]-o),g<o||g>y?a[i]=0:(p[i]=l[g],f[i]=l[g+1],m[i]=l[g+2],a[i]=l[g+3]);n.mask=a}}else if(c)if($(a))for(i=0;i<s;i++)a[i]&&(d=c[u[i]],p[i]=d[0],f[i]=d[1],m[i]=d[2],a[i]=d[3]);else{for(a=new Uint8Array(s),i=0;i<s;i++)d=c[u[i]],p[i]=d[0],f[i]=d[1],m[i]=d[2],a[i]=d[3];n.mask=a}return n.pixels=[p,f,m],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=h,n}function be(t,e){if(!L(t))return null;const{pixels:n,mask:r}=t,a=n.length;let s=e.lut;const{offset:l}=e;s&&s[0].length===1&&(s=n.map(()=>s));const c=[],o=e.outputPixelType||"u8";for(let i=0;i<a;i++){const u=Bt(n[i],r,s[i],l||0,o);c.push(u)}const h=new D({width:t.width,height:t.height,pixels:c,mask:r,pixelType:o});return h.updateStatistics(),h}function Bt(t,e,n,r,a){const s=t.length,l=D.createEmptyBand(a,s);if(e)for(let c=0;c<s;c++)e[c]&&(l[c]=n[t[c]-r]);else for(let c=0;c<s;c++)l[c]=n[t[c]-r];return l}function ve(t,e){if(!L(t))return null;const n=t.clone(),{pixels:r}=n,a=n.width*n.height,s=e.length,l=Math.floor(s/2),c=e[Math.floor(l)],o=r[0];let h,i,u,p,f,m,d=!1;const g=new Uint8Array(a),y=new Uint8Array(a),M=new Uint8Array(a);let k=n.mask;const w=e[0].mappedColor.length===4;for(k||(k=new Uint8Array(a),k.fill(w?255:1),n.mask=k),f=0;f<a;f++)if(k[f]){for(h=o[f],d=!1,m=l,i=c,u=0,p=s-1;p-u>1;){if(h===i.value){d=!0;break}h>i.value?u=m:p=m,m=Math.floor((u+p)/2),i=e[Math.floor(m)]}d||(h===e[u].value?(i=e[u],d=!0):h===e[p].value?(i=e[p],d=!0):h<e[u].value?(d=!1,i=null):h>e[u].value&&(h<e[p].value?(i=e[u],d=!0):p===s-1?(d=!1,i=null):(i=e[p],d=!0))),d?(g[f]=i.mappedColor[0],y[f]=i.mappedColor[1],M[f]=i.mappedColor[2],k[f]=i.mappedColor[3]):g[f]=y[f]=M[f]=k[f]=0}return n.pixels=[g,y,M],n.mask=k,n.pixelType="u8",n.maskIsAlpha=w,n}function Pe(t,e){if(!L(t))return null;const{width:n,height:r}=t,{inputRanges:a,outputValues:s,outputPixelType:l,noDataRanges:c,allowUnmatched:o,isLastInputRangeInclusive:h}=e,i=t.pixels[0],u=D.createEmptyBand(l,i.length),p=t.mask,f=new Uint8Array(n*r);p?f.set(p):f.fill(255);const m=t.pixelType.startsWith("f")?1e-6:0,d=a.map(k=>k-m);d[0]=a[0],d[d.length-1]=a[a.length-1]+(h?1e-6:0);const g=a.length/2,[y,M]=gt(l);for(let k=0;k<r;k++)for(let w=0;w<n;w++){const x=k*n+w;if(f[x]){const A=i[x];let b=!1;for(let v=g-1;v>=0;v--)if(A===d[2*v]||A>d[2*v]&&A<d[2*v+1]){u[x]=s[v],b=!0;break}b||(o?u[x]=A>M?M:A<y?y:A:f[x]=0)}}if(c!=null&&c.length)for(let k=0;k<r;k++)for(let w=0;w<n;w++){const x=k*n+w;if(!p||p[x]){const A=i[x];for(let b=0;b<g;b+=2)if(A>=c[b]&&A<=c[b+1]){u[x]=0,f[x]=0;break}}}return new D({width:n,height:r,pixelType:l,pixels:[u],mask:f})}function At(t,e,n,r){const a=n!=null&&n.length>=2?new Set(n):null,s=(n==null?void 0:n.length)===1?n[0]:null,l=!!(e!=null&&e.length);for(let c=0;c<t.length;c++)if(r[c]){const o=t[c];if(l){let h=!1;for(let i=0;i<e.length;i+=2)if(o>=e[i]&&o<=e[i+1]){h=!0;break}h||(r[c]=0)}r[c]&&(o===s||a!=null&&a.has(o))&&(r[c]=0)}}function bt(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let a=!1;for(let s=0;s<t.length;s++)if(t[s][r]){a=!0;break}a||(e[r]=0)}}function St(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let a=!1;for(let s=0;s<t.length;s++)if(t[s][r]===0){a=!0;break}a&&(e[r]=0)}}function Ue(t,e){if(!L(t))return null;const{width:n,height:r,pixels:a}=t,s=n*r,l=new Uint8Array(s);t.mask?l.set(t.mask):l.fill(255);const c=a.length,{includedRanges:o,noDataValues:h,outputPixelType:i,matchAll:u,lookups:p}=e;if(p){const f=[];for(let m=0;m<c;m++){const d=p[m],g=Bt(a[m],l,d.lut,d.offset||0,"u8");f.push(g)}f.length===1?l.set(f[0]):u?bt(f,l):St(f,l)}else if(u){const f=[];for(let m=0;m<c;m++){const d=new Uint8Array(s);d.set(l),At(a[m],o==null?void 0:o.slice(2*m,2*m+2),h==null?void 0:h[m],d),f.push(d)}f.length===1?l.set(f[0]):bt(f,l)}else for(let f=0;f<c;f++)At(a[f],o==null?void 0:o.slice(2*f,2*f+2),h==null?void 0:h[f],l);return new D({width:n,height:r,pixelType:i,pixels:a,mask:l})}function Te(t){const{srcPixelType:e,inputRanges:n,outputValues:r,allowUnmatched:a,noDataRanges:s,isLastInputRangeInclusive:l,outputPixelType:c}=t;if(e!=="u8"&&e!=="s8"&&e!=="u16"&&e!=="s16")return null;const o=e.includes("16")?65536:256,h=e.includes("s")?-o/2:0,i=D.createEmptyBand(c,o),u=new Uint8Array(o);a&&u.fill(255);const[p,f]=gt(c);if(n!=null&&n.length&&(r!=null&&r.length)){const d=n.map(g=>g-1e-6);d[0]=n[0],l&&(d[d.length-1]=n[n.length-1]);for(let g=0;g<d.length;g++){const y=r[g]>f?f:r[g]<p?p:r[g],M=Math.ceil(d[2*g]-h),k=Math.floor(d[2*g+1]-h);for(let w=M;w<=k;w++)i[w]=y,u[w]=255}}if(s!=null&&s.length)for(let m=0;m<s.length;m++){const d=Math.ceil(s[2*m]-h),g=Math.floor(s[2*m+1]-h);for(let y=d;y<=g;y++)u[y]=0}return{lut:i,offset:h,mask:u}}function Ie(t,e,n){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const r=t.includes("16")?65536:256,a=t.includes("s")?-r/2:0,s=new Uint8Array(r);if(e)for(let l=0;l<e.length;l++){const c=Math.ceil(e[2*l]-a),o=Math.floor(e[2*l+1]-a);for(let h=c;h<=o;h++)s[h]=255}else s.fill(255);if(n)for(let l=0;l<n.length;l++)s[n[l]-a]=0;return{lut:s,offset:a}}function Jt(t,e,n,r,a,s,l,c){return{xmin:a<=n*t?0:a<n*t+t?a-n*t:t,ymin:s<=r*e?0:s<r*e+e?s-r*e:e,xmax:a+l<=n*t?0:a+l<n*t+t?a+l-n*t:t,ymax:s+c<=r*e?0:s+c<r*e+e?s+c-r*e:e}}function Be(t,e){if(!t||t.length===0)return null;const n=t.find(m=>m.pixelBlock);if(!n||H(n.pixelBlock))return null;const r=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,a=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,s=.01*Math.min(r,a),l=t.sort((m,d)=>Math.abs(m.extent.ymax-d.extent.ymax)>s?d.extent.ymax-m.extent.ymax:Math.abs(m.extent.xmin-d.extent.xmin)>s?m.extent.xmin-d.extent.xmin:0),c=Math.min.apply(null,l.map(m=>m.extent.xmin)),o=Math.min.apply(null,l.map(m=>m.extent.ymin)),h=Math.max.apply(null,l.map(m=>m.extent.xmax)),i=Math.max.apply(null,l.map(m=>m.extent.ymax)),u={x:Math.round((e.xmin-c)/r),y:Math.round((i-e.ymax)/a)},p={width:Math.round((h-c)/r),height:Math.round((i-o)/a)},f={width:Math.round((e.xmax-e.xmin)/r),height:Math.round((e.ymax-e.ymin)/a)};return Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==l.length||u.x<0||u.y<0||p.width<f.width||p.height<f.height?null:{extent:e,pixelBlock:Xt(l.map(m=>m.pixelBlock),p,{clipOffset:u,clipSize:f})}}function pt(t,e,n,r,a,s){const{width:l,height:c}=n.block,{x:o,y:h}=n.offset,{width:i,height:u}=n.mosaic,p=Jt(l,c,r,a,o,h,i,u);let f=0,m=0;if(s){const d=s.hasGCSSShiftTransform?360:s.halfWorldWidth??0,g=l*s.resolutionX,y=s.startX+r*g;y<d&&y+g>d?m=s.rightPadding:y>=d&&(f=s.leftMargin-s.rightPadding,m=0)}if(p.xmax-=m,typeof e!="number")for(let d=p.ymin;d<p.ymax;d++){const g=(a*c+d-h)*i+(r*l-o)+f,y=d*l;for(let M=p.xmin;M<p.xmax;M++)t[g+M]=e[y+M]}else for(let d=p.ymin;d<p.ymax;d++){const g=(a*c+d-h)*i+(r*l-o)+f;for(let y=p.xmin;y<p.xmax;y++)t[g+y]=e}}function Xt(t,e,n={}){const{clipOffset:r,clipSize:a,alignmentInfo:s,blockWidths:l}=n;if(l)return Ht(t,e,{blockWidths:l});const c=t.find(b=>L(b));if(H(c))return null;const o=a?a.width:e.width,h=a?a.height:e.height,i=c.width,u=c.height,p=e.width/i,f=e.height/u,m={offset:r||{x:0,y:0},mosaic:a||e,block:{width:i,height:u}},d=c.pixelType,g=D.getPixelArrayConstructor(d),y=c.pixels.length,M=[];let k,w;for(let b=0;b<y;b++){w=new g(o*h);for(let v=0;v<f;v++)for(let P=0;P<p;P++){const U=t[v*p+P];L(U)&&(k=U.pixels[b],pt(w,k,m,P,v,s))}M.push(w)}let x;if(t.some(b=>H(b)||$(b.mask)&&b.mask.length>0)){x=new Uint8Array(o*h);for(let b=0;b<f;b++)for(let v=0;v<p;v++){const P=t[b*p+v],U=$(P)?P.mask:null;$(U)?pt(x,U,m,v,b,s):pt(x,P?1:0,m,v,b,s)}}const A=new D({width:o,height:h,pixels:M,pixelType:d,mask:x});return A.updateStatistics(),A}function Ht(t,e,n){const r=t.find(f=>$(f));if(H(r))return null;const a=t.some(f=>!$(f)||!!f.mask),{width:s,height:l}=e,c=a?new Uint8Array(s*l):null,{blockWidths:o}=n,h=[],i=r.getPlaneCount(),u=D.getPixelArrayConstructor(r.pixelType);if(a)for(let f=0,m=0;f<t.length;m+=o[f],f++){const d=t[f];if(!L(d))continue;const g=ft(d.mask);for(let y=0;y<l;y++)for(let M=0;M<o[f];M++)c[y*s+M+m]=g==null?255:g[y*d.width+M]}for(let f=0;f<i;f++){const m=new u(s*l);for(let d=0,g=0;d<t.length;g+=o[d],d++){const y=t[d];if(!L(y))continue;const M=y.pixels[f];if(M!=null)for(let k=0;k<l;k++)for(let w=0;w<o[d];w++)m[k*s+w+g]=M[k*y.width+w]}h.push(m)}const p=new D({width:s,height:l,mask:c,pixels:h,pixelType:r.pixelType});return p.updateStatistics(),p}function Se(t,e,n){if(!L(t))return null;const{width:r,height:a}=t,s=e.x,l=e.y,c=n.width+s,o=n.height+l;if(s<0||l<0||c>r||o>a||s===0&&l===0&&c===r&&o===a)return t;t.mask||(t.mask=new Uint8Array(r*a));const h=t.mask;for(let i=0;i<a;i++){const u=i*r;for(let p=0;p<r;p++)h[u+p]=i<l||i>=o||p<s||p>=c?0:1}return t.updateStatistics(),t}function Kt(t){if(!L(t))return null;const e=t.clone(),{width:n,height:r,pixels:a}=t,s=a[0],l=e.pixels[0],c=ft(t.mask);for(let o=2;o<r-1;o++){const h=new Map;for(let u=o-2;u<o+2;u++)for(let p=0;p<4;p++){const f=u*n+p;rt(h,s[f],c?c[f]:1)}l[o*n]=vt(h),l[o*n+1]=l[o*n+2]=l[o*n];let i=3;for(;i<n-1;i++){let u=(o-2)*n+i+1;rt(h,s[u],c?c[u]:1),u=(o-1)*n+i+1,rt(h,s[u],c?c[u]:1),u=o*n+i+1,rt(h,s[u],c?c[u]:1),u=(o+1)*n+i+1,rt(h,s[u],c?c[u]:1),u=(o-2)*n+i-3,at(h,s[u],c?c[u]:1),u=(o-1)*n+i-3,at(h,s[u],c?c[u]:1),u=o*n+i-3,at(h,s[u],c?c[u]:1),u=(o+1)*n+i-3,at(h,s[u],c?c[u]:1),l[o*n+i]=vt(h)}l[o*n+i+1]=l[o*n+i]}for(let o=0;o<n;o++)l[o]=l[n+o]=l[2*n+o],l[(r-1)*n+o]=l[(r-2)*n+o];return e.updateStatistics(),e}function vt(t){if(t.size===0)return 0;let e=0,n=-1,r=0;const a=t.keys();let s=a.next();for(;!s.done;)r=t.get(s.value),r>e&&(n=s.value,e=r),s=a.next();return n}function at(t,e,n){if(n===0)return;const r=t.get(e);r===1?t.delete(e):t.set(e,r-1)}function rt(t,e,n){n!==0&&t.set(e,t.has(e)?t.get(e)+1:1)}function Qt(t,e,n){let{x:r,y:a}=e;const{width:s,height:l}=n;if(r===0&&a===0&&l===t.height&&s===t.width)return t;const{width:c,height:o}=t,h=Math.max(0,a),i=Math.max(0,r),u=Math.min(r+s,c),p=Math.min(a+l,o);if(u<0||p<0||!L(t))return null;r=Math.max(0,-r),a=Math.max(0,-a);const{pixels:f}=t,m=s*l,d=f.length,g=[];for(let w=0;w<d;w++){const x=f[w],A=D.createEmptyBand(t.pixelType,m);for(let b=h;b<p;b++){const v=b*c;let P=(b+a-h)*s+r;for(let U=i;U<u;U++)A[P++]=x[v+U]}g.push(A)}const y=new Uint8Array(m),M=ft(t.mask);for(let w=h;w<p;w++){const x=w*c;let A=(w+a-h)*s+r;for(let b=i;b<u;b++)y[A++]=M?M[x+b]:1}const k=new D({width:n.width,height:n.height,pixelType:t.pixelType,pixels:g,mask:y});return k.updateStatistics(),k}function Yt(t,e=!0){if(!L(t))return null;const{pixels:n,width:r,height:a,mask:s,pixelType:l}=t,c=[],o=Math.round(r/2),h=Math.round(a/2),i=a-1,u=r-1;for(let f=0;f<n.length;f++){const m=n[f],d=D.createEmptyBand(l,o*h);let g=0;for(let y=0;y<a;y+=2)for(let M=0;M<r;M+=2){const k=m[y*r+M];if(e){const w=M===u?k:m[y*r+M+1],x=y===i?k:m[y*r+M+r],A=M===u?x:y===i?w:m[y*r+M+r+1];d[g++]=(k+w+x+A)/4}else d[g++]=k}c.push(d)}let p=null;if($(s)){p=new Uint8Array(o*h);let f=0;for(let m=0;m<a;m+=2)for(let d=0;d<r;d+=2){const g=s[m*r+d];if(e){const y=d===u?g:s[m*r+d+1],M=m===i?g:s[m*r+d+r],k=d===u?M:m===i?y:s[m*r+d+r+1];p[f++]=g*y*M*k?1:0}else p[f++]=g}}return new D({width:o,height:h,pixelType:l,pixels:c,mask:p})}function Ce(t,e,n){if(!L(t))return null;const{width:r,height:a}=e;let{width:s,height:l}=t;const c=new Map,o={x:0,y:0},h=n==null?1:1+n;let i=t;for(let u=0;u<h;u++){const p=Math.ceil(s/r),f=Math.ceil(l/a);for(let m=0;m<f;m++){o.y=m*a;for(let d=0;d<p;d++){o.x=d*r;const g=Qt(i,o,e);c.set(`${u}/${m}/${d}`,g)}}u<h-1&&(i=Yt(i)),s=Math.round(s/2),l=Math.round(l/2)}return c}function Ct(t,e,n,r,a=0){const{width:s,height:l}=t,{width:c,height:o}=e,h=r.cols,i=r.rows,u=Math.ceil(c/h-.1/h),p=Math.ceil(o/i-.1/i);let f,m,d,g,y,M,k;const w=u*h,x=w*p*i,A=new Float32Array(x),b=new Float32Array(x),v=new Uint32Array(x),P=new Uint32Array(x);let U,C,B=0;for(let S=0;S<p;S++)for(let _=0;_<u;_++){f=12*(S*u+_),m=n[f],d=n[f+1],g=n[f+2],y=n[f+3],M=n[f+4],k=n[f+5];for(let I=0;I<i;I++){B=(S*i+I)*w+_*h,C=(I+.5)/i;for(let T=0;T<I;T++)U=(T+.5)/h,A[B+T]=(m*U+d*C+g)*s+a,b[B+T]=(y*U+M*C+k)*l+a,v[B+T]=Math.floor(A[B+T]),P[B+T]=Math.floor(b[B+T])}f+=6,m=n[f],d=n[f+1],g=n[f+2],y=n[f+3],M=n[f+4],k=n[f+5];for(let I=0;I<i;I++){B=(S*i+I)*w+_*h,C=(I+.5)/i;for(let T=I;T<h;T++)U=(T+.5)/h,A[B+T]=(m*U+d*C+g)*s+a,b[B+T]=(y*U+M*C+k)*l+a,v[B+T]=Math.floor(A[B+T]),P[B+T]=Math.floor(b[B+T])}}return{offsets_x:A,offsets_y:b,offsets_xi:v,offsets_yi:P,gridWidth:w}}function Fe(t,e){const{coefficients:n,spacing:r}=e,{offsets_x:a,offsets_y:s,gridWidth:l}=Ct(t,t,n,{rows:r[0],cols:r[1]}),{width:c,height:o}=t,h=new Float32Array(c*o),i=180/Math.PI;for(let u=0;u<o;u++)for(let p=0;p<c;p++){const f=u*l+p,m=u===0?f:f-l,d=u===o-1?f:f+l,g=a[m]-a[d],y=s[d]-s[m];if(isNaN(g)||isNaN(y))h[u*c+p]=90;else{let M=Math.atan2(y,g)*i;M=(360+M)%360,h[u*c+p]=M}}return h}function _e(t,e,n,r,a="nearest"){if(!L(t))return null;a==="majority"&&(t=Kt(t));const{pixels:s,mask:l,pixelType:c}=t,o=t.width,h=t.height,i=D.getPixelArrayConstructor(c),u=s.length,{width:p,height:f}=e;let m=!1;for(let P=0;P<n.length;P+=3)n[P]===-1&&n[P+1]===-1&&n[P+2]===-1&&(m=!0);const{offsets_x:d,offsets_y:g,offsets_xi:y,offsets_yi:M,gridWidth:k}=Ct({width:o,height:h},e,n,r,a==="majority"?.5:0);let w;const x=(P,U,C)=>{const B=P instanceof Float32Array||P instanceof Float64Array?0:.5;for(let S=0;S<f;S++){w=S*k;for(let _=0;_<p;_++){if(d[w]<0||g[w]<0)P[S*p+_]=0;else if(C)P[S*p+_]=U[y[w]+M[w]*o];else{const I=Math.floor(d[w]),T=Math.floor(g[w]),F=Math.ceil(d[w]),V=Math.ceil(g[w]),N=d[w]-I,J=g[w]-T;if(!l||l[I+T*o]&&l[I+T*o]&&l[I+V*o]&&l[F+V*o]){const G=(1-N)*U[I+T*o]+N*U[F+T*o],W=(1-N)*U[I+V*o]+N*U[F+V*o];P[S*p+_]=(1-J)*G+J*W+B}else P[S*p+_]=U[y[w]+M[w]*o]}w++}}},A=[];let b;for(let P=0;P<u;P++)b=new i(p*f),x(b,s[P],a==="nearest"||a==="majority"),A.push(b);const v=new D({width:p,height:f,pixelType:c,pixels:A});if($(l))v.mask=new Uint8Array(p*f),x(v.mask,l,!0);else if(m){v.mask=new Uint8Array(p*f);for(let P=0;P<p*f;P++)v.mask[P]=d[P]<0||g[P]<0?0:1}return v.updateStatistics(),v}const et=new Map;et.set("meter-per-second",1),et.set("kilometer-per-hour",.277778),et.set("knots",.514444),et.set("feet-per-second",.3048),et.set("mile-per-hour",.44704);const mt=180/Math.PI,xt=5,ct=new qt({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function wt(t,e){return et.get(t)/et.get(e)||1}function Ft(t){return(450-t)%360}function _t(t,e="geographic"){const[n,r]=t,a=Math.sqrt(n*n+r*r);let s=Math.atan2(r,n)*mt;return s=(360+s)%360,e==="geographic"&&(s=Ft(s)),[a,s]}function Vt(t,e="geographic"){let n=t[1];e==="geographic"&&(n=Ft(n)),n%=360;const r=t[0];return[r*Math.cos(n/mt),r*Math.sin(n/mt)]}function Ve(t,e,n,r="geographic"){if(!L(t)||H(n))return t;const a=e==="vector-magdir"?t.clone():ft(Pt(t,e)),s=a.pixels[1];for(let l=0;l<s.length;l++)s[l]=r==="geographic"?(s[l]+n[l]+270)%360:(s[l]+360-n[l])%360;return e==="vector-magdir"?a:Pt(a,"vector-magdir")}function Pt(t,e,n="geographic",r=1){if(!L(t))return t;const{pixels:a,width:s,height:l}=t,c=s*l,o=a[0],h=a[1],i=t.pixelType.startsWith("f")?t.pixelType:"f32",u=D.createEmptyBand(i,c),p=D.createEmptyBand(i,c);let f=0;for(let d=0;d<l;d++)for(let g=0;g<s;g++)e==="vector-uv"?([u[f],p[f]]=_t([o[f],h[f]],n),u[f]*=r):([u[f],p[f]]=Vt([o[f],h[f]],n),u[f]*=r,p[f]*=r),f++;const m=new D({pixelType:i,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[u,p]});return m.updateStatistics(),m}function De(t,e,n=1){if(n===1||!L(t))return t;const r=t.clone(),{pixels:a,width:s,height:l}=r,c=a[0],o=a[1];let h=0;for(let i=0;i<l;i++)for(let u=0;u<s;u++)e==="vector-uv"?(c[h]*=n,o[h]*=n):c[h]*=n,h++;return r.updateStatistics(),r}function Re(t,e,n,r,a){if(H(a)||!a.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/r),height:Math.round(n/r),resolution:t.width/e};const s=a.xmin,l=a.ymax,c=(t.xmax-t.xmin)/e*r,o=(t.ymax-t.ymin)/n*r,h=(c+o)/2;return t.xmin=s+Math.floor((t.xmin-s)/c)*c,t.xmax=s+Math.ceil((t.xmax-s)/c)*c,t.ymin=l+Math.floor((t.ymin-l)/o)*o,t.ymax=l+Math.ceil((t.ymax-l)/o)*o,{extent:t,width:Math.round(t.width/c),height:Math.round(t.height/o),resolution:h}}const Zt=Dt(0,0,0);function Dt(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const a=r?-1:1,s=13*a,l=-7*a,c=-2*a,o=-16*a,h=21.75,[i,u]=E(0,e+s,n,h),[p,f]=E(t-5.5,e+l,n,h),[m,d]=E(t+5.5,e+l,n,h),[g,y]=E(t-1.5,e+c,n,h),[M,k]=E(t+1.5,e+c,n,h),[w,x]=E(t-1.5,e+o,n,h),[A,b]=E(t+1.5,e+o,n,h);return[i,u,p,f,g,y,M,k,m,d,w,x,A,b]}function te(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,a=n?-1:1,s=5*a,l=20*a,c=25*a,o=45,h=0,i=0,u=2,p=0,f=u*a,m=n?1:-1,d=r/2*m;let[g,y]=[h+d,i-l],[M,k]=[g+u*m,y],[w,x]=[M-p*m,k+f],[A,b]=[h-d,i-c],[v,P]=[A+p*m,b-f],U=Math.ceil(t/xt),C=Math.floor(U/10);U-=8*C;const B=[],S=[];for(let K=0;K<U/2;K++,C--){C<=0&&U%2==1&&K===(U-1)/2&&(A=h,v=A+p*m,b=(b+y)/2,P=b-f);const[Q,ot]=E(A,b,e,o);if(C>0){const[it,st]=E(M,b,e,o),[lt,R]=E(g,y,e,o);B.push(it),B.push(st),B.push(Q),B.push(ot),B.push(lt),B.push(R)}else{const[it,st]=E(M,k,e,o),[lt,R]=E(w,x,e,o),[j,ut]=E(v,P,e,o);S.push(Q),S.push(ot),S.push(j),S.push(ut),S.push(lt),S.push(R),S.push(it),S.push(st)}b+=s,y+=s,k+=s,x+=s,P+=s}const[_,I]=E(h+d,i+l,e,o),T=(r/2+u)*m,[F,V]=E(h+T,i+l,e,o),[N,J]=E(h+d,i-c,e,o),[G,W]=E(h+T,i-c,e,o);return{pennants:B,barbs:S,shaft:[_,I,F,V,N,J,G,W]}}function E(t,e,n,r=1){const a=Math.sqrt(t*t+e*e)/r,s=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[a,(2*Math.PI+s-n)%(2*Math.PI)]}const ht=[0,1,3,6,10,16,21,27,33,40,47,55,63],ee=[0,.5,1,1.5,2],ne=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Y(t,e,n,r){const a=wt(r||"knots",n);let s;for(s=1;s<e.length;s++)if(s===e.length-1){if(t<e[s]*a)break}else if(t<=e[s]*a)break;return Math.min(s-1,e.length-2)}function ie(t,e,n,r,a){let s=0;switch(e){case"beaufort_kn":s=Y(t,ht,"knots",n);break;case"beaufort_km":s=Y(t,ht,"kilometer-per-hour",n);break;case"beaufort_ft":s=Y(t,ht,"feet-per-second",n);break;case"beaufort_m":s=Y(t,ht,"meter-per-second",n);break;case"classified_arrow":s=Y(t,a??[],r,n);break;case"ocean_current_m":s=Y(t,ee,"meter-per-second",n);break;case"ocean_current_kn":s=Y(t,ne,"knots",n)}return s}function se(t,e){const{style:n,inputUnit:r,outputUnit:a,breakValues:s}=e,l=ct.fromJSON(r),c=ct.fromJSON(a),o=7*6,h=15;let i=0,u=0;const{width:p,height:f,mask:m}=t,d=t.pixels[0],g=t.pixels[1],y=$(m)?m.filter(x=>x>0).length:p*f,M=new Float32Array(y*o),k=new Uint32Array(h*y),w=e.invertDirection?Dt(0,0,0,!1):Zt;for(let x=0;x<f;x++)for(let A=0;A<p;A++){const b=x*p+A;if(!m||m[x*p+A]){const v=(g[b]+360)%360/180*Math.PI,P=ie(d[b],n,l,c,s);for(let C=0;C<w.length;C+=2)M[i++]=(A+.5)/p,M[i++]=(x+.5)/f,M[i++]=w[C],M[i++]=w[C+1]+v,M[i++]=P,M[i++]=d[b];const U=7*(i/o-1);k[u++]=U,k[u++]=U+1,k[u++]=U+2,k[u++]=U+0,k[u++]=U+4,k[u++]=U+3,k[u++]=U+0,k[u++]=U+2,k[u++]=U+3,k[u++]=U+2,k[u++]=U+5,k[u++]=U+3,k[u++]=U+5,k[u++]=U+6,k[u++]=U+3}}return{vertexData:M,indexData:k}}const dt=[];function le(t,e){if(dt.length===0)for(let f=0;f<30;f++)dt.push(te(5*f,0,!e.invertDirection));const n=wt(ct.fromJSON(e.inputUnit),"knots"),{width:r,height:a,mask:s}=t,l=t.pixels[0],c=t.pixels[1],o=6,h=[],i=[];let u=0,p=0;for(let f=0;f<a;f++)for(let m=0;m<r;m++){const d=f*r+m,g=l[d]*n;if((!s||s[f*r+m])&&g>=xt){const y=(c[d]+360)%360/180*Math.PI,{pennants:M,barbs:k,shaft:w}=dt[Math.min(Math.floor(g/5),29)];if(M.length+k.length===0)continue;let x=h.length/o;const A=(m+.5)/r,b=(f+.5)/a;for(let v=0;v<M.length;v+=2)h[u++]=A,h[u++]=b,h[u++]=M[v],h[u++]=M[v+1]+y,h[u++]=0,h[u++]=g;for(let v=0;v<k.length;v+=2)h[u++]=A,h[u++]=b,h[u++]=k[v],h[u++]=k[v+1]+y,h[u++]=0,h[u++]=g;for(let v=0;v<w.length;v+=2)h[u++]=A,h[u++]=b,h[u++]=w[v],h[u++]=w[v+1]+y,h[u++]=0,h[u++]=g;for(let v=0;v<M.length/6;v++)i[p++]=x,i[p++]=x+1,i[p++]=x+2,x+=3;for(let v=0;v<k.length/8;v++)i[p++]=x,i[p++]=x+1,i[p++]=x+2,i[p++]=x+1,i[p++]=x+2,i[p++]=x+3,x+=4;i[p++]=x+0,i[p++]=x+1,i[p++]=x+2,i[p++]=x+1,i[p++]=x+3,i[p++]=x+2,x+=4}}return{vertexData:new Float32Array(h),indexData:new Uint32Array(i)}}function re(t,e){let r=0,a=0;const{width:s,height:l,mask:c}=t,o=t.pixels[0],h=[],i=[],u=wt(ct.fromJSON(e.inputUnit),"knots"),p=e.style==="wind_speed"?xt:Number.MAX_VALUE;for(let f=0;f<l;f++)for(let m=0;m<s;m++){const d=o[f*s+m]*u;if((!c||c[f*s+m])&&d<p){for(let y=0;y<4;y++)h[r++]=(m+.5)/s,h[r++]=(f+.5)/l,h[r++]=y<2?-.5:.5,h[r++]=y%2==0?-.5:.5,h[r++]=0,h[r++]=d;const g=4*(r/24-1);i[a++]=g,i[a++]=g+1,i[a++]=g+2,i[a++]=g+1,i[a++]=g+2,i[a++]=g+3}}return{vertexData:new Float32Array(h),indexData:new Uint32Array(i)}}function $e(t,e){return e.style==="simple_scalar"?re(t,e):e.style==="wind_speed"?le(t,e):se(t,e)}function Le(t,e,n,r=[0,0],a=.5){const{width:s,height:l,mask:c}=t,[o,h]=t.pixels,[i,u]=r,p=Math.round((s-i)/n),f=Math.round((l-u)/n),m=p*f,d=new Float32Array(m),g=new Float32Array(m),y=new Uint8Array(m),M=e==="vector-uv";for(let w=0;w<f;w++)for(let x=0;x<p;x++){let A=0;const b=w*p+x,v=Math.max(0,w*n+u),P=Math.max(0,x*n+i),U=Math.min(l,v+n),C=Math.min(s,P+n);for(let B=v;B<U;B++)for(let S=P;S<C;S++){const _=B*s+S;if(!c||c[_]){A++;const I=M?[o[_],h[_]]:[o[_],(360+h[_])%360],[T,F]=M?I:Vt(I);d[b]+=T,g[b]+=F}}if(A>=(U-v)*(C-P)*(1-a)){y[b]=1;const[B,S]=_t([d[b]/A,g[b]/A]);d[b]=B,g[b]=S}else y[b]=0,d[b]=0,g[b]=0}const k=new D({width:p,height:f,pixels:[d,g],mask:y});return k.updateStatistics(),k}const X=Z.getLogger("esri.views.2d.engine.flow.dataUtils"),oe=10;async function je(t,e,n,r){const a=performance.now(),s=ae(e,n),l=performance.now(),c=ce(e,s,n.width,n.height),o=performance.now(),h=ue(c,!0),i=performance.now(),u=t==="Streamlines"?pe(h,oe):de(h),p=performance.now();return nt("esri-2d-profiler")&&(X.info("I.1","_createFlowFieldFromData (ms)",Math.round(l-a)),X.info("I.2","_getStreamlines (ms)",Math.round(o-l)),X.info("I.3","createAnimatedLinesData (ms)",Math.round(i-o)),X.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-i)),X.info("I.5","createFlowMesh (ms)",Math.round(p-a)),X.info("I.6","Mesh size (bytes)",u.vertexData.buffer.byteLength+u.indexData.buffer.byteLength)),await Promise.resolve(),Gt(r),u}function ae(t,e){const n=fe(e.data,e.width,e.height,t.smoothing);return t.interpolate?(r,a)=>{const s=Math.floor(r),l=Math.floor(a);if(s<0||s>=e.width)return[0,0];if(l<0||l>=e.height)return[0,0];const c=r-s,o=a-l,h=s,i=l,u=s<e.width-1?s+1:s,p=l<e.height-1?l+1:l,f=n[2*(i*e.width+h)],m=n[2*(i*e.width+u)],d=n[2*(p*e.width+h)],g=n[2*(p*e.width+u)],y=n[2*(i*e.width+h)+1],M=n[2*(i*e.width+u)+1];return[(f*(1-o)+d*o)*(1-c)+(m*(1-o)+g*o)*c,(y*(1-o)+n[2*(p*e.width+h)+1]*o)*(1-c)+(M*(1-o)+n[2*(p*e.width+u)+1]*o)*c]}:(r,a)=>{const s=Math.round(r),l=Math.round(a);return s<0||s>=e.width||l<0||l>=e.height?[0,0]:[n[2*(l*e.width+s)+0],n[2*(l*e.width+s)+1]]}}function he(t,e,n,r,a,s,l,c,o){const h=[];let i=n,u=r,p=0,[f,m]=e(i,u);f*=t.velocityScale,m*=t.velocityScale;const d=Math.sqrt(f*f+m*m);let g,y;h.push({x:i,y:u,t:p,speed:d});for(let M=0;M<t.verticesPerLine;M++){let[k,w]=e(i,u);k*=t.velocityScale,w*=t.velocityScale;const x=Math.sqrt(k*k+w*w);if(x<t.minSpeedThreshold)return h;const A=k/x,b=w/x;if(i+=A*t.segmentLength,u+=b*t.segmentLength,p+=t.segmentLength/x,Math.acos(A*g+b*y)>t.maxTurnAngle)return h;if(t.collisions){const v=Math.round(i*o),P=Math.round(u*o);if(v<0||v>l-1||P<0||P>c-1)return h;const U=s[P*l+v];if(U!==-1&&U!==a)return h;s[P*l+v]=a}h.push({x:i,y:u,t:p,speed:x}),g=A,y=b}return h}function ce(t,e,n,r){const a=[],s=new It,l=1/Math.max(t.lineCollisionWidth,1),c=Math.round(n*l),o=Math.round(r*l),h=new Int32Array(c*o);for(let u=0;u<h.length;u++)h[u]=-1;const i=[];for(let u=0;u<r;u+=t.lineSpacing)for(let p=0;p<n;p+=t.lineSpacing)i.push({x:p,y:u,sort:s.getFloat()});i.sort((u,p)=>u.sort-p.sort);for(const{x:u,y:p}of i)if(s.getFloat()<t.density){const f=he(t,e,u,p,a.length,h,c,o,l);if(f.length<2)continue;a.push(f)}return a}function fe(t,e,n,r){if(r===0)return t;const a=Math.round(3*r),s=new Array(2*a+1);let l=0;for(let h=-a;h<=a;h++){const i=Math.exp(-h*h/(r*r));s[h+a]=i,l+=i}for(let h=-a;h<=a;h++)s[h+a]/=l;const c=new Float32Array(t.length);for(let h=0;h<n;h++)for(let i=0;i<e;i++){let u=0,p=0;for(let f=-a;f<=a;f++){if(i+f<0||i+f>=e)continue;const m=s[f+a];u+=m*t[2*(h*e+(i+f))+0],p+=m*t[2*(h*e+(i+f))+1]}c[2*(h*e+i)+0]=u,c[2*(h*e+i)+1]=p}const o=new Float32Array(t.length);for(let h=0;h<e;h++)for(let i=0;i<n;i++){let u=0,p=0;for(let f=-a;f<=a;f++){if(i+f<0||i+f>=n)continue;const m=s[f+a];u+=m*c[2*((i+f)*e+h)+0],p+=m*c[2*((i+f)*e+h)+1]}o[2*(i*e+h)+0]=u,o[2*(i*e+h)+1]=p}return o}function ue(t,e){const n=new It,r=t.reduce((o,h)=>o+h.length,0),a=new Float32Array(4*r),s=new Array(t.length);let l=0,c=0;for(const o of t){const h=l;for(const i of o)a[4*l+0]=i.x,a[4*l+1]=i.y,a[4*l+2]=i.t,a[4*l+3]=i.speed,l++;s[c++]={startVertex:h,numberOfVertices:o.length,totalTime:o[o.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:a,lineDescriptors:s}}function pe(t,e){const{lineVertices:r,lineDescriptors:a}=t;let s=0,l=0;for(const f of a)s+=2*f.numberOfVertices,l+=6*(f.numberOfVertices-1);const c=new Float32Array(s*9),o=new Uint32Array(l);let h=0,i=0;function u(){o[i++]=h-2,o[i++]=h,o[i++]=h-1,o[i++]=h,o[i++]=h+1,o[i++]=h-1}function p(f,m,d,g,y,M,k,w){const x=h*9;let A=0;c[x+A++]=f,c[x+A++]=m,c[x+A++]=1,c[x+A++]=d,c[x+A++]=M,c[x+A++]=k,c[x+A++]=g/2,c[x+A++]=y/2,c[x+A++]=w,h++,c[x+A++]=f,c[x+A++]=m,c[x+A++]=-1,c[x+A++]=d,c[x+A++]=M,c[x+A++]=k,c[x+A++]=-g/2,c[x+A++]=-y/2,c[x+A++]=w,h++}for(const f of a){const{totalTime:m,timeSeed:d}=f;let g=null,y=null,M=null,k=null,w=null,x=null;for(let A=0;A<f.numberOfVertices;A++){const b=r[4*(f.startVertex+A)+0],v=r[4*(f.startVertex+A)+1],P=r[4*(f.startVertex+A)+2],U=r[4*(f.startVertex+A)+3];let C=null,B=null,S=null,_=null;if(A>0){C=b-g,B=v-y;const I=Math.sqrt(C*C+B*B);if(C/=I,B/=I,A>1){let T=C+w,F=B+x;const V=Math.sqrt(T*T+F*F);T/=V,F/=V;const N=Math.min(1/(T*C+F*B),e);T*=N,F*=N,S=-F,_=T}else S=-B,_=C;S!==null&&_!==null&&(p(g,y,M,S,_,m,d,U),u())}g=b,y=v,M=P,w=C,x=B,k=U}p(g,y,M,-x,w,m,d,k)}return{vertexData:c,indexData:o}}function de(t){const{lineVertices:a,lineDescriptors:s}=t;let l=0,c=0;for(const I of s){const T=I.numberOfVertices-1;l+=4*T*2,c+=6*T*2}const o=new Float32Array(l*16),h=new Uint32Array(c);let i,u,p,f,m,d,g,y,M,k,w,x,A,b,v=0,P=0;function U(){h[P++]=v-8,h[P++]=v-7,h[P++]=v-6,h[P++]=v-7,h[P++]=v-5,h[P++]=v-6,h[P++]=v-4,h[P++]=v-3,h[P++]=v-2,h[P++]=v-3,h[P++]=v-1,h[P++]=v-2}function C(I,T,F,V,N,J,G,W,K,Q,ot,it,st,lt){const R=v*16;let j=0;for(const ut of[1,2])for(const Rt of[1,2,3,4])o[R+j++]=I,o[R+j++]=T,o[R+j++]=F,o[R+j++]=V,o[R+j++]=G,o[R+j++]=W,o[R+j++]=K,o[R+j++]=Q,o[R+j++]=ut,o[R+j++]=Rt,o[R+j++]=st,o[R+j++]=lt,o[R+j++]=N/2,o[R+j++]=J/2,o[R+j++]=ot/2,o[R+j++]=it/2,v++}function B(I,T){let F=M+w,V=k+x;const N=Math.sqrt(F*F+V*V);F/=N,V/=N;const J=M*F+k*V;F/=J,V/=J;let G=w+A,W=x+b;const K=Math.sqrt(G*G+W*W);G/=K,W/=K;const Q=w*G+x*W;G/=Q,W/=Q,C(i,u,p,f,-V,F,m,d,g,y,-W,G,I,T),U()}function S(I,T,F,V,N,J){if(M=w,k=x,w=A,x=b,M==null&&k==null&&(M=w,k=x),m!=null&&d!=null){A=I-m,b=T-d;const G=Math.sqrt(A*A+b*b);A/=G,b/=G}M!=null&&k!=null&&B(N,J),i=m,u=d,p=g,f=y,m=I,d=T,g=F,y=V}function _(I,T){M=w,k=x,w=A,x=b,M==null&&k==null&&(M=w,k=x),M!=null&&k!=null&&B(I,T)}for(const I of s){i=null,u=null,p=null,f=null,m=null,d=null,g=null,y=null,M=null,k=null,w=null,x=null,A=null,b=null;const{totalTime:T,timeSeed:F}=I;for(let V=0;V<I.numberOfVertices;V++)S(a[4*(I.startVertex+V)+0],a[4*(I.startVertex+V)+1],a[4*(I.startVertex+V)+2],a[4*(I.startVertex+V)+3],T,F);_(T,F)}return{vertexData:o,indexData:h}}function Ut(t,e){const n=e.pixels,{width:r,height:a}=e,s=new Float32Array(r*a*2),l=e.mask||new Uint8Array(r*a*2);if(e.mask||l.fill(255),t==="vector-uv")for(let c=0;c<r*a;c++)s[2*c+0]=n[0][c],s[2*c+1]=-n[1][c];else if(t==="vector-magdir")for(let c=0;c<r*a;c++){const o=n[0][c],h=zt(n[1][c]),i=Math.cos(h-Math.PI/2),u=Math.sin(h-Math.PI/2);s[2*c+0]=i*o,s[2*c+1]=u*o}return{data:s,mask:l,width:r,height:a}}async function Ee(t,e,n,r,a,s){const l=performance.now(),c=Ot(e.spatialReference);if(!c){const w=await Tt(t,e,n,r,a,s);return nt("esri-2d-profiler")&&X.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-l)),nt("esri-2d-profiler")&&X.info("I.9","Number of parts",1),w}const[o,h]=c.valid,i=h-o,u=Math.ceil(e.width/i),p=e.width/u,f=Math.round(n/u);let m=e.xmin;const d=[],g=performance.now();for(let w=0;w<u;w++){const x=new Wt({xmin:m,xmax:m+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});d.push(Tt(t,x,f,r,a,s)),m+=p}const y=await Promise.all(d);nt("esri-2d-profiler")&&X.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-g)),nt("esri-2d-profiler")&&X.info("I.9","Number of parts",y.length);const M={data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r};let k=0;for(const w of y){for(let x=0;x<w.height;x++)for(let A=0;A<w.width;A++)k+A>=n||(M.data[2*(x*n+k+A)+0]=w.data[2*(x*w.width+A)+0],M.data[2*(x*n+k+A)+1]=w.data[2*(x*w.width+A)+1],M.mask[x*n+k+A]=w.mask[x*w.width+A]);k+=w.width}return nt("esri-2d-profiler")&&X.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-l)),M}async function Tt(t,e,n,r,a,s){const l={requestProjectedLocalDirections:!0,signal:s};if($(a)&&(l.timeExtent=a),t.type==="imagery"){await t.load({signal:s});const h=t.rasterInfo.dataType,i=await t.fetchImage(e,n,r,l);return!i||H(i.pixelData)||H(i.pixelData.pixelBlock)?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:Ut(h,i.pixelData.pixelBlock)}await t.load({signal:s});const c=t.rasterInfo.dataType,o=await t.fetchPixels(e,n,r,l);return!o||H(o.pixelBlock)?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:Ut(c,o.pixelBlock)}export{Ie as A,De as B,re as D,$e as F,Te as M,Ce as R,Se as S,Be as T,Ee as a,Xt as b,_e as c,Pt as d,Fe as e,Ve as f,je as g,ye as h,L as i,Le as j,ve as k,Me as l,D as m,ke as n,kt as o,be as p,Ue as q,we as r,Mt as s,Bt as t,Ae as u,Pe as v,_t as w,Re as x,ct as y,wt as z};
