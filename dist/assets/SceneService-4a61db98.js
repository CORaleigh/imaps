import{I as _,af as v,ad as y,aR as P,e as n,y as c,qR as L,f as x,iO as f,aq as I,o6 as $,o7 as q,iN as V,a as M,gZ as C,rb as k,h9 as z,rc as F,rd as J,re as D,is as R,bM as B,aQ as N,h4 as A}from"./index-84d82762.js";import{saveResources as E}from"./saveUtils-c0d80986.js";async function Z(u,o,e,t,a,r){let i=null;if(_(e)){const d=`${u}/nodepages/`,h=d+Math.floor(e.rootIndex/e.nodesPerPage);try{return{type:"page",rootPage:(await v(h,{query:{f:"json",token:t},responseType:"json",signal:r})).data,rootIndex:e.rootIndex,pageSize:e.nodesPerPage,lodMetric:e.lodSelectionMetricType,urlPrefix:d}}catch(p){_(a)&&a.warn("#fetchIndexInfo()","Failed to load root node page. Falling back to node documents.",h,p),i=p}}if(!o)return null;const s=`${u}/nodes/`,l=s+(o&&o.split("/").pop());try{return{type:"node",rootNode:(await v(l,{query:{f:"json",token:t},responseType:"json",signal:r})).data,urlPrefix:s}}catch(d){throw new y("sceneservice:root-node-missing","Root node missing.",{pageError:i,nodeError:d,url:l})}}let G=null;function H(){return G}const O="esri.layers.mixins.SceneService",m=P.getLogger(O),X=u=>{let o=class extends u{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=C(async(e,t,a)=>{switch(e){case w.SAVE:return this._save(t);case w.SAVE_AS:return this._saveAs(a,t)}})}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(e.spatialReference!=null)return x.fromJSON(e.spatialReference);{const t=e.store,a=t.indexCRS||t.geographicCRS,r=a&&parseInt(a.substring(a.lastIndexOf("/")+1,a.length),10);return r!=null?new x(r):null}}readFullExtent(e,t,a){if(e!=null&&typeof e=="object"){const s=e.spatialReference==null?{...e,spatialReference:this._readSpatialReference(t)}:e;return I.fromJSON(s,a)}const r=t.store,i=this._readSpatialReference(t);return i==null||r==null||r.extent==null||!Array.isArray(r.extent)||r.extent.some(s=>s<b)?null:new I({xmin:r.extent[0],ymin:r.extent[1],xmax:r.extent[2],ymax:r.extent[3],spatialReference:i})}parseVersionString(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},a=e.split(".");return a.length>=2&&(t.major=parseInt(a[0],10),t.minor=parseInt(a[1],10)),t}readVersion(e,t){const a=t.store,r=a.version!=null?a.version.toString():"";return this.parseVersionString(r)}readTitlePortalItem(e){return this.sublayerTitleMode!=="item-title"?void 0:e}readTitleService(e,t){const a=this.portalItem&&this.portalItem.title;if(this.sublayerTitleMode==="item-title")return k(this.url,t.name);let r=t.name;if(!r&&this.url){const i=z(this.url);_(i)&&(r=i.title)}return this.sublayerTitleMode==="item-title-and-service-name"&&a&&(r=a+" - "+r),F(r)}set url(e){const t=J({layer:this,url:e,nonStandardUrlAllowed:!1,logger:m});this._set("url",t.url),t.layerId!=null&&this._set("layerId",t.layerId)}writeUrl(e,t,a,r){D(this,e,"layers",t,r)}get parsedUrl(){const e=this._get("url"),t=R(e);return this.layerId!=null&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=Z(this.parsedUrl.path,this.rootNode,e,this.apiKey,m,t),this.fullExtent==null||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){var t,a,r;if((e==null?void 0:e.type)==="page"){const i=e.rootIndex%e.pageSize,s=(a=(t=e.rootPage)==null?void 0:t.nodes)==null?void 0:a[i];if(s==null||s.obb==null||s.obb.center==null||s.obb.halfSize==null)throw new y("sceneservice:invalid-node-page","Invalid node page.");if(s.obb.center[0]<b||this.fullExtent==null||this.fullExtent.hasZ)return;const l=s.obb.halfSize,d=s.obb.center[2],h=Math.sqrt(l[0]*l[0]+l[1]*l[1]+l[2]*l[2]);this.fullExtent.zmin=d-h,this.fullExtent.zmax=d+h}else if((e==null?void 0:e.type)==="node"){const i=(r=e.rootNode)==null?void 0:r.mbs;if(!Array.isArray(i)||i.length!==4||i[0]<b)return;const s=i[2],l=i[3],{fullExtent:d}=this;d&&(d.zmin=s-l,d.zmax=s+l)}}async _fetchService(e){if(this.url==null)throw new y("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(this.layerId==null&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);t!=null&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await v(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){var i;const t=await v(((i=this.parsedUrl)==null?void 0:i.path)??"",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let a=!1;if(t.data.layerType&&t.data.layerType==="Voxel"&&(a=!0),a)return this._fetchVoxelServiceLayer();const r=t.data;this.read(r,this._getServiceContext()),this.validateLayer(r)}async _fetchVoxelServiceLayer(e){var a;const t=(await v(((a=this.parsedUrl)==null?void 0:a.path)+"/layer",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e})).data;this.read(t,this._getServiceContext()),this.validateLayer(t)}_getServiceContext(){var e;return{origin:"service",portalItem:this.portalItem,portal:(e=this.portalItem)==null?void 0:e.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&typeof this.beforeSave=="function"&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,a){e.typeKeywords||(e.typeKeywords=[]);const r=t.getTypeKeywords();for(const i of r)e.typeKeywords.push(i);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter((i,s,l)=>l.indexOf(i)===s),a===g.newItem&&(e.typeKeywords=e.typeKeywords.filter(i=>i!=="Hosted Service")))}async _saveAs(e,t){var d;const a={...T,...t};let r=B.from(e);r||(m.error("_saveAs(): requires a portal item parameter"),await Promise.reject(new y("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),r.id&&(r=r.clone(),r.id=null);const i=r.portal||N.getDefault();await this._ensureLoadBeforeSave(),r.type=S,r.portal=i;const s={origin:"portal-item",url:null,messages:[],portal:i,portalItem:r,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},l={layers:[this.write({},s)]};return await Promise.all(s.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(l,s,a),r.url=this.url,r.title||(r.title=this.title),this._updateTypeKeywords(r,a,g.newItem),await i.signIn(),await((d=i.user)==null?void 0:d.addItem({item:r,folder:a&&a.folder,data:l})),await E(this.resourceReferences,s,null),this.portalItem=r,A(s),s.portalItem=r,r}async _save(e){const t={...T,...e};if(!this.portalItem)throw m.error("_save(): requires the .portalItem property to be set"),new y("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(this.portalItem.type!==S)throw m.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+S),new y("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${S}"`);await this._ensureLoadBeforeSave();const a={origin:"portal-item",url:this.portalItem.itemUrl&&R(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||N.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},r={layers:[this.write({},a)]};return await Promise.all(a.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(r,a,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,g.existingItem),await this.portalItem.update({data:r}),await E(this.resourceReferences,a,null),A(a),this.portalItem}async _validateAgainstJSONSchema(e,t,a){var d,h;let r=((d=t.messages)==null?void 0:d.filter(p=>p.type==="error").map(p=>new y(p.name,p.message,p.details)))??[];(h=a==null?void 0:a.validationOptions)!=null&&h.ignoreUnsupported&&(r=r.filter(p=>p.name!=="layer:unsupported"&&p.name!=="symbol:unsupported"&&p.name!=="symbol-layer:unsupported"&&p.name!=="property:unsupported"&&p.name!=="url:unsupported"&&p.name!=="scenemodification:unsupported"));const i=a==null?void 0:a.validationOptions,s=i==null?void 0:i.enabled,l=H();if(s&&l){const p=(await l()).validate(e,a.portalItemLayerType);if(p.length>0){const j=`Layer item did not validate:
${p.join(`
`)}`;if(m.error(`_validateAgainstJSONSchema(): ${j}`),i.failPolicy==="throw"){const K=p.map(U=>new y("sceneservice:schema-validation",U)).concat(r);throw new y("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:K})}}}if(r.length>0)throw new y("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:r})}};return n([c(L)],o.prototype,"id",void 0),n([c({type:x})],o.prototype,"spatialReference",void 0),n([f("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],o.prototype,"readSpatialReference",null),n([c({type:I})],o.prototype,"fullExtent",void 0),n([f("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],o.prototype,"readFullExtent",null),n([c({readOnly:!0,type:$})],o.prototype,"heightModelInfo",void 0),n([c({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],o.prototype,"minScale",void 0),n([c({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],o.prototype,"maxScale",void 0),n([c({readOnly:!0})],o.prototype,"version",void 0),n([f("version",["store.version"])],o.prototype,"readVersion",null),n([c({type:String,json:{read:{source:"copyrightText"}}})],o.prototype,"copyright",void 0),n([c({type:String,json:{read:!1}})],o.prototype,"sublayerTitleMode",void 0),n([c({type:String})],o.prototype,"title",void 0),n([f("portal-item","title")],o.prototype,"readTitlePortalItem",null),n([f("service","title",["name"])],o.prototype,"readTitleService",null),n([c({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],o.prototype,"layerId",void 0),n([c(q)],o.prototype,"url",null),n([V("url")],o.prototype,"writeUrl",null),n([c()],o.prototype,"parsedUrl",null),n([c({readOnly:!0})],o.prototype,"store",void 0),n([c({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],o.prototype,"rootNode",void 0),o=n([M(O)],o),o},b=-1e38;var g;(function(u){u[u.existingItem=0]="existingItem",u[u.newItem=1]="newItem"})(g||(g={}));const S="Scene Service",T={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var w;(function(u){u[u.SAVE=0]="SAVE",u[u.SAVE_AS=1]="SAVE_AS"})(w||(w={}));export{X as E,w as L,Z as n};
