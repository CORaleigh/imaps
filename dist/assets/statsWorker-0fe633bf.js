import{oA as C,ca as S,ah as A,av as B,lq as R,fP as j,f as q,oB as M,oC as G,bU as O,oD as U,oE as Y,oF as _,oG as k,oH as H,oI as J,oJ as K,oK as L,oL as Z,oM as Q,oN as W}from"./index-84d82762.js";let y=null;function X(e,a,l){return e.x<0?e.x+=a:e.x>l&&(e.x-=a),e}function aa(e,a,l,o){const n=C(l)?S(l):null,s=n?Math.round((n.valid[1]-n.valid[0])/a.scale[0]):null;return e.map(t=>{const i=new A(B(t.geometry));return R(a,i,i,i.hasZ,i.hasM),t.geometry=n?X(i,s,o[0]):i,t})}function ea(e,a=18,l,o,n,s){const t=new Float64Array(n*s);a=Math.round(O(a));let i=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY,u=0,f=0,d=0,c=0;const I=U(o,l);for(const{geometry:T,attributes:v}of e){const{x:p,y:m}=T,x=Math.max(0,p-a),F=Math.max(0,m-a),D=Math.min(s,m+a),P=Math.min(n,p+a),g=+I(v);for(let $=F;$<D;$++)for(let h=x;h<P;h++){const E=$*n+h,b=Y(h-p,$-m,a),N=t[E];u=t[E]+=b*g;const V=u-N;f+=V,d+=V*V,u<i&&(i=u),u>r&&(r=u),c++}}if(!c)return{mean:0,stddev:0,min:0,max:0,mid:0,count:0};const z=(r-i)/2;return{mean:f/c,stdDev:Math.sqrt((d-f*f/c)/c),min:i,max:r,mid:z,count:c}}async function w(e,a){if(!a)return[];const{field:l,field2:o,field3:n,fieldDelimiter:s}=e,t=e.valueExpression,i=e.normalizationType,r=e.normalizationField,u=e.normalizationTotal,f=[],d=e.viewInfoParams;let c=null,I=null;if(t){if(!y){const{arcadeUtils:v}=await j();y=v}c=y.createFunction(t),I=d&&y.getViewInfo({viewingMode:d.viewingMode,scale:d.scale,spatialReference:new q(d.spatialReference)})}const z=e.fieldInfos,T=!(a[0]&&"declaredClass"in a[0]&&a[0].declaredClass==="esri.Graphic")&&z?{fields:z}:null;return a.forEach(v=>{const p=v.attributes;let m;if(t){const x=T?{...v,layer:T}:v,F=y.createExecContext(x,I);m=y.executeFunction(c,F)}else p&&(m=p[l],o&&(m=`${M(m)}${s}${M(p[o])}`,n&&(m=`${m}${s}${M(p[n])}`)));if(i&&typeof m=="number"&&isFinite(m)){const x=p&&parseFloat(p[r]);m=G(m,i,x,u)}f.push(m)}),f}async function na(e){const{attribute:a,features:l}=e,{normalizationType:o,normalizationField:n,minValue:s,maxValue:t,fieldType:i}=a,r=await w({field:a.field,valueExpression:a.valueExpression,normalizationType:o,normalizationField:n,normalizationTotal:a.normalizationTotal,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},l),u=_({normalizationType:o,normalizationField:n,minValue:s,maxValue:t}),f={value:.5,fieldType:i},d=i==="esriFieldTypeString"?k({values:r,supportsNullCount:u,percentileParams:f}):H({values:r,minValue:s,maxValue:t,useSampleStdDev:!o,supportsNullCount:u,percentileParams:f});return J(d,i==="esriFieldTypeDate")}async function ta(e){const{attribute:a,features:l}=e,o=await w({field:a.field,field2:a.field2,field3:a.field3,fieldDelimiter:a.fieldDelimiter,valueExpression:a.valueExpression,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},l),n=K(o);return L(n,a.domains,a.returnAllCodedValues,a.fieldDelimiter)}async function oa(e){const{attribute:a,features:l}=e,{field:o,normalizationType:n,normalizationField:s,normalizationTotal:t,classificationMethod:i}=a,r=await w({field:o,valueExpression:a.valueExpression,normalizationType:n,normalizationField:s,normalizationTotal:t,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},l),u=Z(r,{field:o,normalizationType:n,normalizationField:s,normalizationTotal:t,classificationMethod:i,standardDeviationInterval:a.standardDeviationInterval,numClasses:a.numClasses,minValue:a.minValue,maxValue:a.maxValue});return Q(u,i)}async function la(e){const{attribute:a,features:l}=e,{field:o,normalizationType:n,normalizationField:s,normalizationTotal:t,classificationMethod:i}=a,r=await w({field:o,valueExpression:a.valueExpression,normalizationType:n,normalizationField:s,normalizationTotal:t,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},l);return W(r,{field:o,normalizationType:n,normalizationField:s,normalizationTotal:t,classificationMethod:i,standardDeviationInterval:a.standardDeviationInterval,numBins:a.numBins,minValue:a.minValue,maxValue:a.maxValue})}async function sa(e){const{attribute:a,features:l}=e,{field:o,radius:n,fieldOffset:s,transform:t,spatialReference:i,size:r}=a,u=aa(l,t,i,r),{count:f,min:d,max:c,mean:I,stdDev:z}=ea(u,n,s,o,r[0],r[1]);return{count:f,min:d,max:c,avg:I,stddev:z}}export{oa as classBreaks,sa as heatmapStatistics,la as histogram,na as summaryStatistics,ta as uniqueValues};
