import{e as s,y as i,a as E,b4 as B,cm as G,id as ne,x as T,B as R,a6 as k,ah as j,a1 as ae,as as J,g as V,be as re,bc as oe,qA as le,c1 as q,dl as ue,gy as K,gD as U,qB as A,bV as S,f as H,gi as me,gf as ce,gp as he,gk as de,w as pe,av as N,I as w,b9 as C,aM as ve,aV as ye,M as P,O as F,W as ge,z as u,qC as _e,ba as we}from"./index-84d82762.js";import{e as be}from"./Measure-2905fddd.js";import{u as fe,i as Q,c as $e,s as Me}from"./analysisThemeUtils-87a2a438.js";import{geodesicLength as Le,geodesicDensify as De,planarLength as Se}from"./geometryEngine-6532c452.js";import{l as Oe}from"./Draw-334d8b6a.js";import{p as Ie,x as Te,v as xe,E as ke}from"./SnappingDragPipelineStep-65a01c0a.js";import{j as Ue}from"./GraphicManipulator-46045986.js";import{v as Ae}from"./InteractiveToolViewModel-775975b5.js";import"./getDefaultUnitForView-ffc28897.js";import"./colorUtils-4cb63d9e.js";import"./geometryEngineBase-e1a33b0a.js";import"./hydrated-09767936.js";import"./SnappingVisualizer2D-467a88c5.js";import"./enums-55085e26.js";import"./settings-668e9680.js";import"./SnappingContext-910a0375.js";import"./PointSnappingHint-78f462a1.js";import"./plane-1f295e9f.js";import"./sphere-52f8f52c.js";import"./mat3f64-221ce671.js";import"./mat4f64-65d35099.js";import"./quatf64-3363c48e.js";import"./SnappingOperation-d3c0deb2.js";import"./drawSurfaces-d53a61a0.js";import"./quat-125beff5.js";import"./hydratedFeatures-872b9f3f.js";import"./drawUtils-154f4205.js";import"./drapedUtils-18c61329.js";const O=1e5;let p=class extends Ie{constructor(t){super(t),this._drawActive=!1,this._measurementLayer=new B({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new B({internal:!0,listMode:"hide",visible:!1}),this._vertices=[],this.geodesicDistanceThreshold=1e5,this.measurement=null,this.measurementLabel=null}initialize(){G("esri/core/t9n/Units").then(e=>{this.messages=e}),this.addHandles(ne(async()=>{this.messages=await G("esri/core/t9n/Units")}));const t=this.view;this._draw=new Oe({view:t}),t.map.addMany([this._measurementLayer,this._manipulatorLayer]),t.focus(),this.addHandles(T(()=>[this.unit,this.geodesicDistanceThreshold,this.messages],()=>{this._updatePolylines()},R))}destroy(){const{map:t}=this.view;this._draw.view=null,this._draw=k(this._draw),t.removeMany([this._measurementLayer,this._manipulatorLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=k(this._measurementLayer),this._manipulatorLayer=k(this._manipulatorLayer),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(t){this._set("editable",t),t||this._draw.reset()}onActivate(){this._drawActive||this._vertices.length!==0||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1}reset(){this._resetVertices(),this._measurementLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1,this._updateSketch([])}_resetVertices(){for(const{handle:t}of this._vertices)t.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const t=this._draw.create("polyline",{mode:"click"});t.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],e=>this._updateSketch(e.vertices)),t.on("draw-complete",()=>{this._stopSketch()})}_stopSketch(){this.manipulators.forEach(({manipulator:t})=>{t.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(t){const{spatialReference:e}=this.view;for(;this._vertices.length>t.length;){const{handle:r,manipulator:d}=this._vertices.pop();r.remove(),this.manipulators.remove(d)}for(let r=this._vertices.length;r<t.length;r++){const[d,M]=t[r],b=Ce(new j({x:d,y:M,spatialReference:e}),this.view,this._manipulatorLayer);this.manipulators.add(b);const L=Te(b,(_,x)=>{x.next(xe(this.view)).next(ke(_.graphic,ae.Local)).next(()=>{const D=_.graphic.geometry;this._vertices[r].coord=[D.x,D.y],this._updatePolylines()})});this._vertices.push({manipulator:b,coord:[d,M],handle:L})}const a=this._vertices.length-1,n=this._vertices[a],[c,o]=t[a];n.coord[0]===c&&n.coord[1]===o||(n.coord=[c,o],n.manipulator.graphic.geometry=new j({x:c,y:o,spatialReference:e}));const m=this._drawActive?this._vertices[a].manipulator:null;this.manipulators.forEach(({manipulator:r})=>{r.interactive=J(m)||r!==m}),this._updatePolylines()}_updatePolylines(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const t=this._vertices.map(({coord:d})=>d),{measurement:e,drawing:a,original:n}=Re(t,this.view.spatialReference,this.geodesicDistanceThreshold);this._set("measurement",e);const c=We(this.messages,e,this.unit);let o,m;this._set("measurementLabel",c);const{graphics:r}=this._measurementLayer;r.length===2?(o=r.at(0),m=r.at(1)):(o=new V({symbol:new re({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[14,12],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:3.5,color:fe().toArray()},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:5,color:Q().toArray()}]}}})}),m=new V({symbol:new oe({color:$e(),haloColor:Me(.5),haloSize:2,font:new le({size:14,family:"sans-serif"})})}),r.removeAll(),r.addMany([o,m])),o.geometry=a,m.geometry=n.extent.center,m.symbol.text=c}};function Ce(t,e,a){const n=Q(.5),c={type:"simple-line",width:0},o=8,m=new q({style:"circle",color:n,size:o,outline:c}),r=new q({style:"circle",color:n,size:1.5*o,outline:c}),d=new V({geometry:t,symbol:m});return new Ue({view:e,layer:a,graphic:d,focusedSymbol:r})}function Re(t,e,a){const n=new ue({paths:[t],spatialReference:e});let c,o;if(e.isGeographic)if(K(e))c=U([n],"meters")[0],o=A(n,O);else{const m=S(n,H.WGS84),r=A(m,O);c=U([m],"meters")[0],o=S(r,e)}else if(e.isWebMercator)c=Le(n,"meters"),o=De(n,O,"meters");else{const m=Se(n,"meters");if(m>=a){const r=S(n,H.WGS84),d=A(r,O);c=U([r],"meters")[0],o=S(d,e)}else c=m,o=n}return{measurement:{geometry:o,length:c},original:n,drawing:o}}function Ve(t){return t!=null}function Ee(t){if(!t)return!1;const{isGeographic:e,isWebMercator:a,isWGS84:n}=t;return e&&!n&&!K(t)||!e&&!a}function We(t,e,a){if(!e||!t)return null;switch(a){case"metric":return de(t,e.length,"meters");case"imperial":return he(t,e.length,"meters");default:return me(t,ce(e.length,"meters",a),a)}}s([i()],p.prototype,"_drawActive",void 0),s([i({readOnly:!0})],p.prototype,"cursor",null),s([i({value:!0})],p.prototype,"editable",null),s([i({type:Number})],p.prototype,"geodesicDistanceThreshold",void 0),s([i({readOnly:!0})],p.prototype,"measurement",void 0),s([i({readOnly:!0})],p.prototype,"measurementLabel",void 0),s([i()],p.prototype,"messages",void 0),s([i()],p.prototype,"unit",void 0),s([i({constructOnly:!0})],p.prototype,"view",void 0),p=s([E("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DTool")],p);let v=class extends Ae{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="DistanceMeasurement2DViewModel is only supported in 2D views.",this._handles=new pe,this.geodesicDistanceThreshold=1e5}initialize(){this._handles.add([T(()=>{var e;return(e=N(this.view))==null?void 0:e.spatialReference},()=>this.clear()),T(()=>this.unit,e=>{w(this.tool)&&(this.tool.unit=e)},R),T(()=>this.geodesicDistanceThreshold,e=>{w(this.tool)&&(this.tool.geodesicDistanceThreshold=e)},R)])}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}get measurement(){return w(this.tool)?this.tool.measurement:null}get measurementLabel(){return w(this.tool)?this.tool.measurementLabel:null}get state(){var e;return this.disabled||J(this.view)||!Ve((e=this.view)==null?void 0:e.spatialReference)?"disabled":w(this.tool)&&this.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return C}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;w(e)&&(await ve(()=>e.ready),Ee(e.spatialReference)&&await ye()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new p({view:N(this.view),visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){return this.unitOptions.includes(e)?e:this.unitOptions.includes(this.defaultUnit)?this.defaultUnit:this.unitOptions[0]}_validateUnits(e=[]){const a=e.filter(n=>C.includes(n));return a.length===0?C.slice():a}};s([i(be)],v.prototype,"defaultUnit",void 0),s([i({type:Number})],v.prototype,"geodesicDistanceThreshold",void 0),s([i({readOnly:!0})],v.prototype,"measurement",null),s([i({readOnly:!0})],v.prototype,"measurementLabel",null),s([i({readOnly:!0})],v.prototype,"state",null),s([i({type:String})],v.prototype,"unit",null),s([i({type:[String]})],v.prototype,"unitOptions",null),v=s([E("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DViewModel")],v);const X=v,y="esri-distance-measurement-2d",$=`${y}__measurement`,I=`${y}__units`,l={buttonDisabled:"esri-button--disabled",widgetIcon:"esri-icon-measure-line",base:`${y} esri-widget esri-widget--panel`,container:`${y}__container`,hint:`${y}__hint`,hintText:`${y}__hint-text`,panelError:`${y}__panel--error`,measurement:$,measurementItem:`${$}-item`,measurementItemDisabled:`${$}-item--disabled`,measurementItemTitle:`${$}-item-title`,measurementItemValue:`${$}-item-value`,settings:`${y}__settings`,units:I,unitsLabel:`${I}-label`,unitsSelect:`${I}-select esri-select`,unitsSelectWrapper:`${I}-select-wrapper`,actionSection:`${y}__actions`,newMeasurementButton:`${y}__clear-button esri-button esri-button--primary`};let h=class extends ge{constructor(t,e){super(t,e),this.iconClass=l.widgetIcon,this.messages=null,this.messagesUnits=null,this.viewModel=new X}get active(){return this.viewModel.active}get label(){var t;return((t=this.messages)==null?void 0:t.widgetLabel)??""}set label(t){this._overrideIfSome("label",t)}get unit(){return this.viewModel.unit}set unit(t){this.viewModel.unit=t}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(t){this.viewModel.unitOptions=t}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}get visible(){return this.viewModel.visible}set visible(t){this.viewModel.visible=t}render(){const{id:t,messages:e,messagesUnits:a,viewModel:n,visible:c}=this,{active:o,supported:m,measurementLabel:r,state:d,unit:M,unitOptions:b}=n,L=d==="disabled",_=d==="measuring"||d==="measured",x=o&&d==="ready"?u("section",{key:"hint",class:l.hint},u("p",{class:l.hintText},e.hint)):null,D=m?null:u("section",{key:"unsupported",class:l.panelError},u("p",null,e.unsupported)),Y=(g,f,z)=>w(f)?u("div",{key:`${z}-enabled`,class:l.measurementItem},u("span",{class:l.measurementItemTitle},g),u("span",{"aria-live":"polite",class:l.measurementItemValue},f)):u("div",{key:`${z}-disabled`,class:this.classes(l.measurementItem,l.measurementItemDisabled),"aria-disabled":"true"},u("span",{class:l.measurementItemTitle},g)),Z=_?u("section",{key:"measurement",class:l.measurement},Y(e.distance,r,"distance")):null,W=`${t}-units`,ee=_?u("section",{key:"units",class:l.units},u("label",{class:l.unitsLabel,for:W},e.unit),u("div",{class:l.unitsSelectWrapper},u("select",{class:l.unitsSelect,id:W,onchange:this._changeUnit,bind:this,value:M},b.map(g=>{var f;return u("option",{key:g,value:g},_e(g)?a.systems[g]:(f=a.units[g])==null?void 0:f.pluralCapitalized)})))):null,te=_?u("div",{key:"settings",class:l.settings},ee):null,se=!m||o&&!_?null:u("div",{class:l.actionSection},u("button",{"aria-label":e.newMeasurement,bind:this,class:this.classes(l.newMeasurementButton,L&&l.buttonDisabled),disabled:L,onclick:this._newMeasurement,title:e.newMeasurement,type:"button"},e.newMeasurement)),ie=c?u("div",{class:l.container},D,x,te,Z,se):null;return u("div",{"aria-label":e.widgetLabel,class:l.base,role:"region"},ie)}_newMeasurement(){we(this.viewModel.start())}_changeUnit(t){const e=t.target,a=e.options[e.selectedIndex];a&&(this.viewModel.unit=a.value)}};s([i({readOnly:!0})],h.prototype,"active",null),s([i()],h.prototype,"iconClass",void 0),s([i()],h.prototype,"label",null),s([i()],h.prototype,"uiStrings",void 0),s([i(),P("esri/widgets/DistanceMeasurement2D/t9n/DistanceMeasurement2D")],h.prototype,"messages",void 0),s([i(),P("esri/core/t9n/Units")],h.prototype,"messagesUnits",void 0),s([i()],h.prototype,"unit",null),s([i()],h.prototype,"unitOptions",null),s([i()],h.prototype,"view",null),s([i({type:X})],h.prototype,"viewModel",void 0),s([i({type:Boolean})],h.prototype,"visible",null),s([F()],h.prototype,"_newMeasurement",null),s([F()],h.prototype,"_changeUnit",null),h=s([E("esri.widgets.DistanceMeasurement2D")],h);const pt=h;export{pt as default};
