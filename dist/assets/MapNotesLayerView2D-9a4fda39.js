import{I as o,g as f,D as w,x as p,B as n,Q as y,as as _,e as V,a as v}from"./index-84d82762.js";import{h as C}from"./Container-3143eee9.js";import{r as H}from"./GroupContainer-8cf94e34.js";import{f as b}from"./LayerView2D-715967bf.js";import{i as g}from"./GraphicContainer-5961528f.js";import{a as m}from"./GraphicsView2D-6496434e.js";import{u as I}from"./LayerView-70584726.js";import"./EffectView-8884bcf8.js";import"./definitions-19bfb61c.js";import"./enums-64ab819c.js";import"./Texture-01146b87.js";import"./WGLContainer-b78eadcd.js";import"./VertexArrayObject-5928be90.js";import"./VertexElementDescriptor-2925c6af.js";import"./vec4f32-0d1b2306.js";import"./color-f709a8e1.js";import"./enums-55085e26.js";import"./number-b10bd8f5.js";import"./ProgramTemplate-5d941873.js";import"./MaterialKey-48941800.js";import"./alignmentUtils-ae955d28.js";import"./utils-a19edd14.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./earcut-61f7b102.js";import"./BaseGraphicContainer-1acfb985.js";import"./FeatureContainer-50848415.js";import"./AttributeStoreView-01f76a5b.js";import"./TiledDisplayObject-40abdd30.js";import"./visualVariablesUtils-fff64b5d.js";import"./visualVariablesUtils-437863b0.js";import"./TileContainer-0df2068e.js";import"./vec3f32-ad1dc57f.js";import"./cimAnalyzer-4d73c73b.js";import"./fontUtils-2a2a4860.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-223a8282.js";import"./floatRGBA-40a7b76b.js";import"./normalizeUtilsSync-93a8bb0b.js";import"./Matcher-dc06a486.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-7acc0fb6.js";import"./ExpandedCIM-e76ebef6.js";import"./schemaUtils-d98cc76d.js";import"./util-eb41816b.js";import"./ComputedAttributeStorage-1c2512ad.js";import"./arcadeTimeUtils-7857a6a9.js";import"./centroid-a04a0cd1.js";const d="sublayers",l="layerView",T=Object.freeze({remove(){},pause(){},resume(){}});let c=class extends b(I){constructor(){super(...arguments),this._highlightIds=new Map,this.container=new H}async fetchPopupFeatures(i){return Array.from(this.graphicsViews(),t=>t.hitTest(i).filter(e=>!!e.popupTemplate)).flat()}*graphicsViews(){o(this._graphicsViewsFeatureCollectionMap)?yield*this._graphicsViewsFeatureCollectionMap.keys():o(this._graphicsViews)?yield*this._graphicsViews:yield*[]}async hitTest(i,t){return Array.from(this.graphicsViews(),e=>{const s=e.hitTest(i);if(o(this._graphicsViewsFeatureCollectionMap)){const h=this._graphicsViewsFeatureCollectionMap.get(e);for(const r of s)!r.popupTemplate&&h.popupTemplate&&(r.popupTemplate=h.popupTemplate),r.sourceLayer=r.layer=this.layer}return s}).flat().map(e=>({type:"graphic",graphic:e,layer:this.layer,mapPoint:i}))}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof f?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):w.isCollection(i)&&(t=i.map(s=>s&&s.uid).toArray());const e=t==null?void 0:t.filter(o);return e!=null&&e.length?(this._addHighlight(e),{remove:()=>{this._removeHighlight(e)}}):T}update(i){for(const t of this.graphicsViews())t.processUpdate(i)}attach(){const i=this.view,t=()=>this.requestUpdate(),e=this.layer.featureCollections;if(o(e)&&e.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const s of e){const h=new g(this.view.featuresTilingScheme),r=new m({view:i,graphics:s.source,renderer:s.renderer,requestUpdateCallback:t,container:h});this._graphicsViewsFeatureCollectionMap.set(r,s),this.container.addChild(r.container),this.addHandles([p(()=>s.visible,a=>r.container.visible=a,n),p(()=>r.updating,()=>this.notifyChange("updating"),n)],l)}this._updateHighlight()}else o(this.layer.sublayers)&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(l);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),_(this.layer.sublayers))return;const i=[],t=this.view,e=()=>this.requestUpdate();for(const s of this.layer.sublayers){const h=new C,r=new g(this.view.featuresTilingScheme);r.fadeTransitionEnabled=!0;const a=new m({view:t,graphics:s.graphics,requestUpdateCallback:e,container:r});this.addHandles([s.on("graphic-update",a.graphicUpdateHandler),p(()=>s.visible,u=>a.container.visible=u,n),p(()=>a.updating,()=>this.notifyChange("updating"),n)],l),h.addChild(a.container),this.container.addChild(h),i.push(a)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;e===0?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys());for(const t of this.graphicsViews())t.setHighlight(i)}};c=V([v("esri.views.2d.layers.MapNotesLayerView2D")],c);const bi=c;export{bi as default};
