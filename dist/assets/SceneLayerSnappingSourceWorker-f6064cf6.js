import{cb as l,fY as u,aF as g,e as x,a as V,aB as p,ab as v,as as b,c2 as L,o_ as C,dt as m}from"./index-7753bab1.js";import{v as j,b as P,j as S}from"./lineSegment-94ce77e4.js";import{R as $,k as _,N as E}from"./sphere-89c2d6c4.js";import{V as y}from"./Octree-d70a1310.js";import{m as I}from"./edgeProcessing-fed2e383.js";import"./mat3f64-221ce671.js";import"./mat4f64-65d35099.js";import"./quatf64-3363c48e.js";import"./plane-32e6467c.js";import"./Util-d77dfa33.js";import"./deduplicate-a9192c99.js";import"./Indices-4fd742c7.js";import"./InterleavedLayout-f57c96d2.js";import"./BufferView-7ae97da4.js";import"./types-e1c0a5bf.js";import"./VertexAttribute-15d1866a.js";import"./glUtil-7a9be557.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";const T=1e3;function N(t,o,e){const i=$(),n=_(i);return l(n,n,t,.5),l(n,n,o,.5),i[3]=u(n,t),g(n,n,e),i}let f=class{constructor(){this._idToComponent=new Map,this._components=new y(t=>t.bounds),this._edges=new y(t=>t.bounds),this._tmpLineSegment=j(),this._tmpP1=p(),this._tmpP2=p(),this._tmpP3=p(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),v(o),await this._ensureEdgeLocations(t,o);const e=[];return this._edges.forEachNeighbor(i=>(this._addCandidates(t,i,e),e.length<T),t.bounds),{result:{candidates:e}}}async _ensureEdgeLocations(t,o){const e=[];if(this._components.forEachNeighbor(s=>{if(b(s.info)){const{id:a,uid:d}=s;e.push({id:a,uid:d})}return!0},t.bounds),!e.length)return;const i={components:e},n=await this.remoteClient.invoke("fetchAllEdgeLocations",i,L(o,{}));for(const s of n.components)this._setFetchEdgeLocations(s)}async add(t){const o=new h(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const e=[];this._edges.forEachNeighbor(i=>(i.component===o&&e.push(i),!0),o.bounds),this._edges.remove(e),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const o=this._idToComponent.get(t.id);if(b(o)||t.uid!==o.uid)return;const e=I.createView(t.locations),i=new Array(e.count),n=p(),s=p();for(let r=0;r<e.count;r++){e.position0.getVec(r,n),e.position1.getVec(r,s);const c=N(n,s,t.origin),w=new k(o,r,c);i[r]=w}this._edges.add(i);const{objectIds:a,origin:d}=t;o.info={locations:e,objectIds:a,origin:d}}_addCandidates(t,o,e){const{info:i}=o.component,{origin:n,objectIds:s}=i,a=i.locations,d=a.position0.getVec(o.index,this._tmpP1),r=a.position1.getVec(o.index,this._tmpP2);g(d,d,n),g(r,r,n);const c=s[a.componentIndex.get(o.index)];this._addEdgeCandidate(t,c,d,r,e),this._addVertexCandidate(t,c,d,e),this._addVertexCandidate(t,c,r,e)}_addEdgeCandidate(t,o,e,i,n){if(!(t.types&C.EDGE))return;const s=_(t.bounds),a=P(e,i,this._tmpLineSegment),d=S(a,s,this._tmpP3);E(t.bounds,d)&&n.push({type:"edge",objectId:o,target:m(d),distance:u(s,d),start:m(e),end:m(i)})}_addVertexCandidate(t,o,e,i){if(!(t.types&C.VERTEX))return;const n=_(t.bounds);E(t.bounds,e)&&i.push({type:"vertex",objectId:o,target:m(e),distance:u(n,e)})}};f=x([V("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],f);const tt=f;class h{constructor(o,e){this.id=o,this.bounds=e,this.info=null,this.uid=++h.uid}}h.uid=0;class k{constructor(o,e,i){this.component=o,this.index=e,this.bounds=i}}export{tt as default};
