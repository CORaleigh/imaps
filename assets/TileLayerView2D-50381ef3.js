import{nj as w,nk as y,nl as I,nm as V,z as v,aT as T,ad as l,iv as c,aS as H,e as o,y as g,a as q}from"./index-056c54a4.js";import"./Rasterizer-d5997801.js";import"./EffectView-529d0ac5.js";import"./Container-d7f99152.js";import"./BufferPool-a5303daf.js";import"./color-6785f00e.js";import"./WGLContainer-e90e6675.js";import"./vec4f32-0d1b2306.js";import"./enums-64ab819c.js";import"./Texture-8a965b0b.js";import"./ProgramTemplate-122fdc23.js";import"./MaterialKey-fa5b1ad7.js";import"./utils-bea86d3d.js";import"./VertexArrayObject-867c589c.js";import"./number-b10bd8f5.js";import"./StyleDefinition-fbc907c2.js";import"./enums-fb086c25.js";import"./MagnifierPrograms-081d2733.js";import"./OrderIndependentTransparency-92d1201d.js";import"./floatRGBA-42e02ec2.js";import"./webgl-debug-b1f7a2c5.js";import{a as U}from"./GraphicsView2D-4525aca6.js";import"./AttributeStoreView-0bb29017.js";import"./earcut-61f7b102.js";import"./vec3f32-ad1dc57f.js";import{t as Q,o as f,n as d}from"./imageUtils-e4367a08.js";import{f as S}from"./LayerView2D-787b9454.js";import{n as b}from"./HighlightGraphicContainer-50f9843f.js";import{u as C}from"./LayerView-4221c2d8.js";import{i as k}from"./RefreshableLayerView-68c78c99.js";import{P as F,S as P}from"./MapServiceLayerViewHelper-7946d5c4.js";import{a as z}from"./drapedUtils-476a1deb.js";import"./_commonjsHelpers-2f3e7994.js";import"./cimAnalyzer-bde3e5aa.js";import"./fontUtils-4c5efd72.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./enums-55085e26.js";import"./alignmentUtils-ae955d28.js";import"./definitions-19bfb61c.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-cd5f0a91.js";import"./rasterizingUtils-38c26b41.js";import"./VertexElementDescriptor-2925c6af.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./imageutils-8c52ebc2.js";import"./Matcher-88b8ac0b.js";import"./visualVariablesUtils-ca43c24b.js";import"./visualVariablesUtils-d2906eec.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-54758822.js";import"./ExpandedCIM-747cf648.js";import"./CircularArray-7c7c2321.js";import"./ComputedAttributeStorage-088e07c8.js";import"./arcadeTimeUtils-9cac350a.js";import"./centroid-9716b441.js";import"./basicInterfaces-04e01328.js";import"./normalizeUtilsSync-6c0d8ec3.js";import"./schemaUtils-46db8c2a.js";import"./util-2b8216a2.js";import"./TiledDisplayObject-26b1cc81.js";import"./BitmapTileContainer-7aa7d9b0.js";import"./Bitmap-e3f97eba.js";import"./TileContainer-8b8c2da9.js";import"./BaseGraphicContainer-b6e394f6.js";import"./FeatureContainer-fdbfc140.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-01d185f7.js";import"./popupUtils-3c058107.js";const G=[0,0];let h=class extends k(Q(S(C))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}update(t){var e;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(e=this._highlightView)==null||e.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,i)=>this.fetchTile(e,i)}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),F(this,this.layer)){const e=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new b(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new P({createFetchPopupFeaturesQueryGeometry:(i,r)=>z(i,r,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(i,r)=>{e.graphicUpdateHandler({graphic:i,property:r})},layerView:this,updatingHandles:this.updatingHandles})}this.requestUpdate(),this.addAttachHandles(v(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(t,e){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(t,e):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):{remove(){}}}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var e;return T((e=this.layer.tileInfo)==null?void 0:e.spatialReference,t)}async doRefresh(){!this.attached||this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach(t=>this._enqueueTileFetch(t)))}isUpdating(){var t;return((t=this._fetchQueue)==null?void 0:t.updating)??!1}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(G,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(e),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,e={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:n=0}=e;if(!i)try{return await this._fetchImage(t,r)}catch(s){if(!l(s)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(n<3){const m=this._tileInfoView.getTileParentId(t.id);if(m){const u=new c(m),_=await this.fetchTile(u,{...e,resamplingLevel:n+1});return d(this._tileInfoView,_,u,t)}}throw s}const a=new c(0,0,0,0);let p;try{if(await i.fetchAvailabilityUpsample(t.level,t.row,t.col,a,{signal:r}),a.level!==t.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);p=await this._fetchImage(a,r)}catch(s){if(l(s))throw s;p=await this._fetchImage(t,r)}return this.resampling?d(this._tileInfoView,p,a,t):p}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(e){l(e)||H.getLogger(this.declaredClass).error(e)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}};o([g()],h.prototype,"_fetchQueue",void 0),o([g()],h.prototype,"resampling",null),h=o([q("esri.views.2d.layers.TileLayerView2D")],h);const Yt=h;export{Yt as default};
