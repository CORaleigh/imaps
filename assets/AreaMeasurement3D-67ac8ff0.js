import{e as a,y as n,a$ as st,b9 as A,a as U,at as M,aS as at,J as m,dJ as nt,aC as z,c as H,af as rt,a7 as f,dG as ot,aw as E,x as K,z as V,dr as lt,pm as pt,ai as W,U as R,j7 as ht,c3 as ut,bb as G,cj as F,N as B,P as j,W as dt,A as p,qD as mt}from"./index-056c54a4.js";import{c as ct}from"./Analysis-9b5ed6a3.js";import{e as gt}from"./Measure-c1bb6472.js";import{a as _t,t as yt,b as wt,E as N,v as vt}from"./InteractiveAnalysisViewModel-68571bbd.js";import{M as O}from"./hydratedFeatures-cb62cc9c.js";import{j as q,d as bt,B as Mt,x as ft,k as Vt}from"./dragEventPipeline3D-3e3eb4f6.js";import{i as J,u as Dt}from"./analysisThemeUtils-87c5d5ce.js";import{ap as $t,ad as St}from"./NativeLineMaterial-2bc2eb58.js";import{e as Q,x as xt,m as Pt}from"./SnappingDragPipelineStep-53254785.js";import{a as Ot,V as Lt,g as At,w as Ut}from"./SnappingContext-ecb67583.js";import{h as It}from"./SnappingOperation-470d0ac7.js";import"./getDefaultUnitForView-7806ca44.js";import"./geometryEngineBase-e1a33b0a.js";import"./InteractiveToolViewModel-fe6f77c2.js";import"./vec4f32-0d1b2306.js";import"./Octree-20f758fd.js";import"./sphere-3ae2d2df.js";import"./mat3f64-221ce671.js";import"./mat4f64-65d35099.js";import"./quatf64-3363c48e.js";import"./plane-163fe497.js";import"./Util-778b7564.js";import"./lineSegment-63c436ff.js";import"./VertexColor.glsl-15c5c3e9.js";import"./requestImageUtils-1d4d3276.js";import"./OrderIndependentTransparency-92d1201d.js";import"./enums-64ab819c.js";import"./basicInterfaces-04e01328.js";import"./Texture-8a965b0b.js";import"./VertexArrayObject-867c589c.js";import"./triangle-82cfef35.js";import"./Indices-679d5379.js";import"./VertexAttribute-15d1866a.js";import"./doublePrecisionUtils-e3c3d0d8.js";import"./quat-b06529da.js";import"./vec3f32-ad1dc57f.js";import"./BufferView-48b69dc1.js";import"./VertexElementDescriptor-2925c6af.js";import"./glUtil-7a9be557.js";import"./InterleavedLayout-fd66e391.js";import"./types-e1c0a5bf.js";import"./DoubleArray-60426e22.js";import"./colorUtils-14347c9c.js";import"./interfaces-736d93d7.js";import"./NestedMap-1b5db22e.js";import"./boundedPlane-694974c2.js";import"./floatRGBA-42e02ec2.js";import"./drawUtils-b49928b5.js";import"./PointSnappingHint-f32d61d8.js";let b=class extends ct{constructor(t){super(t),this.type="area-measurement",this.unit=null}set geometry(t){M(t)?this._set("geometry",null):(t.rings.length>1&&at.getLogger(this.declaredClass).warn("Measuring polygons with multiple rings is not supported."),this._set("geometry",t.clone()))}get requiredPropertiesForEditing(){if(m(this.geometry)&&this.geometry.rings.length===1){const t=this.geometry.rings[0];if(t.length<=2||!nt(t[0],t[t.length-1]))return[null]}return[this.geometry]}clear(){this.geometry=null}};a([n({type:["area-measurement"]})],b.prototype,"type",void 0),a([n({value:null,type:st})],b.prototype,"geometry",null),a([n({type:A,value:null})],b.prototype,"unit",void 0),a([n({readOnly:!0})],b.prototype,"requiredPropertiesForEditing",null),b=a([U("esri.analysis.AreaMeasurementAnalysis")],b);const X=b;class kt{constructor(e,i=null){this.screenPoint=e,this.result=i}}class Ct{constructor(e,i){this.scenePoint=e,this.mapPoint=i}}class Tt{constructor(e){this.vertexManipulators=[],this._destroyed=!1,this._isManipulatorsOwner=!0,this._visible=!0,this._laserLine=null,this._cursorManipulator=null,this._listenerHandles=null,this._tempHandlePosition=z(),this._defaultStyle={laserLineGlowColor:H.toUnitRGB(J()),laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:H.toUnitRGB(Dt()),laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:H.toUnitRGB(J()),handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25};const{analysisViewData:i,manipulators:s,toolState:o,view:r,visible:c}=e;this._analysisViewData=i,this._toolState=o,s!=null?(this._manipulators=s,this._isManipulatorsOwner=!1):this._manipulators=new Q,this._view=r;const h=this._style={...this._defaultStyle,...rt(e.style)};this._intersector=$t(r.state.viewingMode),this._intersector.options.store=St.MIN;const u=q(r,h.handleColor,h.handleOpacity);u.available=!1,u.radius=h.handleRadius,u.interactive=!1,this._manipulators.add(u),this._cursorManipulator=u,this._laserLine=new bt({view:r,attached:!0,style:{glowColor:h.laserLineGlowColor,glowWidth:h.laserLineGlowWidth,glowFalloff:h.laserLineGlowFalloff,innerColor:h.laserLineInnerColor,innerWidth:h.laserLineInnerWidth,globalAlpha:h.laserLineGlobalAlpha}}),this._updateVisibility(c||!0)}destroy(){this._listenerHandles=f(this._listenerHandles),this._isManipulatorsOwner?this._manipulators=f(this._manipulators):this._manipulators=null,this._laserLine=f(this._laserLine),this._destroyed=!0}get destroyed(){return this._destroyed}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get testData(){const e=this._laserLine.testData;return{laserLineRenderer:m(e)?{heightManifoldEnabled:e.heightManifoldEnabled,heightManifoldTarget:e.heightManifoldTarget,pointDistanceEnabled:e.pointDistanceEnabled,pointDistanceOrigin:e.pointDistanceOrigin,pointDistanceTarget:e.pointDistanceTarget,lineVerticalPlaneEnabled:e.lineVerticalPlaneEnabled}:{heightManifoldEnabled:!1,heightManifoldTarget:null,pointDistanceEnabled:!1,pointDistanceOrigin:null,pointDistanceTarget:null,lineVerticalPlaneEnabled:!1}}}show(){this._setVisibility(!0)}hide(){this._setVisibility(!1)}_setVisibility(e){this._destroyed||this._visible===e||this._updateVisibility(e)}_updateVisibility(e){this._visible=e,this._laserLine.visible=e,e?(this._initializeListeners(),this._updateAll()):(this._destroyListeners(),this.vertexManipulators.forEach(i=>this._removeVertexManipulator(i)),this.vertexManipulators=[],this._view.cursor=null)}vertexHandleAt(e,i){const s=this._manipulators.intersect(e,i);return m(s)?s.metadata:null}pick(e){const i=this._view.spatialReference,s=ot(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(s,this._intersector);const o=this._intersector.results.min,r=z();if(!o.getIntersectionPoint(r))return null;const c=this._view.renderCoordsHelper.fromRenderCoords(r,i);return M(c)?null:new Ct(r,c)}_updateAll(){this._visible&&(this._updateVertexManipulators(),this._updateLaserLine())}_createVertexManipulator(){const e=q(this._view,this._style.handleColor,this._style.handleOpacity);return e.radius=this._style.handleRadius,this._manipulators.add(e),e}_removeVertexManipulator(e){this._manipulators.remove(e)}_updateVertexManipulators(){const{viewData:e}=this._analysisViewData,i=this._analysisViewData.path?this._analysisViewData.path.vertices:[],s=this.vertexManipulators;Ht(s,i.length,()=>this._createVertexManipulator(),o=>this._removeVertexManipulator(o)),s.forEach((o,r)=>{o.metadata=i[r],o.renderLocation=e.positionsRenderCoords[r],o.cursor=r===0&&this._toolState.polygonState==="drawing"?"crosshair":null}),this._toolState.polygonState==="drawing"&&m(this._analysisViewData.cursorPoint)?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._analysisViewData.cursorPoint):this._cursorManipulator.available=!1}_getFocusPoint(){const{lastDraggedVertex:e}=this._analysisViewData;switch(this._toolState.polygonState){case"drawing":return m(this._analysisViewData.cursorPoint)?this._analysisViewData.cursorPoint:m(e)?this._analysisViewData.path.getVertexPositionAsPoint(e):E(this._analysisViewData.path.lastPoint);case"editing":return m(e)?this._analysisViewData.path.getVertexPositionAsPoint(e):null;default:return this._analysisViewData.cursorPoint}}_updateLaserLine(){const e=this._style.laserLineEnabled&&this._toolState.polygonState!=="measured"&&this._toolState.active,i=this._getFocusPoint();if(e&&m(i)){const s=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(i,s),this._laserLine.heightManifoldTarget=s}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new K,this._listenerHandles.add([V(()=>this._toolState.polygonState,()=>this._updateLaserLine()),V(()=>this._analysisViewData.viewData,()=>this._updateAll(),lt),V(()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.cursorPoint}),()=>this._updateLaserLine()),V(()=>this._toolState.active,()=>this._updateAll())])}_destroyListeners(){this._listenerHandles=f(this._listenerHandles)}}function Ht(t,e,i,s){for(;t.length<e;)t.push(i());if(s)for(;t.length>e;)s(t.pop());else t.length=e}let g=class extends _t{constructor(t){super(t),this._handles=new K,this._updatingHandles=new pt,this.polygonState="initial",this.manipulators=new Q,this._getSnappingContext=yt(e=>new Ot({elevationInfo:{mode:"absolute-height",offset:0},pointer:e,editGeometryOperations:new Lt(new At("point",Ut(!0,!1,this.view.spatialReference))),visualizer:new ft}))}initialize(){const{view:t,analysisViewData:e,manipulators:i,visible:s}=this;this.measurementView=new Tt({view:t,analysisViewData:e,toolState:this,manipulators:i,visible:s});const o=wt(t);this._snappingManagerResult=o,this._handles.add(o),this._snappingOperation=new It({view:t}),this._updatingHandles.add(()=>this.stagedPoint,r=>{this.analysisViewData.cursorPoint=m(r)?O(r,new W):null},R),ht(this,()=>{const r=ut(this.view.inputManager.latestPointerType,"mouse"),c=this._getSnappingContext(r);this._updatingHandles.addPromise(G(this._snappingOperation.resnap(this._snappingManager,c)))}),this._setupManipulators(),this._handles.add(V(()=>this.state,r=>{r==="measured"&&this.finishToolCreation()},R))}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this._handles=f(this._handles),this._updatingHandles=f(this._updatingHandles)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){return this.analysisViewData.path.numVertices===0?"ready":this.analysisViewData.validMeasurement&&this.polygonState!=="editing"?"measured":"measuring"}get cursor(){return this.state==="ready"||this.polygonState==="drawing"?"crosshair":null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}get stagedPoint(){return this._snappingOperation.stagedPoint}set stagedPoint(t){this._snappingOperation.stagedPoint=t}get snappingOptions(){return this._snappingManager.options}finishMeasurement(){const{path:t}=this.analysisViewData;t.numVertices<3?(t.clear(),this.polygonState="initial"):(t.close(),this.polygonState="measured"),this._resetSnappingState()}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onDeactivate(){this._resetSnappingState()}onInputEvent(t){switch(t.type){case"immediate-double-click":this._handleImmediateDoubleClick(t);break;case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t);break;case"drag":this._handleDrag(t);break;case"key-down":this._handleKeyDown(t)}}_setupManipulators(){const t=i=>i.events.on("grab-changed",()=>{if(this.analysisViewData.validMeasurement){const s=this.manipulators.some(o=>o.manipulator.grabbing);this.polygonState=s?"editing":"measured"}}),e=i=>{this._handles.add([xt(i,(s,o,r,c)=>{const h=Vt(s),u=s.metadata,I=this._snappingManager,k=this._getSnappingContext(c),S=this._updatingHandles,{snappingStep:C,cancelSnapping:x}=Pt({snappingManager:I,snappingContext:k,updatingHandles:S});r=r.next(h).next(v=>(this.analysisViewData.lastDraggedVertex=null,this.analysisViewData.path.setVertexPosition(u,P),s.location=P,v)).next(x),o.next(h).next(Mt(this.view)).next(...C).next(v=>{s.location=v.mapEnd,this.analysisViewData.lastDraggedVertex=v.action==="end"?null:u,this.analysisViewData.path.setVertexPosition(u,O(v.mapEnd))});const P=O(this.analysisViewData.path.getVertexPositionAsPoint(u))}),t(i)],i)};this.manipulators.forEach(({manipulator:i})=>{e(i)}),this._handles.add([this.manipulators.on("after-add",({item:{manipulator:i}})=>{e(i)}),this.manipulators.on("after-remove",({item:{manipulator:i}})=>this._handles.remove(i))])}_handleImmediateDoubleClick(t){N(t)&&(this.polygonState==="drawing"&&this.finishMeasurement(),t.stopPropagation())}_handleDrag(t){this.polygonState==="editing"&&t.stopPropagation()}_handleImmediateClick(t){if(!N(t))return;const e=F(t),{pointerType:i}=t;if(this.active)switch(this.polygonState){case"initial":if(this._addVertexAt(e,i))return this.stagedPoint=null,this.polygonState="drawing",void t.stopPropagation();break;case"drawing":{const s=this.measurementView.vertexHandleAt(e,i);if(M(s)){if(this._addVertexAt(e,i))return this.stagedPoint=null,void t.stopPropagation()}else s.index===0&&(this.finishMeasurement(),t.stopPropagation());break}}t.pointerType==="mouse"&&this._hoverAt(e)}_handlePointerMove(t){if(t.pointerType==="mouse"){const e=F(t);this._hoverAt(e)}}_handleKeyDown(t){t.key==="Enter"&&this.polygonState==="drawing"&&(this.finishMeasurement(),t.stopPropagation())}_hoverAt(t){const{polygonState:e}=this;if(this.active&&(e==="initial"||e==="drawing")){const i=this._pick(t);if(m(i)&&m(i.mapPoint)){const s=this._getSnappingContext("mouse");this._updatingHandles.addPromise(G(this._snappingOperation.snap({point:i.mapPoint},this._snappingManager,s)))}}else this.stagedPoint=null}_addVertexAt(t,e){const i=this._pick(t);if(m(i)&&m(i.mapPoint)){const{mapPoint:s}=i,o=this._getSnappingContext(e),r=this._snappingOperation.update({point:s},this._snappingManager,o),c=O(r,new W);return this.analysisViewData.path.add(c),!0}return!1}_pick(t){const e=new kt(t);return this.measurementView.pick(e)}_resetSnappingState(){this._snappingManager.doneSnapping(),this._snappingOperation.abort(),this._snappingOperation.stagedPoint=null}get test(){return{snappingManager:this._snappingManager}}};a([n({readOnly:!0})],g.prototype,"state",null),a([n()],g.prototype,"polygonState",void 0),a([n({readOnly:!0})],g.prototype,"cursor",null),a([n()],g.prototype,"measurementView",void 0),a([n({constructOnly:!0})],g.prototype,"view",void 0),a([n({constructOnly:!0})],g.prototype,"analysis",void 0),a([n({constructOnly:!0})],g.prototype,"analysisViewData",void 0),a([n({readOnly:!0})],g.prototype,"manipulators",void 0),a([n()],g.prototype,"updating",null),a([n()],g.prototype,"stagedPoint",null),a([n()],g.prototype,"snappingOptions",null),g=a([U("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],g);const Et=g;let _=class extends vt{constructor(e){super(e),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="AreaMeasurement3DViewModel is only supported in 3D views.",this._userUnitOptions=null,this._userUnit=null}initialize(){this.addHandles(V(()=>({analysis:this.analysis,unit:this.unit}),({analysis:e,unit:i})=>{m(e)&&(e.unit=i)},R))}get state(){return this.disabled||!this.ready?"disabled":M(this.tool)?"ready":this.tool.state}get measurement(){if(M(this.tool)||this.disabled||this.tool.destroyed)return null;const{analysisView:e}=this;if(M(e))return null;const i=e.analysisVisualization,s=i.viewData,o=s.measurementData,r=e.validMeasurement,c=s.mode==="euclidean",h=(c?o.intersectingSegments:o.geodesicIntersectingSegments).size===0,u=h?r?"available":"unavailable":"invalid";return{mode:c?"euclidean":"geodesic",area:{text:h&&r?i.areaLabel:null,state:u},perimeterLength:{text:h&&r?i.perimeterLengthLabel:null,state:u}}}set unitOptions(e){this._userUnitOptions=e,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(e){this._userUnit=e?this._findSelectableUnit(e,this._userUnit):null}get unit(){return m(this._userUnit)?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}constructAnalysis(){return new X}constructTool(){return new Et({view:E(this.view),analysis:this.analysis,analysisViewData:E(this.analysisView),visible:this.visible})}_findSelectableUnit(e,i){const{unitOptions:s}=this;return s.includes(e)?e:m(i)?this._findSelectableUnit(i):s[0]}_filteredOrAllUnits(e){if(M(e))return A.slice();const i=e.filter(s=>A.includes(s));return i.length===0?A.slice():i}};a([n({type:X})],_.prototype,"analysis",void 0),a([n({readOnly:!0})],_.prototype,"state",null),a([n({readOnly:!0})],_.prototype,"measurement",null),a([n()],_.prototype,"unitOptions",null),a([n()],_.prototype,"unit",null),a([n(gt)],_.prototype,"defaultUnit",void 0),a([n()],_.prototype,"_userUnit",void 0),_=a([U("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel")],_);const Y=_,y="esri-area-measurement-3d",$=`${y}__measurement`,L=`${y}__units`,l={buttonDisabled:"esri-button--disabled",base:`${y} esri-widget esri-widget--panel`,container:`${y}__container`,hint:`${y}__hint`,hintText:`${y}__hint-text`,panelError:`${y}__panel--error`,measurement:$,measurementItem:`${$}-item`,measurementItemDisabled:`${$}-item--disabled`,measurementItemTitle:`${$}-item-title`,measurementItemValue:`${$}-item-value`,settings:`${y}__settings`,units:L,unitsLabel:`${L}-label`,unitsSelect:`${L}-select esri-select`,unitsSelectWrapper:`${L}-select-wrapper`,actionSection:`${y}__actions`,newMeasurementButton:`${y}__clear-button esri-button esri-button--primary`,widgetIcon:"esri-icon-measure-area"};let d=class extends dt{constructor(t,e){super(t,e),this.iconClass=l.widgetIcon,this.viewModel=new Y}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}get visible(){return this.viewModel.visible}set visible(t){this.viewModel.visible=t}get active(){return this.viewModel.active}get analysis(){return this.viewModel.analysis}set analysis(t){this.viewModel.analysis=t}get label(){var t;return((t=this.messages)==null?void 0:t.widgetLabel)??""}set label(t){this._overrideIfSome("label",t)}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(t){this.viewModel.unitOptions=t}get unit(){return this.viewModel.unit}set unit(t){this.viewModel.unit=t}render(){const{messages:t,messagesUnits:e}=this,{supported:i,active:s,measurement:o,state:r,unit:c}=this.viewModel,h=r==="disabled",u=r==="measuring"||r==="measured",I=s&&r==="ready"?p("section",{key:"esri-area-measurement-3d__hint",class:l.hint},p("p",{class:l.hintText},t.hint),p("p",{class:l.hintText},t.snappingDisablePromptAlternate)):null,k=i?null:p("section",{key:"esri-area-measurement-3d__unsupported",class:l.panelError},p("p",null,t.unsupported)),S=(w,D,T)=>{switch(D.state){case"available":return p("div",{key:`${T}-enabled`,class:l.measurementItem},p("span",{class:l.measurementItemTitle},w),p("span",{"aria-live":"polite",class:l.measurementItemValue},D.text));case"unavailable":return p("div",{key:`${T}-disabled`,class:this.classes(l.measurementItem,l.measurementItemDisabled)},p("span",{class:l.measurementItemTitle},w));case"invalid":return p("div",{key:`${T}-enabled`,class:l.measurementItem},p("span",{class:l.measurementItemTitle},w),p("span",{class:l.measurementItemValue},t.notApplicable))}},C=u&&o?p("section",{key:"esri-area-measurement-3d__measurement",class:l.measurement},S(t.area,o.area,"area"),S(t.perimeterLength,o.perimeterLength,"perimeter-length")):null,x=`${this.id}__units`,P=p("label",{class:l.unitsLabel,for:x},t.unit),v=p("div",{class:l.unitsSelectWrapper},p("select",{class:l.unitsSelect,id:x,onchange:this._changeUnit,bind:this,value:c},this.viewModel.unitOptions.map(w=>{var D;return p("option",{key:w,value:w},mt(w)?e.systems[w]:(D=e.units[w])==null?void 0:D.pluralCapitalized)}))),Z=u?p("section",{key:"esri-area-measurement-3d__units",class:l.units},P,v):null,tt=u?p("div",{key:"settings",class:l.settings},Z):null,et=!i||s&&!u?null:p("div",{class:l.actionSection},p("button",{bind:this,class:this.classes(l.newMeasurementButton,h&&l.buttonDisabled),disabled:h,onclick:this._newMeasurement,type:"button"},t.newMeasurement)),it=this.visible?p("div",{class:l.container},k,I,tt,C,et):null;return p("div",{"aria-label":t.widgetLabel,key:this,class:l.base,role:"presentation"},it)}_newMeasurement(){G(this.viewModel.start())}_changeUnit(t){const e=t.target,i=e.options[e.selectedIndex];i&&(this.unit=i.value)}};a([n()],d.prototype,"view",null),a([n()],d.prototype,"visible",null),a([n()],d.prototype,"active",null),a([n({constructOnly:!0,nonNullable:!0})],d.prototype,"analysis",null),a([n()],d.prototype,"iconClass",void 0),a([n()],d.prototype,"label",null),a([n(),B("esri/widgets/AreaMeasurement3D/t9n/AreaMeasurement3D")],d.prototype,"messages",void 0),a([n(),B("esri/core/t9n/Units")],d.prototype,"messagesUnits",void 0),a([n()],d.prototype,"uiStrings",void 0),a([n({type:Y})],d.prototype,"viewModel",void 0),a([n()],d.prototype,"unitOptions",null),a([n()],d.prototype,"unit",null),a([j()],d.prototype,"_newMeasurement",null),a([j()],d.prototype,"_changeUnit",null),d=a([U("esri.widgets.AreaMeasurement3D")],d);const Ce=d;export{Ce as default};
