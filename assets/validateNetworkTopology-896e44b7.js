import{bG as v,bE as y,nt as c,ag as f,q2 as m,ae as S}from"./index-056c54a4.js";async function N(e,t,s){var u;const o=v(e),i=t.toJSON();t.validationSet&&(i.validationSet=JSON.stringify(t.validationSet));const n={...i,returnEdits:!0,f:"json"},r=y({...o.query,...n}),a=c(r,{...s,method:"post"}),g=`${o.path}/validateNetworkTopology`,{data:l}=await f(g,a);if(!l)return null;const d=m.fromJSON(l);return d.serviceEdits=((u=d.serviceEdits)==null?void 0:u.map(p=>({layerId:p.id,editedFeatures:p.editedFeatures})))??[],d}async function b(e,t,s){if(!t.gdbVersion)throw new S("submit-validate-network-topology-job:missing-gdb-version","version is missing");const o=v(e),i=t.toJSON();t.validationSet&&(i.validationSet=JSON.stringify(t.validationSet));const n=c(o.query,{query:y({...i,returnEdits:!0,async:!0,f:"json"}),...s,method:"post"}),r=`${o.path}/validateNetworkTopology`,{data:a}=await f(r,n);return a?a.statusUrl:null}export{b as submitValidateNetworkTopologyJob,N as validateNetworkTopology};
