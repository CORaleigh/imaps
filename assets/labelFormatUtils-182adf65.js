import{aS as y,sK as m,_ as h,sL as v,at as w,ae as p,bx as b,pp as x,gv as _,sM as E,bz as F}from"./index-3baec1e8.js";const d=y.getLogger("esri.layers.support.labelFormatUtils"),g={type:"simple",evaluate:()=>null},L={getAttribute:(a,n)=>a.field(n)};async function T(a,n,e){if(!a||!a.symbol||!n)return g;const s=a.where,u=m(a),o=s?await h(()=>import("./index-3baec1e8.js").then(r=>r.t0),["assets/index-3baec1e8.js","assets/index-0be7f32f.css"]):null;let i;if(u.type==="arcade"){const r=await v(u.expression,e,n);if(w(r))return g;i={type:"arcade",evaluate(l){try{const t=r.evaluate({$feature:"attributes"in l?r.repurposeFeature(l):l});if(t!=null)return t.toString()}catch{d.error(new p("arcade-expression-error","Encountered an error when evaluating label expression for feature",{feature:l,expression:u}))}return null},needsHydrationToEvaluate:()=>E(u.expression)==null}}else i={type:"simple",evaluate:r=>u.expression.replace(/{[^}]*}/g,l=>{const t=l.slice(1,-1),c=n.get(t);if(!c)return l;let f=null;return"attributes"in r?r&&r.attributes&&(f=r.attributes[c.name]):f=r.field(c.name),f==null?"":V(f,c)})};if(s){let r;try{r=o.WhereClause.create(s,n)}catch(t){return d.error(new p("bad-where-clause","Encountered an error when evaluating where clause, ignoring",{where:s,error:t})),g}const l=i.evaluate;i.evaluate=t=>{const c="attributes"in t?void 0:L;try{if(r.testFeature(t,c))return l(t)}catch(f){d.error(new p("bad-where-clause","Encountered an error when evaluating where clause for feature",{where:s,feature:t,error:f}))}return null}}return i}function V(a,n){if(a==null)return"";const e=n.domain;if(e){if(e.type==="codedValue"||e.type==="coded-value"){const u=a;for(const o of e.codedValues)if(o.code===u)return o.name}else if(e.type==="range"){const u=+a,o="range"in e?e.range[0]:e.minValue,i="range"in e?e.range[1]:e.maxValue;if(o<=u&&u<=i)return e.name}}let s=a;return n.type==="date"||n.type==="esriFieldTypeDate"?s=b(s,F("short-date")):x(n)&&(s=_(+s)),s||""}export{T as createLabelFunction,V as formatField};
