import{at as l,aS as i,ae as m,k_ as p,k$ as y,l0 as d,l1 as g}from"./index-53e0d3f6.js";function v(s,r,e,a,t){if(l(s))return null;const n=s.referencesGeometry()&&t?f(r,a,t):r,o=s.repurposeFeature(n);try{return s.evaluate({...e,$feature:o})}catch(c){return i.getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",c),null}}const u=new Map;function f(s,r,e){const{transform:a,hasZ:t,hasM:n}=e;u.has(r)||u.set(r,w(r));const o=u.get(r)(s.geometry,a,t,n);return{...s,geometry:o}}function w(s){const r={};switch(s){case"esriGeometryPoint":return(e,a,t,n)=>g(a,r,e,t,n);case"esriGeometryPolygon":return(e,a,t,n)=>d(a,r,e,t,n);case"esriGeometryPolyline":return(e,a,t,n)=>y(a,r,e,t,n);case"esriGeometryMultipoint":return(e,a,t,n)=>p(a,r,e,t,n);default:return i.getLogger("esri.views.2d.support.arcadeOnDemand").error(new m("mapview-arcade",`Unable to handle geometryType: ${s}`)),e=>e}}export{v as i};
