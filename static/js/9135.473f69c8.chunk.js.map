{"version":3,"file":"static/js/9135.473f69c8.chunk.js","mappings":"2MAKO,MAAMA,EAAgBC,IAC3B,MAAMC,GAAWC,EAAAA,EAAAA,QAAuB,MAuDxC,OArDAC,EAAAA,EAAAA,YAAU,KACPH,EAAMI,MAA8BC,qBAAwB,mBAC7DC,QAAQC,IAAIP,EAAMQ,UAClB,MAAMC,EAAQ,IAAIC,EAAAA,EAAa,CAC7BN,MAAOJ,EAAMI,MACbO,UAAWV,EAASW,QACpBC,gBAAiB,CACfC,QAAQ,EACRC,iBAAiB,GAEnBC,cAAe,CACbC,gBAAiB,CACf,CAAEC,MAAO,UAAWC,UAAW,WAC/B,CAAED,MAAO,OAAQC,UAAW,mBAmClC,OA9BAC,YAAW,KACaX,EAAMY,WAAW,eACzBC,MAAQ,IACtBb,EAAMc,eAAiBvB,EAAMQ,SAC5BR,EAAMI,MAA8BC,qBAAwB,yBAC7DI,EAAMe,aAGRJ,YAAW,KACT,MAAMK,EAAQhB,EAAME,UAA0Be,cAAc,eACxD,OAAJD,QAAI,IAAJA,GAAAA,EAAME,iBAAiB,SAAUC,IAC/B,GAA2C,6BAAtCA,EAAEC,OAAuBC,SAAyC,CAAC,IAAD,EAErErB,EAAMsB,iBACN,MACMC,GADI,UAAIP,EAAKQ,gBAAgBL,UAAzB,aAAG,EAAkCM,MAC1BF,QACrBvB,EAAM0B,WAAWH,GAEjBA,EAAQI,aAAa,OAAQ,WAC7BJ,EAAQK,OAAS,IAAIC,EAAAA,EAAoB,CAAEC,IAAK,iBAAkBC,OAAQ,GAAIlB,MAAO,KACpFtB,EAAMyC,KAAwBC,SAASC,WACrC3C,EAAMyC,KAAwBC,SAASE,QAAQC,GACN,YAAjCA,EAAQC,aAAa,WAG/B9C,EAAMyC,KAAwBC,SAASK,IAAIf,GAC3ChC,EAAMyC,KAAwBO,KAAK,CAAEnB,OAAQG,EAASiB,KAAM,IAAM,CAAEC,SAAU,IAAMC,OAAQ,eAGhG,KACI,KACL1C,GAASA,EAAM2C,aAEhB,KAEI,gBAAKC,GAAG,eAAeC,IAAKrD,KAGrC","sources":["Components/PropertyPanel/AddressTable/AddressTable.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef } from 'react';\nimport FeatureTable from '@arcgis/core/widgets/FeatureTable';\nimport './AddressTable.scss';\nimport PictureMarkerSymbol from '@arcgis/core/symbols/PictureMarkerSymbol';\nexport const AddressTable = (props: any) => {\n  const tableRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    (props.layer as __esri.FeatureLayer).definitionExpression = `OBJECTID IS NULL`;\n    console.log(props.geometry);\n    const table = new FeatureTable({\n      layer: props.layer,\n      container: tableRef.current as HTMLDivElement,\n      visibleElements: {\n        header: false,\n        selectionColumn: false,\n      },\n      tableTemplate: {\n        columnTemplates: [\n          { label: 'Address', fieldName: 'ADDRESS' } as __esri.FieldColumnTemplate,\n          { label: 'Type', fieldName: 'FEATURETYPE' } as __esri.FieldColumnTemplate,\n        ],\n      },\n    });\n\n    setTimeout(() => {\n      const addressColumn = table.findColumn('FEATURETYPE') as any;\n      addressColumn.width = 100;\n      table.filterGeometry = props.geometry;\n      (props.layer as __esri.FeatureLayer).definitionExpression = `ADDRESS NOT LIKE 'EN%'`;\n      table.refresh();\n    });\n\n    setTimeout(() => {\n      const grid = (table.container as HTMLElement).querySelector('vaadin-grid');\n      grid?.addEventListener('click', (e) => {\n        if ((e.target as HTMLElement).nodeName === 'VAADIN-GRID-CELL-CONTENT') {\n          //grid.selectItem((grid.getEventContext(e) as any)?.item);\n          table.clearSelection();\n          const item = (grid.getEventContext(e) as any)?.item;\n          const feature = item.feature as __esri.Graphic;\n          table.selectRows(feature);\n          //grid.scrollToIndex(item.index);\n          feature.setAttribute('type', 'address');\n          feature.symbol = new PictureMarkerSymbol({ url: 'assets/pin.svg', height: 36, width: 36 });\n          (props.view as __esri.MapView).graphics.removeMany(\n            (props.view as __esri.MapView).graphics.filter((graphic) => {\n              return graphic.getAttribute('type') === 'address';\n            }),\n          );\n          (props.view as __esri.MapView).graphics.add(feature);\n          (props.view as __esri.MapView).goTo({ target: feature, zoom: 17 }, { duration: 1000, easing: 'ease' });\n        }\n      });\n    }, 2000);\n    return () => {\n      table && table.destroy();\n    };\n  }, []); // only after initial render\n\n  return <div id=\"addressTable\" ref={tableRef}></div>;\n};\n\nexport default AddressTable;\n"],"names":["AddressTable","props","tableRef","useRef","useEffect","layer","definitionExpression","console","log","geometry","table","FeatureTable","container","current","visibleElements","header","selectionColumn","tableTemplate","columnTemplates","label","fieldName","setTimeout","findColumn","width","filterGeometry","refresh","grid","querySelector","addEventListener","e","target","nodeName","clearSelection","feature","getEventContext","item","selectRows","setAttribute","symbol","PictureMarkerSymbol","url","height","view","graphics","removeMany","filter","graphic","getAttribute","add","goTo","zoom","duration","easing","destroy","id","ref"],"sourceRoot":""}