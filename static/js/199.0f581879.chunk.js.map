{"version":3,"sources":["Components/Shell/utils/shell.ts","Components/Shell/Shell.tsx"],"names":["panelDismissedChange","e","target","parentElement","collapsed","dismissed","actionClicked","action","actions","isActive","isTool","innerWidth","forEach","a","deactivateActions","shellPanel","closest","removeAttribute","setAttribute","windowResize","width","setWidth","setActions","document","querySelectorAll","button","find","title","getAttribute","window","querySelector","bar","expandDisabled","console","log","activatePropertySearch","active","search","container","getElementById","hidden","shell","MapView","lazy","Header","TipManager","PropertyPanel","LocationSearch","Layers","Basemaps","Legend","PropertySelect","Measure","Sketch","Bookmarks","Print","Shell","mapId","setMapId","useState","tips","setTips","tipsTitle","setTipsTitle","view","useRef","viewCreated","setViewCreated","selectedProperties","setSelectedProperties","selectedFeature","setSelectedFeature","theme","setTheme","useContext","ThemeContext","updating","setUpdating","sketchVM","selectVM","measurement","coordinates","maximize","streetviewClick","activeTool","setActiveTool","ActionContext","featureSelected","feature","attributes","geometry","current","ReactDOM","render","fallback","geometrySet","geometryChanged","toolActivated","selectActivated","clear","clearSelection","printAction","exportUrl","templateUrl","propertiesSelected","properties","length","deactiveAllTools","cancel","viewModel","activeViewModel","mode","deactiveMapTools","classList","remove","popup","autoOpenEnabled","sketchToolActivated","sketchViewModel","measurementActivated","measurementTool","coordinatesTool","showTips","id","text","label","slot","icon","appearance","scale","onClick","undefined","renderWidget","shadowRoot","hasChildNodes","default","basemaps","imagery","useEffect","localStorage","getItem","URL","searchParams","get","config","matchMedia","matches","body","add","link","Array","from","head","href","includes","appendChild","addEventListener","newTheme","setItem","updateTheme","resizeTimer","panel","clearTimeout","setTimeout","clientWidth","observer","MutationObserver","mutations","disconnect","observe","childList","removeEventListener","class","type","value","position","expanded","map","placement","name","disabled","async","requestAnimationFrame","className","initialized","mapView","watch","cursor","contains","on","cbll","mapPoint","latitude","longitude","open","setMapTools","mapError","identifyClicked","ref","offset","primary","primaryBar","contextBar","tabnav","tab","tabTitle","inactiveTabTitle","ev","KeyboardEvent","altKey","bubbles","cancelable","charCode","code","composed","ctrlKey","detail","isComposing","key","keyCode","location","metaKey","repeat","shiftKey","dispatchEvent","maximizePropertySearch","closed","tipsDismissed"],"mappings":"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","file":"static/js/199.0f581879.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport React from 'react';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst panelDismissedChange = (e: Event) => {\n  const shellPanel = (e.target as HTMLElement)?.parentElement;\n  (shellPanel as HTMLCalciteShellPanelElement).collapsed = (e.target as HTMLCalcitePanelElement)?.dismissed;\n};\n\nexport const initialized = (): void => {\n  const panels = document.querySelectorAll('calcite-panel');\n  panels.forEach((panel) => {\n    panel?.addEventListener('calcitePanelDismissedChange', panelDismissedChange);\n  });\n};\n\nexport const deactivate = (): void => {\n  const panels = document.querySelectorAll('calcite-panel');\n  panels.forEach((panel) => {\n    panel?.removeEventListener('calcitePanelDismissedChange', panelDismissedChange);\n  });\n};\nconst deactivateActions = (actions: any[], isTool: boolean): void => {\n  if (innerWidth < 1000) {\n    actions.forEach((a) => {\n      a.isActive = false;\n    });\n  } else {\n    if (isTool) {\n      actions.forEach((a) => {\n        a.isActive = a.isActive && !a.isTool;\n      });\n    } else {\n      actions.forEach((a) => {\n        a.isActive = a.isActive && a.isTool;\n      });\n    }\n  }\n};\nexport const actionClicked = (e: any, action: any, actions: any[]): any[] => {\n  if (action.isActive) {\n    action.isActive = false;\n  } else {\n    deactivateActions(actions, action.isTool);\n    action.isActive = true;\n  }\n  const shellPanel = e.target.closest('calcite-shell-panel');\n\n  if (!action.isActive) {\n    shellPanel?.setAttribute('collapsed', '');\n  } else {\n    shellPanel?.removeAttribute('collapsed');\n  }\n  return actions;\n};\n\nexport const updateTheme = (theme: string, setTheme: React.Dispatch<string>) => {\n  if (theme) {\n    if (theme === 'dark') {\n      setTheme('dark');\n    }\n    if (theme === 'light') {\n      setTheme('light');\n    }\n  } else {\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      theme = 'dark';\n      setTheme('dark');\n    } else {\n      theme = 'light';\n      setTheme('light');\n    }\n  }\n  document.body.classList.remove(theme === 'light' ? 'dark' : 'light');\n  document.body.classList.add(theme === 'light' ? 'light' : 'dark');\n  const link = Array.from(document.head.querySelectorAll('link')).find((link: HTMLLinkElement) => {\n    return link.href.includes(`${theme}/main.css`);\n  });\n  if (link) {\n    document.head.appendChild(link);\n  }\n  if (window.matchMedia != undefined) {\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n    if (media.addEventListener != undefined) {\n      window.matchMedia('(prefers-color-scheme: dark)')?.addEventListener('change', (e) => {\n        const newTheme = e.matches ? 'dark' : 'light';\n        setTheme(newTheme);\n        window.localStorage.setItem('imaps_theme', newTheme);\n        document.body.classList.remove(newTheme === 'light' ? 'dark' : 'light');\n        document.body.classList.add(newTheme === 'light' ? 'light' : 'dark');\n        const link = Array.from(document.head.querySelectorAll('link')).find((link: HTMLLinkElement) => {\n          return link.href.includes(`${newTheme}/main.css`);\n        });\n        if (link) {\n          document.head.appendChild(link);\n        }\n      });\n    }\n  }\n};\n\nexport const windowResize = (\n  actions: any[],\n  width: number,\n  setWidth: React.Dispatch<number>,\n  setActions: React.Dispatch<any[]>,\n) => {\n  const activeActions = document.querySelectorAll('calcite-action[active]');\n  activeActions.forEach((button) => {\n    const action = actions.find((action) => {\n      return action.title === button.getAttribute('text');\n    });\n    if (window.innerWidth >= 1000 && action?.isActive && width < 1000) {\n      if (action.isTool) {\n        (document.querySelector('calcite-shell-panel[slot=contextual-panel]') as HTMLElement)?.setAttribute(\n          'collapsed',\n          '',\n        );\n        action.isActive = false;\n      }\n    }\n    if (window.innerWidth < 1000 && action?.isActive && width >= 1000) {\n      if (action.isTool) {\n        (document.querySelector('calcite-shell-panel[slot=primary-panel]') as HTMLElement)?.removeAttribute(\n          'collapsed',\n        );\n        action.isActive = false;\n      } else {\n        (document.querySelector('calcite-shell-panel[slot=contextual-panel]') as HTMLElement)?.removeAttribute(\n          'collapsed',\n        );\n      }\n    }\n\n    document.querySelectorAll('calcite-action-bar').forEach((bar) => {\n      if (bar) {\n        bar.expandDisabled = window.innerWidth <= 500;\n      }\n    });\n  });\n  console.log(width, window.innerWidth);\n  setWidth(window.innerWidth);\n  setActions([...actions]);\n};\n\nexport const maximizePropertySearch = (action: HTMLCalciteActionElement) => {\n  let offset = 0;\n  const primary: HTMLCalciteShellPanelElement = document.querySelector(\n    'calcite-shell-panel[slot=primary-panel]',\n  ) as HTMLCalciteShellPanelElement;\n  if (primary) {\n    if (!primary?.collapsed) {\n      offset += primary.clientWidth;\n    }\n    const primaryBar = primary.querySelector('calcite-action-bar');\n    if (primaryBar) {\n      offset += primaryBar?.clientWidth;\n    }\n  }\n  const context: HTMLCalciteShellPanelElement = document.querySelector(\n    'calcite-shell-panel[slot=contextual-panel]',\n  ) as HTMLCalciteShellPanelElement;\n  const contextBar = context.querySelector('calcite-action-bar');\n  if (contextBar) {\n    offset += contextBar?.clientWidth;\n  }\n  let width = `calc(90vw - ${offset}px)`;\n  const panel = action.closest('calcite-shell-panel');\n  if (action.icon === 'right-edge') {\n    action.icon = 'left-edge';\n    width = '350px';\n    panel?.removeAttribute('maximized');\n  } else {\n    action.icon = 'right-edge';\n    panel?.setAttribute('maximized', '');\n  }\n\n  panel?.shadowRoot\n    ?.querySelector('.content')\n    ?.setAttribute(\n      'style',\n      `max-width: ${width}; width: calc(var(--calcite-panel-width-multiplier) * 100vw) !important;`,\n    );\n  const tabnav = panel?.querySelector('calcite-tab-nav');\n  panel?.querySelectorAll('calcite-tab').forEach((tab: HTMLCalciteTabElement) => {\n    tab?.setAttribute('style', `max-width: ${width}`);\n  });\n  tabnav?.setAttribute('style', `max-width: ${width}`);\n\n  const tabTitle = document.querySelector('calcite-tab-title[active]') as HTMLCalciteTabTitleElement;\n  const inactiveTabTitle = document.querySelector('calcite-tab-title:not([active])') as HTMLCalciteTabTitleElement;\n  if (tabTitle) {\n    setTimeout(() => {\n      const ev = new KeyboardEvent('keydown', {\n        altKey: false,\n        bubbles: true,\n        cancelable: true,\n        charCode: 0,\n        code: 'Enter',\n        composed: true,\n        ctrlKey: false,\n        detail: 0,\n        isComposing: false,\n        key: 'Enter',\n        keyCode: 13,\n        location: 0,\n        metaKey: false,\n        repeat: false,\n        shiftKey: false,\n      });\n      inactiveTabTitle?.dispatchEvent(ev);\n      tabTitle?.dispatchEvent(ev);\n    }, 250);\n  }\n};\n\n//activate PropertySearch on load and on geometry updates\nexport const activatePropertySearch = (actions: any[]): HTMLElement => {\n  const active = actions.find((action) => {\n    return action.isActive; // && window.innerWidth <= 1000;\n  });\n  if (active) {\n    if (window.innerWidth < 1000 || !active.isTool) {\n      active.isActive = false;\n    }\n  }\n  const search = actions.find((action) => {\n    return action.title === 'Property Search';\n  });\n\n  if (search) {\n    search.isActive = true;\n  }\n  const container = document.getElementById(search?.container as string);\n  if (container) {\n    const panel: HTMLDivElement = container?.closest('.action-panel') as HTMLDivElement;\n    panel.hidden = false;\n    const shell = container?.closest('calcite-shell-panel');\n    shell?.removeAttribute('collapsed');\n  }\n  return container as HTMLElement;\n};\n\nexport const formatShellPanelContent = () => {\n  document.querySelectorAll('calcite-shell-panel').forEach((panel) => {\n    const observer: MutationObserver = new MutationObserver((mutations) => {\n      if (mutations.length) {\n        let width = '350px';\n        if (window.innerWidth <= 500) {\n          width = 'calc(90vw - 50px)';\n        }\n        panel?.shadowRoot\n          ?.querySelector('.content')\n          ?.setAttribute(\n            'style',\n            `max-width: ${width}; width: calc(var(--calcite-panel-width-multiplier) * 100vw) !important;`,\n          );\n        document.querySelectorAll('calcite-action-bar').forEach((bar) => {\n          if (bar) {\n            bar.expandDisabled = window.innerWidth <= 500;\n          }\n        });\n        observer.disconnect();\n      } else {\n        observer.disconnect();\n      }\n    });\n    observer.observe(panel?.shadowRoot as Node, { childList: true });\n  });\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useContext, useEffect, useState, lazy, Suspense, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nconst MapView = lazy(() => {\n  return import('../MapView/MapView');\n});\nconst Header = lazy(() => {\n  return import('../Header/Header');\n});\nconst TipManager = lazy(() => {\n  return import('../TipManager/TipManager');\n});\nconst PropertyPanel = lazy(() => import('../PropertyPanel/PropertyPanel'));\nconst LocationSearch = lazy(() => import('../LocationSearch/LocationSearch'));\nconst Layers = lazy(() => import('../Layers/Layers'));\nconst Basemaps = lazy(() => import('../Basemaps/Basemaps'));\nconst Legend = lazy(() => import('../Legend/Legend'));\nconst PropertySelect = lazy(() => import('../PropertySelect/PropertySelect'));\nconst Measure = lazy(() => import('../Measure/Measure'));\nconst Sketch = lazy(() => import('../Sketch/Sketch'));\nconst Bookmarks = lazy(() => import('../Bookmarks/Bookmarks'));\nconst Print = lazy(() => import('../Print/Print'));\nimport './Shell.scss';\nimport {\n  actionClicked,\n  deactivate,\n  initialized,\n  maximizePropertySearch,\n  updateTheme,\n  windowResize,\n  activatePropertySearch,\n  formatShellPanelContent,\n} from './utils/shell';\nimport ThemeContext from '../ThemeContext';\nimport { basemaps } from '../../config/config';\nimport ActionContext from '../ActionContext';\nimport * as config from '../../config/config';\n\nexport const Shell = () => {\n  const [mapId, setMapId] = useState<string>();\n  const [tips, setTips] = useState<any>([]);\n  const [tipsTitle, setTipsTitle] = useState<string>();\n  //console.log('render shell');\n  const [width, setWidth] = useState(window.innerWidth);\n  const view = useRef<__esri.MapView>();\n  const [viewCreated, setViewCreated] = useState(false);\n  const [selectedProperties, setSelectedProperties] = useState<__esri.Graphic[]>([]);\n  const [selectedFeature, setSelectedFeature] = useState<any>();\n  const { theme, setTheme } = useContext(ThemeContext);\n  const [updating, setUpdating] = useState(true);\n  //define sketch tools to handle deactivating other sketch tools\n  const sketchVM = useRef<__esri.SketchViewModel>();\n  const selectVM = useRef<__esri.SketchViewModel>();\n  const measurement = useRef<__esri.Measurement>();\n  const coordinates = useRef<__esri.CoordinateConversion>();\n  const maximize = useRef<HTMLCalciteActionElement>();\n  const streetviewClick = useRef<IHandle>();\n\n  const [activeTool, setActiveTool] = useState<string>();\n  const { actions, setActions } = useContext(ActionContext);\n\n  //when feature is selected update featureSelected state and render PropertySelect\n  const featureSelected = (feature: __esri.Graphic | undefined) => {\n    setSelectedFeature({ ...selectedFeature, ...{ attributes: feature?.attributes, geometry: feature?.geometry } });\n\n    const action = actions.find((action) => {\n      return action.title === 'Property Select';\n    });\n    if (action && view.current) {\n      const container = document.getElementById(action?.container);\n      if (container) {\n        ReactDOM.render(\n          <Suspense fallback={''}>\n            <PropertySelect\n              view={view.current}\n              selectedFeature={feature}\n              geometrySet={geometryChanged}\n              toolActivated={selectActivated}\n              clear={clearSelection}\n            />\n          </Suspense>,\n          container,\n        );\n      }\n    }\n\n    const printAction = actions.find((action) => {\n      return action.title === 'Print';\n    });\n    if (printAction) {\n      const container = document.getElementById(printAction?.container);\n      ReactDOM.render(\n        <Suspense fallback={''}>\n          <Print\n            view={view.current}\n            exportUrl=\"https://indoors.raleighnc.gov/arcgis/rest/services/ExportWebMap/GPServer/Export%20Web%20Map\"\n            templateUrl=\"https://indoors.raleighnc.gov/arcgis/rest/services/ExportWebMap/GPServer/Get%20Layout%20Templates%20Info/execute\"\n            selectedFeature={feature}\n          />\n        </Suspense>,\n        container,\n      );\n    }\n  };\n\n  const propertiesSelected = (properties: __esri.Graphic[]) => {\n    setSelectedProperties([...selectedProperties, ...properties]);\n    if (properties.length > 1) {\n      setSelectedFeature({ ...selectedFeature, ...{ attributes: null } });\n    }\n    const container = activatePropertySearch(actions);\n    ReactDOM.render(\n      <Suspense fallback={''}>\n        <PropertyPanel\n          propertiesSelected={propertiesSelected}\n          featureSelected={featureSelected}\n          selectedProperties={properties}\n        />\n      </Suspense>,\n      container,\n    );\n\n    console.log('setActions');\n    setActions([...[], ...actions]);\n  };\n  const deactiveAllTools = () => {\n    selectVM.current?.cancel();\n    measurement.current?.viewModel.activeViewModel?.clear();\n    if (coordinates.current) {\n      coordinates.current.viewModel.mode = 'live';\n    }\n    sketchVM.current?.cancel();\n\n    setActiveTool('sketch');\n  };\n  const deactiveMapTools = () => {\n    document.querySelector('.map-tool.active')?.classList.remove('active');\n    if (view.current?.popup) {\n      view.current.popup.autoOpenEnabled = false;\n    }\n    streetviewClick.current?.remove();\n  };\n  //deactivate other sketch tools\n  const sketchToolActivated = (sketchViewModel: __esri.SketchViewModel) => {\n    sketchVM.current = sketchViewModel;\n    selectVM.current?.cancel();\n    measurement.current?.viewModel.activeViewModel?.clear();\n    if (coordinates.current) {\n      coordinates.current.viewModel.mode = 'live';\n    }\n    setActiveTool('sketch');\n    deactiveMapTools();\n  };\n  const measurementActivated = (measurementTool: __esri.Measurement, coordinatesTool: __esri.CoordinateConversion) => {\n    measurement.current = measurementTool;\n    coordinates.current = coordinatesTool;\n    sketchVM.current?.cancel();\n    selectVM.current?.cancel();\n    setActiveTool('measure');\n    deactiveMapTools();\n  };\n  const selectActivated = (sketchViewModel: __esri.SketchViewModel) => {\n    selectVM.current = sketchViewModel;\n    sketchVM.current?.cancel();\n    measurement.current?.viewModel.activeViewModel?.clear();\n    if (coordinates.current) {\n      coordinates.current.viewModel.mode = 'live';\n    }\n    setActiveTool('select');\n    deactiveMapTools();\n  };\n\n  //reset tips when dismissed\n  const tipsDismissed = () => {\n    setTips([]);\n    setTipsTitle('');\n  };\n  //render Tips action\n  const showTips = (isTool: boolean) => {\n    let action: any;\n    if (isTool) {\n      action = actions.find((action: any) => {\n        return action.isActive && action.isTool;\n      });\n    } else {\n      action = actions.find((action: any) => {\n        return action.isActive;\n      });\n    }\n    return action?.tips?.length > 0 ? (\n      <calcite-action\n        id={`tipAction${isTool ? '_tool' : ''}`}\n        text=\"Action\"\n        label=\"Action\"\n        slot=\"header-actions-end\"\n        icon=\"lightbulb\"\n        appearance=\"solid\"\n        scale=\"m\"\n        calcite-hydrated=\"\"\n        onClick={() => {\n          setTips([...[], ...action.tips]);\n          setTipsTitle(action.title);\n        }}\n      ></calcite-action>\n    ) : (\n      ''\n    );\n  };\n\n  const setMapTools = (mapView: __esri.MapView) => {\n    requestAnimationFrame(() => {\n      document.querySelector('.identify-widget')?.addEventListener('click', () => {\n        deactiveAllTools();\n        mapView.popup.autoOpenEnabled = true;\n        document.querySelector('.map-tool.active')?.classList.remove('active');\n        document.querySelector('.identify-widget')?.classList.add('active');\n        streetviewClick.current?.remove();\n      });\n      document.querySelector('.streetview-widget')?.addEventListener('click', () => {\n        deactiveAllTools();\n        mapView.popup.autoOpenEnabled = false;\n        if (document.querySelector('.streetview-widget')?.classList.contains('active')) {\n          document.querySelector('.streetview-widget')?.classList.remove('active');\n          streetviewClick.current?.remove();\n        } else {\n          document.querySelector('.map-tool.active')?.classList.remove('active');\n          document.querySelector('.streetview-widget')?.classList.add('active');\n          streetviewClick.current?.remove();\n          streetviewClick.current = mapView.on('click', (e) => {\n            document.querySelector('.map-tool.active')?.classList.remove('active');\n            document.querySelector('.streetview-widget')?.classList.add('active');\n            const cbll = e.mapPoint.latitude + ',' + e.mapPoint.longitude;\n            'https://maps.google.com?layer=c&cbll=' + cbll + '&cbp=0,0,0,0,0';\n            window.open('https://maps.google.com?layer=c&cbll=' + cbll + '&cbp=0,0,0,0,0', 'streetview');\n          });\n        }\n      });\n    });\n  };\n  //after map has initiliazed\n  const mapInitialized = async (mapView: __esri.MapView) => {\n    setTimeout(() => {\n      mapView.watch('updating', (updating) => {\n        if ((view.current as any).cursor === 'default') {\n          setUpdating(updating);\n        } else {\n          setUpdating(false);\n        }\n      });\n    });\n\n    if (!viewCreated) {\n      view.current = mapView;\n      setViewCreated(true);\n\n      const container = document.getElementById('propertySearch');\n      if (mapView.map) {\n        setMapTools(mapView);\n\n        ReactDOM.render(\n          <Suspense fallback={''}>\n            <PropertyPanel\n              view={mapView}\n              propertiesSelected={propertiesSelected}\n              featureSelected={featureSelected}\n              selectedProperties={selectedProperties}\n              toolActivated={selectActivated}\n            />\n          </Suspense>,\n          container,\n        );\n      }\n    }\n  };\n\n  //update PropertyPanel geometry when geometry is updated by MapView or PropertySelect\n  const geometryChanged = (geometry: __esri.Geometry) => {\n    const container = activatePropertySearch(actions);\n    ReactDOM.render(\n      <Suspense fallback={''}>\n        <PropertyPanel\n          geometry={geometry}\n          propertiesSelected={propertiesSelected}\n          selectedProperties={selectedProperties}\n          featureSelected={featureSelected}\n          selectedFeature={selectedFeature}\n        />\n      </Suspense>,\n      container,\n    );\n  };\n\n  const clearSelection = () => {\n    const container = activatePropertySearch(actions);\n    ReactDOM.render(\n      <Suspense fallback={''}>\n        <PropertyPanel\n          geometry={undefined}\n          propertiesSelected={propertiesSelected}\n          selectedProperties={selectedProperties}\n          featureSelected={featureSelected}\n          selectedFeature={selectedFeature}\n        />\n      </Suspense>,\n      container,\n    );\n  };\n\n  const mapError = () => {\n    setUpdating(false);\n  };\n\n  //render widgets as they become active\n  const renderWidget = (action: any) => {\n    if (action) {\n      const container = document.getElementById(action.container);\n\n      document\n        .querySelector('calcite-shell-panel[slot=contextual-panel]')\n        ?.shadowRoot?.querySelector('.content')\n        ?.setAttribute(\n          'style',\n          `max-width: 350px; width: calc(var(--calcite-panel-width-multiplier) * 100vw) !important;`,\n        );\n      if (maximize.current) {\n        maximize.current.icon = 'left-edge';\n      }\n      if (!container?.hasChildNodes()) {\n        if (action.title === 'Property Search') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <PropertyPanel\n                view={view.current}\n                propertiesSelected={propertiesSelected}\n                featureSelected={featureSelected}\n                selectedProperties={selectedProperties}\n              />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Location Search') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <LocationSearch view={view.current} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Layers') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Layers view={view.current} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Basemaps') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Basemaps view={view.current} default={basemaps.default.id} imagery={basemaps.imagery.id} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Legend') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Legend view={view.current} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Property Select') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <PropertySelect\n                view={view.current}\n                geometrySet={geometryChanged}\n                selectedFeature={selectedFeature}\n                toolActivated={selectActivated}\n                activeTool={activeTool}\n                clear={clearSelection}\n              />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Measure') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Measure view={view.current} measurementActivated={measurementActivated} activeTool={activeTool} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Sketch') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Sketch view={view.current} toolActivated={sketchToolActivated} activeTool={activeTool} />{' '}\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Bookmarks') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Bookmarks view={view.current} />{' '}\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Print') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Print\n                view={view.current}\n                exportUrl=\"https://indoors.raleighnc.gov/arcgis/rest/services/ExportWebMap/GPServer/Export%20Web%20Map\"\n                templateUrl=\"https://indoors.raleighnc.gov/arcgis/rest/services/ExportWebMap/GPServer/Get%20Layout%20Templates%20Info/execute\"\n              />\n            </Suspense>,\n            container,\n          );\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    const theme = window.localStorage.getItem('imaps_theme') as string;\n    const url = new URL(document.URL);\n    const id = url.searchParams.get('id');\n    if (id) {\n      setMapId(id);\n    } else {\n      setMapId(config.mapId);\n    }\n\n    updateTheme(theme, setTheme);\n  }, []);\n  useEffect(() => {\n    initialized();\n    // const theme = window.localStorage.getItem('imaps_theme') as string;\n    // updateTheme(theme, setTheme);\n    let resizeTimer: NodeJS.Timeout;\n    window.addEventListener('resize', () => {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => {\n        if ((window.innerWidth < 1000 && width >= 1000) || (window.innerWidth >= 1000 && width < 1000)) {\n          windowResize(actions, width, setWidth, setActions);\n        }\n      }, 250);\n      document.querySelectorAll('calcite-shell-panel').forEach((panel) => {\n        let width = '350px';\n        if (maximize.current) {\n          maximize.current.icon = 'left-edge';\n        }\n        const bar = panel.querySelector('calcite-action-bar');\n        if (window.innerWidth <= 500) {\n          width = `calc(90vw - ${bar?.clientWidth}px)`;\n        }\n        panel?.shadowRoot\n          ?.querySelector('.content')\n          ?.setAttribute(\n            'style',\n            `max-width: ${width}; width: calc(var(--calcite-panel-width-multiplier) * 100vw) !important;`,\n          );\n      });\n    });\n    formatShellPanelContent();\n\n    return () => {\n      window.removeEventListener('resize', () => {\n        windowResize(actions, width, setWidth, setActions);\n      });\n      deactivate();\n    };\n  }, [actions]);\n  return (\n    <div>\n      {updating && (\n        <calcite-progress class={`shell calcite-theme-${theme}`} type=\"indeterminate\" value=\"0.5\"></calcite-progress>\n      )}\n\n      <calcite-shell class={`shell calcite-theme-${theme}`}>\n        {width >= 1000 ? (\n          <calcite-shell-panel slot=\"primary-panel\" position=\"start\" width-scale=\"l\" collapsed>\n            <calcite-action-bar\n              slot=\"action-bar\"\n              expanded={/*!viewCreated && window.innerWidth > 500 ? '' : null*/ false}\n            >\n              {actions.map((action: any) => {\n                if (action.isTool) {\n                  return (\n                    <div key={`${action.container}_action_primary`}>\n                      <calcite-tooltip\n                        placement=\"trailing\"\n                        label={action.title}\n                        reference-element={`${action.container}_action`}\n                      >\n                        {action.title}\n                      </calcite-tooltip>\n                      <calcite-tooltip-manager>\n                        <calcite-action\n                          text={action.title}\n                          name={action.container}\n                          icon={action.icon}\n                          id={`${action.container}_action`}\n                          disabled={!viewCreated ? '' : null}\n                          onClick={async (e: any) => {\n                            console.log('setActions');\n                            setActions([...actionClicked(e, action, actions)]);\n                            requestAnimationFrame(() => {\n                              renderWidget(action);\n                            });\n                          }}\n                          active={action.isActive === true ? '' : null}\n                        ></calcite-action>\n                      </calcite-tooltip-manager>\n                    </div>\n                  );\n                }\n              })}\n            </calcite-action-bar>\n            {actions.map((action: any) => {\n              if (action.isTool && action.isActive) {\n                return (\n                  <div className=\"panel-header\" key={`${action.icon}_header_primary`}>\n                    <div className=\"panel-title\">{action.title}</div>\n                    <div className=\"header-actions\">\n                      {showTips(true)}\n                      <calcite-tooltip-manager>\n                        <calcite-tooltip label=\"Tooltip label\" reference-element=\"closeAction\" placement=\"bottom-end\">\n                          Close panel\n                        </calcite-tooltip>\n                        <calcite-action\n                          id=\"closeAction\"\n                          aria-label=\"Close\"\n                          appearance=\"solid\"\n                          scale=\"m\"\n                          calcite-hydrated=\"\"\n                          icon=\"x\"\n                          onClick={() => {\n                            document\n                              ?.querySelector('calcite-shell-panel[slot=primary-panel]')\n                              ?.setAttribute('collapsed', '');\n                            action.isActive = false;\n\n                            console.log('setActions');\n                            setActions([...actions]);\n                          }}\n                        ></calcite-action>\n                      </calcite-tooltip-manager>\n                    </div>\n                  </div>\n                );\n              }\n            })}\n            {actions.map((action: any) => {\n              if (action.isTool) {\n                return (\n                  <div\n                    id={action.container}\n                    className=\"action-panel\"\n                    key={`${action.container}_primary`}\n                    hidden={!action.isActive}\n                  ></div>\n                );\n              }\n            })}\n          </calcite-shell-panel>\n        ) : (\n          ''\n        )}\n        <Suspense fallback={''}>\n          <MapView\n            id={mapId}\n            initialized={mapInitialized}\n            geometryChanged={geometryChanged}\n            selectedProperties={selectedProperties}\n            selectedFeature={selectedFeature}\n            mapError={mapError}\n            identifyClicked={() => {\n              deactiveAllTools();\n            }}\n          />\n        </Suspense>\n\n        <calcite-shell-panel slot=\"contextual-panel\" position=\"end\" width-scale=\"l\">\n          <calcite-action-bar\n            slot=\"action-bar\"\n            expanded={/*!viewCreated && window.innerWidth > 500 ? '' : null*/ false}\n          >\n            {actions.map((action: any) => {\n              if (!action.isTool || width < 1000) {\n                return (\n                  <div key={`${action.container}_action_contextual`}>\n                    <calcite-tooltip\n                      placement=\"leading\"\n                      label={action.title}\n                      reference-element={`${action.container}_action`}\n                    >\n                      {action.title}\n                    </calcite-tooltip>\n                    <calcite-tooltip-manager>\n                      <calcite-action\n                        text={action.title}\n                        name={action.container}\n                        icon={action.icon}\n                        id={`${action.container}_action`}\n                        disabled={!viewCreated ? '' : null}\n                        onClick={async (e: any) => {\n                          console.log('setActions');\n                          setActions([...actionClicked(e, action, actions)]);\n                          requestAnimationFrame(() => {\n                            renderWidget(action);\n                          });\n                        }}\n                        active={action.isActive === true ? '' : null}\n                      ></calcite-action>\n                    </calcite-tooltip-manager>\n                  </div>\n                );\n              }\n            })}\n          </calcite-action-bar>\n\n          {actions.map((action: any) => {\n            if ((!action.isTool || width < 1000) && action.isActive) {\n              return (\n                <div className=\"panel-header\" key={`${action.icon}_header_contextual`}>\n                  <div className=\"panel-title\">{action.title}</div>\n                  <div className=\"header-actions\">\n                    {action.title === 'Property Search' && width > 500 && (\n                      <calcite-action\n                        ref={maximize}\n                        aria-label=\"Maximize\"\n                        appearance=\"solid\"\n                        scale=\"m\"\n                        calcite-hydrated=\"\"\n                        icon=\"left-edge\"\n                        onClick={(e: any) => {\n                          maximizePropertySearch(e.target);\n                        }}\n                      ></calcite-action>\n                    )}\n                    {showTips(false)}\n                    <calcite-tooltip-manager>\n                      <calcite-tooltip label=\"Tooltip label\" reference-element=\"closeAction\" placement=\"bottom-end\">\n                        Close panel\n                      </calcite-tooltip>\n                      <calcite-action\n                        id=\"closeAction\"\n                        aria-label=\"Close\"\n                        appearance=\"solid\"\n                        scale=\"m\"\n                        calcite-hydrated=\"\"\n                        icon=\"x\"\n                        onClick={() => {\n                          document\n                            ?.querySelector('calcite-shell-panel[slot=contextual-panel]')\n                            ?.setAttribute('collapsed', '');\n                          action.isActive = false;\n\n                          console.log('setActions');\n                          setActions([...actions]);\n                        }}\n                      ></calcite-action>\n                    </calcite-tooltip-manager>\n                  </div>\n                </div>\n              );\n            }\n          })}\n          {actions.map((action: any) => {\n            if (!action.isTool || width < 1000) {\n              return (\n                <div\n                  className=\"action-panel\"\n                  id={action.container}\n                  key={`${action.container}_contextual`}\n                  hidden={!action.isActive}\n                ></div>\n              );\n            }\n          })}\n        </calcite-shell-panel>\n\n        <div slot=\"header\">\n          <Suspense fallback={''}>\n            <Header />\n          </Suspense>\n        </div>\n      </calcite-shell>\n      <Suspense fallback={''}>\n        <TipManager tips={tips} title={tipsTitle} closed tipsDismissed={tipsDismissed} />\n      </Suspense>\n    </div>\n  );\n};\nexport default Shell;\n"],"sourceRoot":""}