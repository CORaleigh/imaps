(this.webpackJsonpimaps=this.webpackJsonpimaps||[]).push([[149,44,186],{309:function(e,a,r){"use strict";r.d(a,"a",(function(){return i}));var t=r(173),n=r(91),l=r(201);async function i(e,a,r){const i=e&&e.getAtOrigin&&e.getAtOrigin("renderer",a.origin);if(i&&"unique-value"===i.type&&i.styleOrigin){const y=await Object(l.c)(i.populateFromStyle());if(Object(n.u)(r),!1===y.ok){const r=y.error;a&&a.messages&&a.messages.push(new t.a("renderer:style-reference",`Failed to create unique value renderer from style reference: ${r.message}`,{error:r,context:a})),e.clear("renderer",a.origin)}}}},341:function(e,a,r){"use strict";r.r(a),r.d(a,"fromItem",(function(){return o})),r.d(a,"selectLayerClassPath",(function(){return s}));var t=r(87),n=r(89),l=r(100),i=r(234),y=r(653),c=r(645);function o(e){return!e.portalItem||e.portalItem instanceof i.default||(e={...e,portalItem:new i.default(e.portalItem)}),function(e){return e.load().then(s).then(u)}(e.portalItem).then((a=>{const r={portalItem:e.portalItem,...a.properties},t=a.constructor;return Promise.resolve(new t(r))}))}function s(e){switch(e.type){case"Map Service":return function(e){return function(e){return m(e.url).then((e=>e.tileInfo))}(e).then((e=>e?{className:"TileLayer"}:{className:"MapImageLayer"}))}(e);case"Feature Service":return function(e){return L(e).then((e=>{if("object"==typeof e){const a={};return null!=e.id&&(a.layerId=e.id),{className:"FeatureLayer",properties:a}}return{className:"GroupLayer"}}))}(e);case"Feature Collection":return async function(e){return await e.load(),Object(y.b)(e,"Map Notes")?{className:"MapNotesLayer"}:Object(y.b)(e,"Route Layer")?{className:"RouteLayer"}:1===f(await e.fetchData())?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Scene Service":return function(e){return L(e).then((a=>{if("object"==typeof a){const r={};let t;if(null!=a.id?(r.layerId=a.id,t=`${e.url}/layers/${a.id}`):t=e.url,Array.isArray(e.typeKeywords)&&e.typeKeywords.length>0){const a={IntegratedMesh:"IntegratedMeshLayer","3DObject":"SceneLayer",Point:"SceneLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};for(const r of Object.keys(a))if(-1!==e.typeKeywords.indexOf(r))return{className:a[r]}}return m(t).then((e=>{let a="SceneLayer";const t={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};return e&&e.layerType&&t[e.layerType]&&(a=t[e.layerType]),{className:a,properties:r}}))}return{className:"GroupLayer"}}))}(e);case"Image Service":return async function(e){var a,r,t;await e.load();const n=null!=(a=null==(r=e.typeKeywords)?void 0:r.map((e=>e.toLowerCase())))?a:[];if(n.indexOf("elevation 3d layer")>-1)return{className:"ElevationLayer"};if(n.indexOf("tiled imagery")>-1)return{className:"ImageryTileLayer"};const l=await e.fetchData(),i=null==l?void 0:l.layerType;return"ArcGISTiledImageServiceLayer"===i?{className:"ImageryTileLayer"}:"ArcGISImageServiceLayer"===i?{className:"ImageryLayer"}:"map"===(null==(t=(await m(e.url)).cacheType)?void 0:t.toLowerCase())?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e);case"Stream Service":return{className:"StreamLayer"};case"Vector Tile Service":return{className:"VectorTileLayer"};case"KML":return{className:"KMLLayer"};case"WMTS":return{className:"WMTSLayer"};case"WMS":return{className:"WMSLayer"};default:return Promise.reject(new n.a("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type}))}}function u(e){return(0,c.a[e.className])().then((a=>({constructor:a,properties:e.properties})))}function L(e){return!e.url||e.url.match(/\/\d+$/)?Promise.resolve({}):e.load().then((()=>e.fetchData())).then((a=>f(a)>0?d(a):m(e.url).then(d)))}function d(e){return 1===f(e)&&{id:Object(t.q)(p(e))}}function p(e){const a=e.layers;if(a&&a.length)return a[0].id;const r=e.tables;return r&&r.length?r[0].id:null}function f(e){var a,r,t,n;return(null!=(a=null==e||null==(r=e.layers)?void 0:r.length)?a:0)+(null!=(t=null==e||null==(n=e.tables)?void 0:n.length)?t:0)}function m(e){return Object(l.default)(e,{responseType:"json",query:{f:"json"}}).then((e=>e.data))}},645:function(e,a,r){"use strict";r.d(a,"a",(function(){return t}));const t={BingMapsLayer:async()=>(await r.e(97).then(r.bind(null,871))).default,BuildingSceneLayer:async()=>(await Promise.all([r.e(1),r.e(2),r.e(3),r.e(4),r.e(71)]).then(r.bind(null,858))).default,CSVLayer:async()=>(await Promise.all([r.e(1),r.e(2),r.e(3),r.e(4),r.e(77)]).then(r.bind(null,872))).default,ElevationLayer:async()=>(await Promise.all([r.e(12),r.e(14),r.e(25),r.e(155)]).then(r.bind(null,722))).default,FeatureLayer:async()=>(await Promise.all([r.e(1),r.e(2),r.e(3),r.e(4),r.e(79)]).then(r.bind(null,270))).default,GroupLayer:async()=>(await Promise.all([r.e(37),r.e(112)]).then(r.bind(null,666))).default,GeoRSSLayer:async()=>(await Promise.all([r.e(1),r.e(98)]).then(r.bind(null,846))).default,ImageryLayer:async()=>(await Promise.all([r.e(1),r.e(2),r.e(3),r.e(4),r.e(67)]).then(r.bind(null,859))).default,ImageryTileLayer:async()=>(await Promise.all([r.e(1),r.e(2),r.e(3),r.e(10),r.e(70)]).then(r.bind(null,857))).default,IntegratedMeshLayer:async()=>(await Promise.all([r.e(10),r.e(14),r.e(34),r.e(120)]).then(r.bind(null,864))).default,KMLLayer:async()=>(await Promise.all([r.e(1),r.e(2),r.e(3),r.e(92)]).then(r.bind(null,873))).default,MapImageLayer:async()=>(await Promise.all([r.e(1),r.e(2),r.e(3),r.e(4),r.e(85)]).then(r.bind(null,788))).default,MapNotesLayer:async()=>(await Promise.all([r.e(1),r.e(2),r.e(3),r.e(4),r.e(69)]).then(r.bind(null,749))).default,OpenStreetMapLayer:async()=>(await Promise.all([r.e(24),r.e(277)]).then(r.bind(null,847))).default,PointCloudLayer:async()=>(await Promise.all([r.e(2),r.e(14),r.e(34),r.e(111)]).then(r.bind(null,860))).default,RouteLayer:async()=>(await Promise.all([r.e(1),r.e(2),r.e(3),r.e(4),r.e(78)]).then(r.bind(null,848))).default,SceneLayer:async()=>(await Promise.all([r.e(1),r.e(2),r.e(3),r.e(4),r.e(72)]).then(r.bind(null,874))).default,StreamLayer:async()=>(await Promise.all([r.e(1),r.e(2),r.e(3),r.e(4),r.e(87)]).then(r.bind(null,875))).default,TileLayer:async()=>(await Promise.all([r.e(1),r.e(2),r.e(3),r.e(4),r.e(86)]).then(r.bind(null,744))).default,UnknownLayer:async()=>(await r.e(158).then(r.bind(null,849))).default,UnsupportedLayer:async()=>(await r.e(159).then(r.bind(null,850))).default,VectorTileLayer:async()=>(await Promise.all([r.e(25),r.e(41),r.e(102),r.e(205)]).then(r.bind(null,765))).default,WebTileLayer:async()=>(await r.e(24).then(r.bind(null,760))).default,WMSLayer:async()=>(await Promise.all([r.e(1),r.e(2),r.e(95)]).then(r.bind(null,865))).default,WMTSLayer:async()=>(await Promise.all([r.e(24),r.e(278)]).then(r.bind(null,862))).default}},653:function(e,a,r){"use strict";function t(e,a){if(!n(e,a)){const r=e.typeKeywords;r?r.push(a):e.typeKeywords=[a]}}function n(e,a){return!!e.typeKeywords&&e.typeKeywords.indexOf(a)>-1}function l(e,a){const r=e.typeKeywords;if(r){const e=r.indexOf(a);e>-1&&r.splice(e,1)}}r.d(a,"a",(function(){return t})),r.d(a,"b",(function(){return n})),r.d(a,"c",(function(){return l}))},869:function(e,a,r){"use strict";r.r(a),r.d(a,"populateOperationalLayers",(function(){return u}));r(78);var t=r(91),n=r(106),l=r(234),i=r(309),y=r(645),c=r(653);async function o(e,a,r,t){if(!e.layerType||"ArcGISFeatureLayer"!==e.layerType)return!1;if(e.url)return!1;if(e.featureCollectionType&&e.featureCollectionType===r)return!0;if(e.itemId){const r=new l.default({id:e.itemId,portal:a});return await r.load(),"Feature Collection"===r.type&&Object(c.b)(r,t)}return!1}var s=r(341);async function u(e,a,r){if(!a)return;const n=[];for(const t of a){const e=I(t,r);"GroupLayer"===t.layerType?n.push(T(e,t,r)):n.push(e)}const l=await Object(t.j)(n);for(const t of l)!t.value||r.filter&&!r.filter(t.value)||e.add(t.value)}const L={ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",PointCloudLayer:"PointCloudLayer",ArcGISSceneServiceLayer:"SceneLayer",IntegratedMeshLayer:"IntegratedMeshLayer",BuildingSceneLayer:"BuildingSceneLayer",ArcGISTiledElevationServiceLayer:"ElevationLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",GroupLayer:"GroupLayer",WebTiledLayer:"WebTileLayer",CSV:"CSVLayer",VectorTileLayer:"VectorTileLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer",KML:"KMLLayer",RasterDataLayer:"UnsupportedLayer"},d={ArcGISTiledElevationServiceLayer:"ElevationLayer",DefaultTileLayer:"ElevationLayer",RasterDataElevationLayer:"UnsupportedLayer"},p={ArcGISTiledMapServiceLayer:"TileLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",OpenStreetMap:"OpenStreetMapLayer",WebTiledLayer:"WebTileLayer",VectorTileLayer:"VectorTileLayer",ArcGISImageServiceLayer:"UnsupportedLayer",WMS:"UnsupportedLayer",ArcGISMapServiceLayer:"UnsupportedLayer",DefaultTileLayer:"TileLayer"},f={ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISStreamLayer:"StreamLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",VectorTileLayer:"VectorTileLayer",GroupLayer:"GroupLayer",WebTiledLayer:"WebTileLayer",CSV:"CSVLayer",GeoRSS:"GeoRSSLayer",KML:"KMLLayer",WFS:"UnsupportedLayer",SubtypeGroupLayer:"UnsupportedLayer",WMS:"WMSLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",DefaultTileLayer:"TileLayer"},m={ArcGISFeatureLayer:"FeatureLayer"},S={ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",OpenStreetMap:"OpenStreetMapLayer",VectorTileLayer:"VectorTileLayer",WebTiledLayer:"WebTileLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer"};async function I(e,a){return async function(e,a,r){const t=new e;return t.read(a,r.context),"group"===t.type&&g(a)&&await async function(e,a,r){const t=y.a.FeatureLayer,n=await t(),l=a.featureCollection,i=l.showLegend,c=l.layers.map((e=>{const a=new n;return a.read(e,r),null!=i&&a.read({showLegend:i},r),a}));e.layers.addMany(c)}(t,a,r.context),await Object(i.a)(t,r.context),t}(await async function(e,a){const r=a.context,t=function(e){let a;switch(e.origin){case"web-scene":switch(e.layerContainerType){case"basemap":a=p;break;case"ground":a=d;break;default:a=L}break;default:switch(e.layerContainerType){case"basemap":a=S;break;case"tables":a=m;break;default:a=f}}return a}(r);let n=e.layerType||e.type;!n&&a&&a.defaultLayerType&&(n=a.defaultLayerType);const i=t[n];let c=i?y.a[i]:y.a.UnknownLayer;const u=r&&r.portal;if(w(e)){if(e.itemId){const a=new l.default({id:e.itemId,portal:u});await a.load();const r=(await Object(s.selectLayerClassPath)(a)).className||"UnknownLayer";c=y.a[r]}}else"ArcGISFeatureLayer"===n&&(await function(e,a){return o(e,a,"notes","Map Notes")}(e,u)?c=y.a.MapNotesLayer:await function(e,a){return o(e,a,"route","Route Layer")}(e,u)?c=y.a.RouteLayer:g(e)&&(c=y.a.GroupLayer));return e.wmtsInfo&&e.wmtsInfo.url&&e.wmtsInfo.layerIdentifier&&(c=y.a.WMTSLayer),c()}(e,a),e,a)}function g(e){if("ArcGISFeatureLayer"!==e.layerType||w(e))return!1;const a=e.featureCollection;return!!(a&&a.layers&&a.layers.length>1)}function w(e){return"Feature Collection"===e.type}async function T(e,a,r){const t=new n.a,l=u(t,Array.isArray(a.layers)?a.layers:[],r),i=await e;if(await l,"group"===i.type)return i.layers.addMany(t),i}}}]);
//# sourceMappingURL=149.19ee4ea9.chunk.js.map