{"version":3,"sources":["Components/PropertyPanel/PropertyTable/utils/propertytable.ts","../node_modules/@vaadin/vaadin-grid/theme/lumo/vaadin-grid-sorter-styles.js","../node_modules/@vaadin/vaadin-grid/src/vaadin-grid-sorter.js","../node_modules/@vaadin/vaadin-grid/src/vaadin-grid-sort-column.js","Components/PropertyPanel/PropertyTable/PropertyTable.tsx"],"names":["definitionExpression","configureMenuButton","layer","menuButton","columns","ButtonMenu","iconClass","container","items","label","clickFunction","exportTable","autoCloseMenu","popupTemplate","fieldInfos","filter","field","includes","fieldName","map","selectionEnabled","selected","visible","event","fieldInfo","find","item","Array","from","column","getAttribute","hidden","createColumns","ignoreFields","showColumns","forEach","columnName","fields","name","path","header","alias","width","key","toLowerCase","push","queryFeatures","where","outFields","then","result","csv","features","feature","attributes","Date","toDateString","parseFloat","toFixed","datestr","toISOString","replaceAll","exportedFilenmae","blob","Blob","type","link","document","createElement","undefined","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","$_documentContainer","html","head","content","innerHTML","GridSorterElement","ThemableMixin","DirMixin","PolymerElement","String","direction","reflectToAttribute","notify","value","_order","Number","_isConnected","Boolean","ready","super","this","addEventListener","_onClick","bind","connectedCallback","disconnectedCallback","_pathOrDirectionChanged","isConnected","dispatchEvent","CustomEvent","bubbles","composed","_getDisplayOrder","order","e","activeElement","getRootNode","contains","preventDefault","_directionOrOrderChanged","test","navigator","userAgent","root","querySelectorAll","el","customElements","define","is","GridSortColumnElement","GridColumnElement","_prepareHeaderTemplate","headerTemplate","_prepareTemplatizer","$","templatizer","dataHost","_getHeader","_generateHeader","PropertyTable","props","loaded","setLoaded","useState","loading","setLoading","count","setCount","setColumns","useRef","grid","theme","useContext","ThemeContext","useEffect","current","render","recalculateColumnWidths","notifyResize","selectedTab","promiseUtils","resolve","load","whenDefined","createFeatureTable","col","renderer","rowData","f","firstElementChild","textContent","toLocaleDateString","toLocaleString","maximumFractionDigits","setColumnRenderer","detail","selectedItems","i","deselectItem","selectItem","featureSelected","returnGeometry","featureSet","scrollToIndex","length","getFeatures","className","data-node-ref","aria-pressed","aria-controls","aria-haspopup","aria-label","ref","title","id"],"mappings":";8MAMA,IAAIA,EAAuB,GACpB,MAuCDC,EAAsB,CAC1BC,EACAC,EACAC,KAEA,IAAIC,IAAW,CACbC,UAAW,8BACXC,UAAWJ,EACXK,MAAO,CACL,CACEC,MAAO,SACPC,cAAe,KACbC,EAAYT,KAGhB,CACEO,MAAO,oBACPH,UAAW,kBACXM,eAAe,EACfJ,MAAON,EAAMW,cAAcC,WACxBC,QAAQC,IACC,CAAC,WAAY,YAAYC,SAASD,EAAME,aAEjDC,KAAKH,IACG,CACLP,MAAOO,EAAMP,MACbW,kBAAkB,EAClBC,SAAUL,EAAMM,QAChBhB,UAAW,uBACXI,cAAgBa,IAAgB,IAAD,EAC7B,MAAMC,EAAYtB,EAAMW,cAAcC,WAAWW,MAAMT,GAC9CA,EAAMP,QAAUc,EAAMG,KAAKjB,QAEpCe,EAAUF,QAAUC,EAAMG,KAAKL,UAGnB,UAAGM,MAAMC,KAAKxB,UAAd,aAAG,EAAqBqB,MAAMI,IAC3B,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQC,aAAa,WAAYN,EAAUN,aAE7Ca,QAAUR,EAAMG,KAAKL,cAIpCX,cAAe,SAAUa,GACvBA,EAAMG,KAAKpB,UAAY,uBAuBpB0B,EAAiB9B,IAC5B,MAAME,EAAiB,GACjB6B,EAAe,CAAC,WAAY,WAAY,YACxCC,EAAc,CAAC,eAAgB,QAAS,OAAQ,UAAW,WA2BjE,OA1BAA,EAAYC,SAASC,IACnB,MAAMpB,EAAQd,EAAMmC,OAAOZ,MAAMI,GACxBA,EAAOS,OAASF,IAEnBP,EAAS,CACbU,KAAO,cAAavB,EAAMsB,OAC1BE,OAAQxB,EAAMyB,MACdC,MAAO,OACPJ,KAAMtB,EAAMsB,KACZK,IAAM,GAAE3B,EAAMsB,KAAKM,wBAErBxC,EAAQyC,KAAKhB,MAEf3B,EAAMmC,OAAOF,SAASnB,IACpB,IAAKiB,EAAahB,SAASD,EAAMsB,QAAUJ,EAAYjB,SAASD,EAAMsB,MAAO,CAC3E,MAAMT,EAAS,CACbU,KAAO,cAAavB,EAAMsB,OAC1BE,OAAQxB,EAAMyB,MACdC,MAAO,OACPJ,KAAMtB,EAAMsB,KACZK,IAAM,GAAE3B,EAAMsB,KAAKM,uBACnBb,QAAQ,GAEV3B,EAAQyC,KAAKhB,OAGVzB,GAgBHO,EAAeT,IACnBA,EAAM4C,cAAc,CAAEC,MAAO/C,EAAsBgD,UAAW,CAAC,OAAQC,MAAMC,IAC3E,IAAIC,EAAM,GACVD,EAAOb,OAAOF,SAASnB,IACrBmC,GAAQ,GAAEnC,EAAMyB,YAElBU,GAAO,OACPD,EAAOE,SAASjB,SAASkB,IACvB,IAAK,MAAMV,KAAOU,EAAQC,WACpBD,EAAQC,WAAWX,GACjBA,EAAIC,cAAc3B,SAAS,QAC7BkC,GAAQ,IAAG,IAAII,KAAKF,EAAQC,WAAWX,IAAMa,mBACpCb,EAAIC,cAAc3B,SAAS,SACpCkC,GAAQ,IAAGM,WAAWJ,EAAQC,WAAWX,IAAMe,QAAQ,OAEvDP,GAAQ,IAAGE,EAAQC,WAAWX,OAGhCQ,GAAQ,MAGZA,GAAO,UAET,IAAIQ,GAAU,IAAIJ,MAAOK,cACzBD,EAAUA,EAAQE,WAAW,IAAK,IAAIA,WAAW,IAAK,IACtD,MAAMC,EAAoB,gBAAeH,QAEnCI,EAAO,IAAIC,KAAK,CAACb,GAAM,CAAEc,KAAM,4BAC/BC,EAAOC,SAASC,cAAc,KACpC,QAAsBC,IAAlBH,EAAKI,SAAwB,CAC/B,MAAMC,EAAMC,IAAIC,gBAAgBV,GAChCG,EAAKQ,aAAa,OAAQH,GAC1BL,EAAKQ,aAAa,WAAYZ,GAC9BI,EAAKS,MAAMC,WAAa,SACxBT,SAASU,KAAKC,YAAYZ,GAC1BA,EAAKa,QACLZ,SAASU,KAAKG,YAAYd,Q,iBChMhC,MAAMe,EAAsBC,GAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA4CjCf,SAASgB,KAAKL,YAAYG,EAAoBG,S,uCCnC9C,MAAMH,EAAsBd,SAASC,cAAc,YAEnDa,EAAoBI,UAAa,mqDAWjClB,SAASgB,KAAKL,YAAYG,EAAoBG,SAiC9C,MAAME,UAA0BC,YAAcC,YAASC,OAClC,sBACjB,OAAOP,GAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAkDD,gBACX,MAAO,qBAGY,wBACnB,MAAO,CAIL3C,KAAMmD,OAQNC,UAAW,CACT1B,KAAMyB,OACNE,oBAAoB,EACpBC,QAAQ,EACRC,MAAO,MAOTC,OAAQ,CACN9B,KAAM+B,OACNF,MAAO,MAITG,aAAc,CACZhC,KAAMiC,QACNJ,OAAO,IAKO,uBAClB,MAAO,CACL,yDACA,+CAKJK,QACEC,MAAMD,QACNE,KAAKC,iBAAiB,QAASD,KAAKE,SAASC,KAAKH,OAIpDI,oBACEL,MAAMK,oBACNJ,KAAKJ,cAAe,EAItBS,uBACEN,MAAMM,uBACNL,KAAKJ,cAAe,EAItBU,wBAAwBpE,EAAMoD,EAAWiB,QAC1BvC,IAAT9B,QAAoC8B,IAAdsB,QAA2CtB,IAAhBuC,GAIjDA,GACFP,KAAKQ,cAAc,IAAIC,YAAY,iBAAkB,CAACC,SAAS,EAAMC,UAAU,KAKnFC,iBAAiBC,GACf,OAAiB,OAAVA,EAAiB,GAAKA,EAAQ,EAIvCX,SAASY,GACP,MAAMC,EAAgBf,KAAKgB,cAAcD,cACrCf,OAASe,GAAiBf,KAAKiB,SAASF,KAK5CD,EAAEI,iBACqB,QAAnBlB,KAAKV,UACPU,KAAKV,UAAY,OACW,SAAnBU,KAAKV,UACdU,KAAKV,UAAY,KAEjBU,KAAKV,UAAY,OAKrB6B,yBAAyB7B,EAAWuB,QAChB7C,IAAdsB,QAAqCtB,IAAV6C,IAMhB,iCAAiCO,KAAKC,UAAUC,YAC/CtB,KAAKuB,MACnBvB,KAAKuB,KAAKC,iBAAiB,KAAK1F,SAAQ,SAAS2F,GAC/CA,EAAGnD,MAAM,+BAAiC,UAC1CmD,EAAGnD,MAAM,+BAAiC,QAMlDoD,eAAeC,OAAO1C,EAAkB2C,GAAI3C,G,YC7M5C,MAAM4C,UAA8BC,IACf,sBACjB,OAAOjD,GAAK;;;;EAOD,gBACX,MAAO,0BAGY,wBACnB,MAAO,CAIL3C,KAAMmD,OAQNC,UAAW,CACT1B,KAAMyB,OACNG,QAAQ,IAMduC,yBACE,MAAMC,EAAiBhC,KAAKiC,oBAAoBjC,KAAKkC,EAAEF,gBAGvD,OADAA,EAAeG,YAAYC,SAAWpC,KAC/BgC,EAITK,WAAWlG,EAAQD,GACjB,OAAOC,GAAU6D,KAAKsC,gBAAgBpG,IAI1CwF,eAAeC,OAAOE,EAAsBD,GAAIC,G,8BC5DzC,MAAMU,EAAiBC,IAC5B,MAAOC,EAAQC,GAAaC,oBAAS,IAC9BC,EAASC,GAAcF,oBAAS,IAEhCG,EAAOC,GAAYJ,mBAAS,IAC5B5I,EAASiJ,GAAcL,mBAAgB,IACxC9I,EAAQoJ,mBACRC,EAAOD,mBACPnJ,EAAamJ,iBAA0B,OACvC,MAAEE,GAAUC,qBAAWC,KAwD7B,OAtDAC,qBAAU,KACRT,EAAWL,EAAMI,WAChB,CAACJ,EAAMI,UAEVU,qBAAU,KACJJ,EAAKK,UACPL,EAAKK,QAAQC,SACbN,EAAKK,QAAQE,0BACbP,EAAKK,QAAQG,kBAEd,CAAClB,EAAMmB,cAEVL,qBAAU,KAEY,IAAD,EADdb,GACCD,EAAM3I,QJ8DmBA,IAC1B+J,KAAqBC,IAC1BhK,EAAMiK,OAAOlH,MAAK,KAChB/C,EAAMW,cAAcC,WAAWqB,SAASnB,IAClC,CAAC,eAAgB,QAAS,UAAW,UAAW,QAAQC,SAASD,EAAME,WACzEF,EAAMM,SAAU,EAEhBN,EAAMM,SAAU,KAGpByG,eAAeqC,YAAY,eAAenH,MAAK,KAC7CiH,EAAQlI,EAAc9B,aIxEtBmK,CAAmBxB,EAAM3I,OAAO+C,MAAM7C,IACpCiJ,EAAW,IAAWjJ,IJ9BC,EAC/BmJ,EACArJ,EACAC,KAEA,MAAMC,EAA6CmJ,EAAK1B,iBACtD,2BAGF5H,EAAoBC,EAAOC,EAAYC,GAEvCA,EAAQ+B,SAASmI,IACfA,EAAIC,SAAW,CAAC3C,EAAW/F,EAAa2I,KAEtC,MAAMxJ,EAAQd,EAAMmC,OAAOZ,MAAMgJ,GACxBA,EAAEhI,QAAUZ,EAAOW,SAEvBoF,EAAK8C,oBACR9C,EAAKvC,UAAY,2CAEfrE,IACF4G,EAAK8C,kBAAkBC,YAAcH,EAAQ9I,KAAK4B,WAAWtC,EAAMsB,MAC/DtB,EAAMsB,KAAKrB,SAAS,SAClBuJ,EAAQ9I,KAAK4B,WAAWtC,EAAMsB,QAChCsF,EAAK8C,kBAAkBC,YAAc,IAAIpH,KAAKiH,EAAQ9I,KAAK4B,WAAWtC,EAAMsB,OAAOsI,uBAGnF5J,EAAMsB,KAAKrB,SAAS,QAAUD,EAAMsB,KAAKrB,SAAS,WAChDuJ,EAAQ9I,KAAK4B,WAAWtC,EAAMsB,QAChCsF,EAAK8C,kBAAkBC,YAAe,IAAGH,EAAQ9I,KAAK4B,WAAWtC,EAAMsB,MAAMuI,eAAe,QAAS,CACnGC,sBAAuB,aIC3BC,CACExB,EAAKK,QACL1J,EAAM0J,QACNzJ,EAAWyJ,YAGf1J,EAAM0J,QAAUf,EAAM3I,MACtB6I,GAAU,GACV,UAAAQ,EAAKK,eAAL,SAActD,iBAAiB,uBAAwB/E,IACrD,MAAMG,EAAOH,EAAMyJ,OAAOlF,MACf,IAAD,MAANpE,IACF,UAAA6H,EAAKK,eAAL,mBAAcqB,qBAAd,SAA6B9I,SAAS+I,IAAO,IAAD,EAC1C,UAAA3B,EAAKK,eAAL,SAAcuB,aAAaD,MAE7B,UAAA3B,EAAKK,eAAL,SAAcwB,WAAW1J,GACzBmH,EAAMwC,gBAAgB3J,QAM9B,MAAO,SAGN,CAACmH,EAAM3I,QACVyJ,qBAAU,KACJzJ,EAAM0J,SACJf,EAAM9H,SACRmI,GAAW,GJgFQ,EAAChJ,EAA4Ba,EAAgBwI,KACtEvJ,EAAuBe,EAChBkJ,KAAqBC,IAC1BhK,EACG4C,cAAc,CAAEC,MAAOhC,EAAQuK,gBAAgB,EAAMtI,UAAW,CAAC,OACjEC,MAAMsI,IACLhC,EAAK/I,MAAQ+K,EAAWnI,SACxBmG,EAAKiC,cAAc,GACnBtB,EAAQqB,EAAWnI,SAASqI,eItF5BC,CAAYxL,EAAM0J,QAASf,EAAM9H,OAAQwI,EAAKK,SAAwB3G,MAAMkG,IAC1ED,GAAW,GACXE,EAASD,SAId,CAACN,EAAM9H,SAER,sBAAK4K,UAAU,QAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAY,+BAA6B1C,EAAU,UAAY,QAEtE,sBAAK0C,UAAU,4BAAf,uBAAsDxC,KACtD,qBAAKwC,UAAU,2BAAf,SACE,qBAAKC,gBAAc,YAAYD,UAAU,+BAAzC,SACE,wBACEE,eAAa,QACbC,gBAAc,4BACdC,gBAAc,OACdC,aAAW,UACXL,UAAU,4BACVM,IAAK9L,EACL+L,MAAM,UACNjI,KAAK,kBAMb,6BAAa+H,aAAW,kBAAkBxC,MAAOA,EAAOmC,UAAU,wBAAwBM,IAAK1C,EAA/F,SACGnJ,EAAQe,KAAKU,GAEV,yCACEW,OAAQX,EAAOW,OACfD,KAAMV,EAAOU,KAEb4J,GAAItK,EAAOc,IACXD,MAAOb,EAAOa,MACdX,OAAQF,EAAOE,OAAS,GAAK,KAC7BO,KAAMT,EAAOS,MAJRT,EAAOc,aAaXiG","file":"static/js/172.486daf43.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as promiseUtils from '@arcgis/core/core/promiseUtils';\nimport { GridElement } from '@vaadin/vaadin-grid';\nimport { GridColumnElement } from '@vaadin/vaadin-grid/src/vaadin-grid-column';\nimport { GridSortColumnElement } from '@vaadin/vaadin-grid/vaadin-grid-sort-column';\nimport ButtonMenu from '@arcgis/core/widgets/FeatureTable/Grid/support/ButtonMenu';\nlet definitionExpression = '';\nexport const setColumnRenderer = (\n  grid: GridElement,\n  layer: __esri.FeatureLayer,\n  menuButton: HTMLButtonElement,\n): void => {\n  const columns: NodeListOf<GridSortColumnElement> = grid.querySelectorAll(\n    'vaadin-grid-sort-column',\n  ) as NodeListOf<GridSortColumnElement>;\n\n  configureMenuButton(layer, menuButton, columns);\n\n  columns.forEach((col: GridSortColumnElement) => {\n    col.renderer = (root: any, column: any, rowData: any) => {\n      // Check if there is a container generated with the previous renderer call to update its content instead of recreation\n      const field = layer.fields.find((f) => {\n        return f.alias === column.header;\n      }) as __esri.Field;\n      if (!root.firstElementChild) {\n        root.innerHTML = '<div style=\"white-space: normal\"></div>';\n      }\n      if (field) {\n        root.firstElementChild.textContent = rowData.item.attributes[field.name];\n        if (field.name.includes('DATE')) {\n          if (rowData.item.attributes[field.name]) {\n            root.firstElementChild.textContent = new Date(rowData.item.attributes[field.name]).toLocaleDateString();\n          }\n        }\n        if (field.name.includes('VAL') || field.name.includes('PRICE')) {\n          if (rowData.item.attributes[field.name]) {\n            root.firstElementChild.textContent = `$${rowData.item.attributes[field.name].toLocaleString('en-US', {\n              maximumFractionDigits: 0,\n            })}`;\n          }\n        }\n      }\n    };\n  });\n};\n\nconst configureMenuButton = (\n  layer: __esri.FeatureLayer,\n  menuButton: HTMLButtonElement,\n  columns: NodeListOf<GridSortColumnElement>,\n) => {\n  new ButtonMenu({\n    iconClass: 'esri-icon-handle-horizontal',\n    container: menuButton,\n    items: [\n      {\n        label: 'Export',\n        clickFunction: () => {\n          exportTable(layer);\n        },\n      },\n      {\n        label: 'Show/Hide Columns',\n        iconClass: 'esri-icon-right',\n        autoCloseMenu: false,\n        items: layer.popupTemplate.fieldInfos\n          .filter((field: __esri.FieldInfo) => {\n            return !['OBJECTID', 'GlobalID'].includes(field.fieldName);\n          })\n          .map((field: __esri.FieldInfo) => {\n            return {\n              label: field.label,\n              selectionEnabled: true,\n              selected: field.visible,\n              iconClass: 'esri-icon-check-mark',\n              clickFunction: (event: any) => {\n                const fieldInfo = layer.popupTemplate.fieldInfos.find((field) => {\n                  return field.label === event.item.label;\n                }) as __esri.FieldInfo;\n                fieldInfo.visible = event.item.selected;\n                //this.createColumns();\n\n                const column = Array.from(columns)?.find((column: GridColumnElement) => {\n                  return column?.getAttribute('name') === fieldInfo.fieldName;\n                }) as GridColumnElement;\n                column.hidden = !event.item.selected;\n              },\n            };\n          }),\n        clickFunction: function (event) {\n          event.item.iconClass = 'esri-icon-down';\n        },\n      },\n    ],\n  });\n};\n\nexport const createFeatureTable = (layer: __esri.FeatureLayer): Promise<any[]> => {\n  return promiseUtils.create((resolve) => {\n    layer.load().then(() => {\n      layer.popupTemplate.fieldInfos.forEach((field) => {\n        if (['SITE_ADDRESS', 'OWNER', 'PIN_NUM', 'PIN_EXT', 'REID'].includes(field.fieldName)) {\n          field.visible = true;\n        } else {\n          field.visible = false;\n        }\n      });\n      customElements.whenDefined('vaadin-grid').then(() => {\n        resolve(createColumns(layer));\n      });\n    });\n  });\n};\nexport const createColumns = (layer: __esri.FeatureLayer): any[] => {\n  const columns: any[] = [];\n  const ignoreFields = ['OBJECTID', 'PARCELPK', 'GlobalID'];\n  const showColumns = ['SITE_ADDRESS', 'OWNER', 'REID', 'PIN_NUM', 'PIN_EXT'];\n  showColumns.forEach((columnName) => {\n    const field = layer.fields.find((column) => {\n      return column.name === columnName;\n    }) as __esri.Field;\n    const column = {\n      path: `attributes.${field.name}`,\n      header: field.alias,\n      width: '12em',\n      name: field.name,\n      key: `${field.name.toLowerCase()}_column`,\n    };\n    columns.push(column);\n  });\n  layer.fields.forEach((field) => {\n    if (!ignoreFields.includes(field.name) && !showColumns.includes(field.name)) {\n      const column = {\n        path: `attributes.${field.name}`,\n        header: field.alias,\n        width: '12em',\n        name: field.name,\n        key: `${field.name.toLowerCase()}_column`,\n        hidden: true,\n      };\n      columns.push(column);\n    }\n  });\n  return columns;\n};\n\nexport const getFeatures = (layer: __esri.FeatureLayer, filter: string, grid: GridElement): Promise<number> => {\n  definitionExpression = filter;\n  return promiseUtils.create((resolve) => {\n    layer\n      .queryFeatures({ where: filter, returnGeometry: true, outFields: ['*'] })\n      .then((featureSet: __esri.FeatureSet) => {\n        grid.items = featureSet.features;\n        grid.scrollToIndex(0);\n        resolve(featureSet.features.length);\n      });\n  });\n};\n\nconst exportTable = (layer: __esri.FeatureLayer): void => {\n  layer.queryFeatures({ where: definitionExpression, outFields: ['*'] }).then((result) => {\n    let csv = '';\n    result.fields.forEach((field) => {\n      csv += `${field.alias},`;\n    });\n    csv += '\\r\\n';\n    result.features.forEach((feature) => {\n      for (const key in feature.attributes) {\n        if (feature.attributes[key]) {\n          if (key.toLowerCase().includes('date')) {\n            csv += `\"${new Date(feature.attributes[key]).toDateString()}\",`;\n          } else if (key.toLowerCase().includes('acres')) {\n            csv += `\"${parseFloat(feature.attributes[key]).toFixed(2)}\",`;\n          } else {\n            csv += `\"${feature.attributes[key]}\",`;\n          }\n        } else {\n          csv += `\"\",`;\n        }\n      }\n      csv += '\\r\\n';\n    });\n    let datestr = new Date().toISOString();\n    datestr = datestr.replaceAll(':', '').replaceAll('-', '');\n    const exportedFilenmae = `imaps_export_${datestr}.csv`;\n\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', exportedFilenmae);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  });\n};\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n\nconst $_documentContainer = html`<dom-module id=\"lumo-grid-sorter\" theme-for=\"vaadin-grid-sorter\">\n  <template>\n    <style>\n      :host {\n        justify-content: flex-start;\n        align-items: baseline;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        user-select: none;\n      }\n\n      [part=\"content\"] {\n        display: inline-block;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      [part=\"indicators\"] {\n        margin-left: var(--lumo-space-s);\n      }\n\n      :host(:not([direction])) [part=\"indicators\"]::before {\n        opacity: 0.2;\n      }\n\n      :host([direction]) {\n        color: var(--lumo-primary-text-color);\n      }\n\n      [part=\"order\"] {\n        font-size: var(--lumo-font-size-xxs);\n        line-height: 1;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"indicators\"] {\n        margin-right: var(--lumo-space-s);\n        margin-left: 0;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/polymer/lib/elements/custom-style.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { DirMixin } from '@vaadin/vaadin-element-mixin/vaadin-dir-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<custom-style>\n  <style>\n    @font-face {\n      font-family: 'vaadin-grid-sorter-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAQwAA0AAAAABuwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAEFAAAABkAAAAcfep+mUdERUYAAAP4AAAAHAAAAB4AJwAOT1MvMgAAAZgAAAA/AAAAYA8TBPpjbWFwAAAB7AAAAFUAAAFeF1fZ4mdhc3AAAAPwAAAACAAAAAgAAAAQZ2x5ZgAAAlgAAABcAAAAnMvguMloZWFkAAABMAAAAC8AAAA2C5Ap72hoZWEAAAFgAAAAHQAAACQGbQPHaG10eAAAAdgAAAAUAAAAHAoAAABsb2NhAAACRAAAABIAAAASAIwAYG1heHAAAAGAAAAAFgAAACAACwAKbmFtZQAAArQAAAECAAACZxWCgKhwb3N0AAADuAAAADUAAABZCrApUXicY2BkYGAA4rDECVrx/DZfGbhZGEDgyqNPOxH0/wNMq5kPALkcDEwgUQBWRA0dAHicY2BkYGA+8P8AAwMLAwgwrWZgZEAFbABY4QM8AAAAeJxjYGRgYOAAQiYGEICQSAAAAi8AFgAAeJxjYGY6yziBgZWBgWkm0xkGBoZ+CM34msGYkZMBFTAKoAkwODAwvmRiPvD/AIMDMxCD1CDJKjAwAgBktQsXAHicY2GAAMZQCM0EwqshbAALxAEKeJxjYGBgZoBgGQZGBhCIAPIYwXwWBhsgzcXAwcAEhIwMCi+Z/v/9/x+sSuElA4T9/4k4K1gHFwMMMILMY2QDYmaoABOQYGJABUA7WBiGNwAAJd4NIQAAAAAAAAAACAAIABAAGAAmAEAATgAAeJyNjLENgDAMBP9tIURJwQCMQccSZgk2i5fIYBDAidJjycXr7x5EPwE2wY8si7jmyBNXGo/bNBerxJNrpxhbO3/fEFpx8ZICpV+ghxJ74fAMe+h7Ox14AbrsHB14nK2QQWrDMBRER4mTkhQK3ZRQKOgCNk7oGQqhhEIX2WSlWEI1BAlkJ5CDdNsj5Ey9Rncdi38ES+jzNJo/HwTgATcoDEthhY3wBHc4CE+pfwsX5F/hGe7Vo/AcK/UhvMSz+mGXKhZU6pww8ISz3oWn1BvhgnwTnuEJf8Jz1OpFeIlX9YULDLdFi4ASHolkSR0iuYdjLak1vAequBhj21D61Nqyi6l3qWybGPjySbPHGScGJl6dP58MYcQRI0bts7mjebBqrFENH7t3qWtj0OuqHnXcW7b0HOTZFnKryRGW2hFX1m0O2vEM3opNMfTau+CS6Z3Vx6veNnEXY6jwDxhsc2gAAHicY2BiwA84GBgYmRiYGJkZmBlZGFkZ2djScyoLMgzZS/MyDQwMwLSrpYEBlIbxjQDrzgsuAAAAAAEAAf//AA94nGNgZGBg4AFiMSBmYmAEQnYgZgHzGAAD6wA2eJxjYGBgZACCKyoz1cD0o087YTQATOcIewAAAA==) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n</custom-style>`;\n\ndocument.head.appendChild($_documentContainer.content);\n/**\n * `<vaadin-grid-sorter>` is a helper element for the `<vaadin-grid>` that provides out-of-the-box UI controls,\n * visual feedback, and handlers for sorting the grid data.\n *\n * #### Example:\n * ```html\n * <vaadin-grid-column>\n *   <template class=\"header\">\n *     <vaadin-grid-sorter path=\"name.first\">First name</vaadin-grid-sorter>\n *   </template>\n *   <template>[[item.name.first]]</template>\n * </vaadin-grid-column>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `content` | The slotted content wrapper\n * `indicators` | The internal sorter indicators.\n * `order` | The internal sorter order\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `direction` | Sort direction of a sorter | :host\n *\n * @extends PolymerElement\n */\nclass GridSorterElement extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-flex;\n        cursor: pointer;\n        max-width: 100%;\n      }\n\n      [part=\"content\"] {\n        flex: 1 1 auto;\n      }\n\n      [part=\"indicators\"] {\n        position: relative;\n        align-self: center;\n        flex: none;\n      }\n\n      [part=\"order\"] {\n        display: inline;\n        vertical-align: super;\n      }\n\n      [part=\"indicators\"]::before {\n        font-family: 'vaadin-grid-sorter-icons';\n        display: inline-block;\n      }\n\n      :host(:not([direction])) [part=\"indicators\"]::before {\n        content: \"\\\\e901\";\n      }\n\n      :host([direction=asc]) [part=\"indicators\"]::before {\n        content: \"\\\\e900\";\n      }\n\n      :host([direction=desc]) [part=\"indicators\"]::before {\n        content: \"\\\\e902\";\n      }\n    </style>\n\n    <div part=\"content\">\n      <slot></slot>\n    </div>\n    <div part=\"indicators\">\n      <span part=\"order\">[[_getDisplayOrder(_order)]]</span>\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid-sorter';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * JS Path of the property in the item used for sorting the data.\n       */\n      path: String,\n\n      /**\n       * How to sort the data.\n       * Possible values are `asc` to use an ascending algorithm, `desc` to sort the data in\n       * descending direction, or `null` for not sorting the data.\n       * @type {GridSorterDirection | undefined}\n       */\n      direction: {\n        type: String,\n        reflectToAttribute: true,\n        notify: true,\n        value: null\n      },\n\n      /**\n       * @type {number | null}\n       * @protected\n       */\n      _order: {\n        type: Number,\n        value: null\n      },\n\n      /** @private */\n      _isConnected: {\n        type: Boolean,\n        value: false\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_pathOrDirectionChanged(path, direction, _isConnected)',\n      '_directionOrOrderChanged(direction, _order)'\n    ];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addEventListener('click', this._onClick.bind(this));\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._isConnected = true;\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._isConnected = false;\n  }\n\n  /** @private */\n  _pathOrDirectionChanged(path, direction, isConnected) {\n    if (path === undefined || direction === undefined || isConnected === undefined) {\n      return;\n    }\n\n    if (isConnected) {\n      this.dispatchEvent(new CustomEvent('sorter-changed', {bubbles: true, composed: true}));\n    }\n  }\n\n  /** @private */\n  _getDisplayOrder(order) {\n    return order === null ? '' : order + 1;\n  }\n\n  /** @private */\n  _onClick(e) {\n    const activeElement = this.getRootNode().activeElement;\n    if (this !== activeElement && this.contains(activeElement)) {\n      // Some focusable content inside the sorter was clicked, do nothing.\n      return;\n    }\n\n    e.preventDefault();\n    if (this.direction === 'asc') {\n      this.direction = 'desc';\n    } else if (this.direction === 'desc') {\n      this.direction = null;\n    } else {\n      this.direction = 'asc';\n    }\n  }\n\n  /** @private */\n  _directionOrOrderChanged(direction, order) {\n    if (direction === undefined || order === undefined) {\n      return;\n    }\n\n    // Safari has an issue with repainting shadow root element styles when a host attribute changes.\n    // Need this workaround (toggle any inline css property on and off) until the issue gets fixed.\n    var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    if (isSafari && this.root) {\n      this.root.querySelectorAll('*').forEach(function(el) {\n        el.style['-webkit-backface-visibility'] = 'visible';\n        el.style['-webkit-backface-visibility'] = '';\n      });\n    }\n  }\n}\n\ncustomElements.define(GridSorterElement.is, GridSorterElement);\n\nexport { GridSorterElement };\n","/**\n@license\nCopyright (c) 2018 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { GridColumnElement } from './vaadin-grid-column.js';\n\nimport './vaadin-grid-sorter.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\n/**\n * `<vaadin-grid-sort-column>` is a helper element for the `<vaadin-grid>`\n * that provides default header template and functionality for sorting.\n *\n * #### Example:\n * ```html\n * <vaadin-grid items=\"[[items]]\">\n *  <vaadin-grid-sort-column path=\"name.first\" direction=\"asc\"></vaadin-grid-sort-column>\n *\n *  <vaadin-grid-column>\n *    ...\n * ```\n *\n */\nclass GridSortColumnElement extends GridColumnElement {\n  static get template() {\n    return html`\n    <template class=\"header\" id=\"headerTemplate\">\n      <vaadin-grid-sorter path=\"[[path]]\" direction=\"{{direction}}\">[[_getHeader(header, path)]]</vaadin-grid-sorter>\n    </template>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-grid-sort-column';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * JS Path of the property in the item used for sorting the data.\n       */\n      path: String,\n\n      /**\n       * How to sort the data.\n       * Possible values are `asc` to use an ascending algorithm, `desc` to sort the data in\n       * descending direction, or `null` for not sorting the data.\n       * @type {GridSorterDirection | undefined}\n       */\n      direction: {\n        type: String,\n        notify: true\n      }\n    };\n  }\n\n  /** @private */\n  _prepareHeaderTemplate() {\n    const headerTemplate = this._prepareTemplatizer(this.$.headerTemplate);\n    // needed to override the dataHost correctly in case internal template is used.\n    headerTemplate.templatizer.dataHost = this;\n    return headerTemplate;\n  }\n\n  /** @private */\n  _getHeader(header, path) {\n    return header || this._generateHeader(path);\n  }\n}\n\ncustomElements.define(GridSortColumnElement.is, GridSortColumnElement);\n\nexport { GridSortColumnElement };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef, useState, useContext } from 'react';\nimport { createFeatureTable, getFeatures, setColumnRenderer } from './utils/propertytable';\nimport '@vaadin/vaadin-grid/vaadin-grid-sort-column';\nimport { GridElement } from '@vaadin/vaadin-grid';\nimport ThemeContext from '../../ThemeContext';\n\nimport './PropertyTable.scss';\n\nexport const PropertyTable = (props: any) => {\n  const [loaded, setLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const [count, setCount] = useState(0);\n  const [columns, setColumns] = useState<any[]>([]);\n  const layer = useRef<__esri.FeatureLayer>();\n  const grid = useRef<GridElement>();\n  const menuButton = useRef<HTMLButtonElement>(null);\n  const { theme } = useContext(ThemeContext);\n\n  useEffect(() => {\n    setLoading(props.loading);\n  }, [props.loading]);\n\n  useEffect(() => {\n    if (grid.current) {\n      grid.current.render();\n      grid.current.recalculateColumnWidths();\n      grid.current.notifyResize();\n    }\n  }, [props.selectedTab]);\n\n  useEffect(() => {\n    if (!loaded) {\n      if (props.layer) {\n        createFeatureTable(props.layer).then((columns) => {\n          setColumns([...[], ...columns]);\n          setColumnRenderer(\n            grid.current as GridElement,\n            layer.current as __esri.FeatureLayer,\n            menuButton.current as HTMLButtonElement,\n          );\n        });\n        layer.current = props.layer;\n        setLoaded(true);\n        grid.current?.addEventListener('active-item-changed', (event: any) => {\n          const item = event.detail.value;\n          if (item) {\n            grid.current?.selectedItems?.forEach((i) => {\n              grid.current?.deselectItem(i);\n            });\n            grid.current?.selectItem(item);\n            props.featureSelected(item);\n          }\n        });\n      }\n    }\n\n    return () => {\n      //table && table.destroy();\n    };\n  }, [props.layer]); // only after initial render\n  useEffect(() => {\n    if (layer.current) {\n      if (props.filter) {\n        setLoading(true);\n\n        getFeatures(layer.current, props.filter, grid.current as GridElement).then((count) => {\n          setLoading(false);\n          setCount(count);\n        });\n      }\n    }\n  }, [props.filter]);\n  return (\n    <div className=\"panel\">\n      <div className=\"esri-feature-table__header\">\n        <div className=\"esri-feature-table__loader-container\">\n          <div className={`esri-feature-table__loader ${loading ? 'loading' : ''}`}></div>\n        </div>\n        <div className=\"esri-feature-table__title\">Features: {count}</div>\n        <div className=\"esri-feature-table__menu\">\n          <div data-node-ref=\"_rootNode\" className=\"esri-button-menu esri-widget\">\n            <button\n              aria-pressed=\"false\"\n              aria-controls=\"1783678efcd-widget-1-menu\"\n              aria-haspopup=\"true\"\n              aria-label=\"Options\"\n              className=\"esri-button-menu__button \"\n              ref={menuButton}\n              title=\"Options\"\n              type=\"button\"\n            ></button>\n          </div>\n        </div>\n      </div>\n\n      <vaadin-grid aria-label=\"Sorting Example\" theme={theme} className=\"esri-widget esri-grid\" ref={grid}>\n        {columns.map((column) => {\n          return (\n            <vaadin-grid-sort-column\n              header={column.header}\n              path={column.path}\n              key={column.key}\n              id={column.key}\n              width={column.width}\n              hidden={column.hidden ? '' : null}\n              name={column.name}\n            ></vaadin-grid-sort-column>\n          );\n        })}\n      </vaadin-grid>\n    </div>\n  );\n};\n\nexport default PropertyTable;\n"],"sourceRoot":""}