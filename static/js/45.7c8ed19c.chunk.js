(this.webpackJsonpimaps=this.webpackJsonpimaps||[]).push([[45],{1212:function(t,e,i){"use strict";i.r(e);var r=i(249);i.d(e,"BufferObject",(function(){return r.a}));var n=i(267);i.d(e,"FramebufferObject",(function(){return n.a}));var s=i(579);i.d(e,"Program",(function(){return s.a}));var a=i(947);i.d(e,"ProgramCache",(function(){return a.a}));var o=i(798);i.d(e,"Renderbuffer",(function(){return o.a}));var h=i(948);i.d(e,"ShaderCompiler",(function(){return h.a}));var c=i(209);i.d(e,"Texture",(function(){return c.a}));var l=i(250);i.d(e,"VertexArrayObject",(function(){return l.a}));var d=i(645);i.d(e,"createProgram",(function(){return d.a})),i.d(e,"glslifyDefineMap",(function(){return d.b}));var u=i(794);i.d(e,"createContextOrErrorHTML",(function(){return u.b}))},209:function(t,e,i){"use strict";i.d(e,"a",(function(){return h}));var r=i(113),n=i(85),s=i(257),a=i(233),o=i(583);class h{constructor(t,e,i=null){this._context=t,this.type="texture",this._glName=null,this._descriptor=void 0,this._samplingModeDirty=!1,this._wrapModeDirty=!1,t.instanceCounter.increment(a.c.Texture,this),this._descriptor={target:3553,samplingMode:9729,wrapMode:10497,flipped:!1,hasMipmap:!1,isOpaque:!1,unpackAlignment:4,preMultiplyAlpha:!1,...e},34067===this._descriptor.target?this.setDataCubeMap(i):this.setData(i)}get glName(){return this._glName}get descriptor(){return this._descriptor}get isDirty(){return this._samplingModeDirty||this._wrapModeDirty}dispose(){this._context.gl&&this._glName&&(this._context.unbindTextureAllUnits(this),this._context.gl.deleteTexture(this._glName),this._glName=null,this._context.instanceCounter.decrement(a.c.Texture,this))}release(){this.dispose()}resize(t,e){const i=this._descriptor;i.width===t&&i.height===e||(i.width=t,i.height=e,34067===this._descriptor.target?this.setDataCubeMap(null):this.setData(null))}setDataCubeMap(t=null){for(let e=34069;e<=34074;e++)this.setData(t,e)}setData(t,e=3553){if(!this._context||!this._context.gl)return;const i=this._context.gl;this._glName||(this._glName=i.createTexture()),void 0===t&&(t=null),null===t&&(this._descriptor.width=this._descriptor.width||4,this._descriptor.height=this._descriptor.height||4);const r=this._context.bindTexture(this,h.TEXTURE_UNIT_FOR_UPDATES),a=this._descriptor;h._validateTexture(this._context,a),i.pixelStorei(i.UNPACK_ALIGNMENT,a.unpackAlignment),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,a.flipped?1:0),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.preMultiplyAlpha?1:0);const o=a.pixelFormat;let c=a.internalFormat?a.internalFormat:this._deriveInternalFormat(o,a.dataType);if(t instanceof ImageData||t instanceof HTMLImageElement||t instanceof HTMLCanvasElement||t instanceof HTMLVideoElement){let r=t.width,n=t.height;t instanceof HTMLVideoElement&&(r=t.videoWidth,n=t.videoHeight),a.width&&a.height,i.texImage2D(e,0,c,o,a.dataType,t),Object(s.a)(i),a.hasMipmap&&this.generateMipmap(),void 0===a.width&&(a.width=r),void 0===a.height&&(a.height=n)}else{null!=a.width&&null!=a.height||console.error("Width and height must be specified!"),i.DEPTH24_STENCIL8&&c===i.DEPTH_STENCIL&&(c=i.DEPTH24_STENCIL8);let r=a.width,h=a.height;if(function(t){return Object(n.l)(t)&&"type"in t&&"compressed"===t.type}(t)){const n=Math.round(Math.log(Math.max(r,h))/Math.LN2)+1;a.hasMipmap=a.hasMipmap&&n===t.levels.length;for(let s=0;;++s){const n=t.levels[Math.min(s,t.levels.length-1)];if(i.compressedTexImage2D(e,s,c,r,h,0,n),1===r&&1===h||!a.hasMipmap)break;r=Math.max(1,r>>1),h=Math.max(1,h>>1)}}else if(Object(n.l)(t))i.texImage2D(e,0,c,r,h,0,o,a.dataType,t),Object(s.a)(i),a.hasMipmap&&this.generateMipmap();else for(let t=0;i.texImage2D(e,t,c,r,h,0,o,a.dataType,null),Object(s.a)(i),(1!==r||1!==h)&&a.hasMipmap;++t)r=Math.max(1,r>>1),h=Math.max(1,h>>1)}h._applySamplingMode(i,this._descriptor),h._applyWrapMode(i,this._descriptor),h._applyAnisotropicFilteringParameters(this._context,this._descriptor),Object(s.a)(i),this._context.bindTexture(r,h.TEXTURE_UNIT_FOR_UPDATES)}updateData(t,e,i,r,n,s,a=3553){s||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const o=this._context.gl,c=this._descriptor,l=this._context.bindTexture(this,h.TEXTURE_UNIT_FOR_UPDATES);(e<0||i<0||r>c.width||n>c.height||e+r>c.width||i+n>c.height)&&console.error("An attempt to update out of bounds of the texture!"),o.pixelStorei(o.UNPACK_ALIGNMENT,c.unpackAlignment),o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,c.flipped?1:0),o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,c.preMultiplyAlpha?1:0),s instanceof ImageData||s instanceof HTMLImageElement||s instanceof HTMLCanvasElement||s instanceof HTMLVideoElement?o.texSubImage2D(a,t,e,i,c.pixelFormat,c.dataType,s):o.texSubImage2D(a,t,e,i,r,n,c.pixelFormat,c.dataType,s),this._context.bindTexture(l,h.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){const t=this._descriptor;t.hasMipmap||(t.hasMipmap=!0,this._samplingModeDirty=!0,h._validateTexture(this._context,t)),9729===t.samplingMode?(this._samplingModeDirty=!0,t.samplingMode=9985):9728===t.samplingMode&&(this._samplingModeDirty=!0,t.samplingMode=9984);const e=this._context.bindTexture(this,h.TEXTURE_UNIT_FOR_UPDATES);this._context.gl.generateMipmap(t.target),this._context.bindTexture(e,h.TEXTURE_UNIT_FOR_UPDATES)}setSamplingMode(t){t!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=t,this._samplingModeDirty=!0)}setWrapMode(t){t!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=t,h._validateTexture(this._context,this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const t=this._context.gl,e=this._descriptor;this._samplingModeDirty&&(h._applySamplingMode(t,e),this._samplingModeDirty=!1),this._wrapModeDirty&&(h._applyWrapMode(t,e),this._wrapModeDirty=!1)}_deriveInternalFormat(t,e){if("webgl"===this._context.webglVersion)return t;if(5126===e)switch(t){case 6408:return 34836;case 6407:return 34837;default:throw new Error("Unable to derive format")}return t}static _validateTexture(t,e){(e.width<0||e.height<0)&&console.error("Negative dimension parameters are not allowed!");const i=Object(r.j)(e.width)&&Object(r.j)(e.height);Object(o.a)(t.gl)||i||("number"==typeof e.wrapMode?33071!==e.wrapMode&&console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"):33071===e.wrapMode.s&&33071===e.wrapMode.t||console.error("Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!"),e.hasMipmap&&console.error("Mipmapping requires power-of-two textures!"))}static _applySamplingMode(t,e){let i=e.samplingMode,r=e.samplingMode;9985===i||9987===i?(i=9729,e.hasMipmap||(r=9729)):9984!==i&&9986!==i||(i=9728,e.hasMipmap||(r=9728)),t.texParameteri(e.target,t.TEXTURE_MAG_FILTER,i),t.texParameteri(e.target,t.TEXTURE_MIN_FILTER,r)}static _applyWrapMode(t,e){"number"==typeof e.wrapMode?(t.texParameteri(e.target,t.TEXTURE_WRAP_S,e.wrapMode),t.texParameteri(e.target,t.TEXTURE_WRAP_T,e.wrapMode)):(t.texParameteri(e.target,t.TEXTURE_WRAP_S,e.wrapMode.s),t.texParameteri(e.target,t.TEXTURE_WRAP_T,e.wrapMode.t))}static _applyAnisotropicFilteringParameters(t,e){var i;const r=t.capabilities.textureFilterAnisotropic;r&&t.gl.texParameterf(e.target,r.TEXTURE_MAX_ANISOTROPY,null!=(i=e.maxAnisotropy)?i:1)}}h.TEXTURE_UNIT_FOR_UPDATES=0},233:function(t,e,i){"use strict";i.d(e,"a",(function(){return r})),i.d(e,"b",(function(){return s})),i.d(e,"c",(function(){return n}));const r=33984;var n;!function(t){t[t.Texture=0]="Texture",t[t.Buffer=1]="Buffer",t[t.VAO=2]="VAO",t[t.VertexShader=3]="VertexShader",t[t.FragmentShader=4]="FragmentShader",t[t.Program=5]="Program",t[t.Framebuffer=6]="Framebuffer",t[t.Renderbuffer=7]="Renderbuffer",t[t.COUNT=8]="COUNT"}(n||(n={}));const s=33306},257:function(t,e,i){"use strict";i.d(e,"a",(function(){return c})),i.d(e,"b",(function(){return o})),i.d(e,"c",(function(){return h}));var r=i(88),n=i(82);const s=i(87).a.getLogger("esri/views/webgl");const a=!!Object(n.a)("enable-feature:webgl-debug");function o(){return a}function h(){return a}function c(t){if(o()){const e=t.getError();if(e){const i=function(t,e){switch(e){case t.INVALID_ENUM:return"Invalid Enum. An unacceptable value has been specified for an enumerated argument.";case t.INVALID_VALUE:return"Invalid Value. A numeric argument is out of range.";case t.INVALID_OPERATION:return"Invalid Operation. The specified command is not allowed for the current state.";case t.INVALID_FRAMEBUFFER_OPERATION:return"Invalid Framebuffer operation. The currently bound framebuffer is not framebuffer complete when trying to render to or to read from it.";case t.OUT_OF_MEMORY:return"Out of memory. Not enough memory is left to execute the command.";case t.CONTEXT_LOST_WEBGL:return"WebGL context has been lost";default:return"Unknown error"}}(t,e),n=(new Error).stack;s.error(new r.a("webgl-error","WebGL error occured",{message:i,stack:n}))}}}},267:function(t,e,i){"use strict";i.d(e,"a",(function(){return d}));var r=i(87),n=i(85),s=i(257),a=i(233),o=i(798),h=i(209),c=i(766);const l=r.a.getLogger("esri.views.webgl.FrameBufferObject");class d{constructor(t,e,i=null,r=null){if(this._context=t,this._glName=null,this._depthAttachment=null,this._stencilAttachment=null,this._colorAttachments=new Map,this._initialized=!1,this._desc={...e},t.instanceCounter.increment(a.c.Framebuffer,this),Object(n.l)(i)){Array.isArray(i)||(i=[i]);for(let e=0;e<i.length;++e){var s,c;const r=i[e];let n;u(r)?(n=r.descriptor,this._colorAttachments.set(36064+e,r)):(n=r,this._colorAttachments.set(36064+e,new h.a(t,r))),0!==(null==(s=this._desc)?void 0:s.colorTarget)&&2!==(null==(c=this._desc)?void 0:c.colorTarget)&&console.error("Framebuffer is initialized with a texture however the descriptor indicates using a renderbuffer color attachment!"),this._validateColorAttachmentPoint(36064+e),this._validateTextureDimensions(n,this._desc)}}if(r instanceof o.a){var l;const t=null!=(l=this._desc.depthStencilTarget)?l:3;2===t?this._stencilAttachment=r:1===t||3===t?this._depthAttachment=r:console.error('If a Renderbuffer is provided, "depthStencilTarget" must be one of STENCIL_RENDER_BUFFER, DEPTH_RENDER_BUFFER or DEPTH_STENCIL_RENDER_BUFFER'),_(r.descriptor,this._desc)}else if(Object(n.l)(r)){let t;this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!"),u(r)?(this._depthStencilTexture=r,t=r.descriptor):this._depthStencilTexture=new h.a(this._context,r),this._validateTextureDimensions(t,this._desc)}}dispose(){if(!this._desc)return;const t=this._context.getBoundFramebufferObject();this._disposeColorAttachments(),this._disposeDepthStencilAttachments(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(t),this._context.instanceCounter.decrement(a.c.Framebuffer,this),this._desc=null}get glName(){return this._glName}get descriptor(){return this._desc}get colorTexture(){const t=this._colorAttachments.get(36064);return t&&u(t)?t:null}get colorAttachment(){return this._colorAttachments.get(36064)}get depthStencilAttachment(){return this._depthStencilTexture||this._depthAttachment||this._stencilAttachment}get depthStencilTexture(){return this._depthStencilTexture}get width(){return this._desc.width}get height(){return this._desc.height}get gpuMemoryUsage(){return Object(c.c)(this.colorAttachment)+Object(c.c)(this.depthStencilAttachment)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&u(e)?e:null}framebufferTexture2D(t,e,i=36064,r=3553,n=0){e.framebufferTexture2D(e.FRAMEBUFFER,i,r,t,n)}attachColorTexture(t,e=36064){if(!t)return;this._validateColorAttachmentPoint(e);const i=t.descriptor;this._validateTextureDimensions(i,this._desc),this._disposeColorAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this.framebufferTexture2D(t.glName,this._context.gl,e)),this._colorAttachments.set(e,t)}detachColorTexture(t=36064){const e=this._colorAttachments.get(t);if(u(e)){const i=e;return this._initialized&&(this._context.bindFramebuffer(this),this.framebufferTexture2D(null,this._context.gl,t)),this._colorAttachments.delete(t),i}}attachDepthStencilTexture(t){if(Object(n.k)(t))return;const e=t.descriptor;34041!==e.pixelFormat&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),34042!==e.dataType&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),this._validateTextureDimensions(e,this._desc),this._desc.depthStencilTarget&&4!==this._desc.depthStencilTarget&&(this._desc.depthStencilTarget=4),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this.framebufferTexture2D(t.glName,this._context.gl,a.b)),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;return t&&this._initialized&&(this._context.bindFramebuffer(this),this.framebufferTexture2D(null,this._context.gl,a.b)),this._depthStencilTexture=null,t}attachDepthStencilBuffer(t){if(Object(n.k)(t))return;const e=t.descriptor;if(34041!==e.internalFormat&&33189!==e.internalFormat&&console.error("Depth/Stencil buffer must have correct internalFormat"),_(e,this._desc),this._disposeDepthStencilAttachments(),this._desc.depthStencilTarget=34041===e.internalFormat?3:1,this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl,i=1===this._desc.depthStencilTarget?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(e.FRAMEBUFFER,i,e.RENDERBUFFER,t.glName)}this._depthAttachment=t}detachDepthStencilBuffer(){const t=this._context.gl,e=this._depthAttachment;if(e&&this._initialized){this._context.bindFramebuffer(this);const e=1===this._desc.depthStencilTarget?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(t.FRAMEBUFFER,e,t.RENDERBUFFER,null)}return this._depthAttachment=null,e}detachAll(){this.detachColorTexture(),this.detachDepthStencilBuffer(),this.detachDepthStencilTexture()}copyToTexture(t,e,i,r,n,s,a){(t<0||e<0||n<0||s<0)&&console.error("Offsets cannot be negative!"),(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!");const o=this._desc,c=a.descriptor;3553!==a.descriptor.target&&console.error("Texture target must be TEXTURE_2D!"),(t+i>o.width||e+r>o.height||n+i>c.width||s+r>c.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const l=this._context,d=l.bindTexture(a,h.a.TEXTURE_UNIT_FOR_UPDATES);l.bindFramebuffer(this),l.gl.copyTexSubImage2D(3553,0,n,s,t,e,i,r),l.bindTexture(d,h.a.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,i,r,n,s,a){(i<=0||r<=0)&&console.error("Copy width and height must be greater than zero!"),a||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,i,r,n,s,a)}resize(t,e){const i=this._desc;if(i.width!==t||i.height!==e){if(!this._initialized)return i.width=t,i.height=e,this._colorAttachments.forEach((i=>{i&&i.resize(t,e)})),void(this._depthStencilTexture&&this._depthStencilTexture.resize(t,e));i.width=t,i.height=e,this._colorAttachments.forEach((i=>{i&&i.resize(t,e)})),null!=this._depthStencilTexture?this._depthStencilTexture.resize(t,e):(this._depthAttachment||this._stencilAttachment)&&(this._depthAttachment&&this._depthAttachment.resize(t,e),this._stencilAttachment&&this._stencilAttachment.resize(t,e)),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1}}initializeAndBind(t=3553){var e,i,r,n;const a=this._context.gl;if(this._initialized)return void a.bindFramebuffer(a.FRAMEBUFFER,this.glName);this._glName&&a.deleteFramebuffer(this._glName);const c=this._context,l=a.createFramebuffer(),d=this._desc,_=null!=(e=d.colorTarget)?e:1,p=null!=(i=d.width)?i:1,f=null!=(r=d.height)?r:1;if(a.bindFramebuffer(a.FRAMEBUFFER,l),0===this._colorAttachments.size)if(0===_)this._colorAttachments.set(36064,function(t,e,i){return new h.a(t,{target:i,pixelFormat:6408,dataType:5121,samplingMode:9728,wrapMode:33071,width:e.width,height:e.height})}(c,d,2===this.descriptor.colorTarget?34067:3553));else{const t=new o.a(c,{internalFormat:32854,width:p,height:f});this._colorAttachments.set(36064,t)}this._colorAttachments.forEach(((e,i)=>{e&&(u(e)?this.framebufferTexture2D(e.glName,a,i,t):a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.RENDERBUFFER,e.glName))}));const m=null!=(n=d.depthStencilTarget)?n:0;switch(m){case 1:case 3:{this._depthAttachment||(this._depthAttachment=new o.a(c,{internalFormat:1===d.depthStencilTarget?33189:34041,width:p,height:f}));const t=1===m?a.DEPTH_ATTACHMENT:a.DEPTH_STENCIL_ATTACHMENT;a.framebufferRenderbuffer(a.FRAMEBUFFER,t,a.RENDERBUFFER,this._depthAttachment.glName);break}case 2:this._stencilAttachment||(this._stencilAttachment=new o.a(c,{internalFormat:36168,width:p,height:f})),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.STENCIL_ATTACHMENT,a.RENDERBUFFER,this._stencilAttachment.glName);break;case 4:if(!this._depthStencilTexture){c.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!");const t={target:3553,pixelFormat:34041,dataType:34042,samplingMode:9728,wrapMode:33071,width:p,height:f};this._depthStencilTexture=new h.a(c,t)}this.framebufferTexture2D(this._depthStencilTexture.glName,a,a.DEPTH_STENCIL_ATTACHMENT,t)}Object(s.c)()&&a.checkFramebufferStatus(a.FRAMEBUFFER)!==a.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=l,this._initialized=!0}_disposeColorAttachments(){this._colorAttachments.forEach(((t,e)=>{if(u(t))this._initialized&&(this._context.bindFramebuffer(this),this.framebufferTexture2D(null,this._context.gl,e)),t.dispose();else if(t instanceof WebGLRenderbuffer){const i=this._context.gl;this._initialized&&(this._context.bindFramebuffer(this),i.framebufferRenderbuffer(i.FRAMEBUFFER,e,i.RENDERBUFFER,null)),this._context.gl.deleteRenderbuffer(t)}})),this._colorAttachments.clear()}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthAttachment){if(this._initialized){this._context.bindFramebuffer(this);const e=1===this._desc.depthStencilTarget?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(t.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthAttachment.dispose(),this._depthAttachment=null}this._stencilAttachment&&(this._initialized&&(this._context.bindFramebuffer(this),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.STENCIL_ATTACHMENT,t.RENDERBUFFER,null)),this._stencilAttachment.dispose(),this._stencilAttachment=null),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this.framebufferTexture2D(null,t,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture.dispose(),this._depthStencilTexture=null)}_validateTextureDimensions(t,e){3553!==t.target&&34067!==t.target&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Color attachment texture must match the framebuffer's!"):(e.width=t.width,e.height=t.height)}_validateColorAttachmentPoint(t){if(-1===d._MAX_COLOR_ATTACHMENTS){const t=this._context.capabilities.drawBuffers;if(t){const e=this._context.gl;d._MAX_COLOR_ATTACHMENTS=e.getParameter(t.MAX_COLOR_ATTACHMENTS)}else d._MAX_COLOR_ATTACHMENTS=1}const e=t-36064;e+1>d._MAX_COLOR_ATTACHMENTS&&l.error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${e+1}. Implementation supports up to ${d._MAX_COLOR_ATTACHMENTS} color attachments`)}}function u(t){return"type"in t&&"texture"===t.type}function _(t,e){void 0!==e.width&&e.width>=0&&void 0!==e.height&&e.height>=0?e.width===t.width&&e.height===t.height||console.error("Renderbuffer dimensions must match the framebuffer's!"):(e.width=t.width,e.height=t.height)}d._MAX_COLOR_ATTACHMENTS=-1},583:function(t,e,i){"use strict";function r(t){return window.WebGL2RenderingContext&&t instanceof window.WebGL2RenderingContext}i.d(e,"a",(function(){return r}))},645:function(t,e,i){"use strict";i.d(e,"a",(function(){return s})),i.d(e,"b",(function(){return n}));var r=i(579);function n(t){let e="";for(const i in t){const r=t[i];if("boolean"==typeof r)r&&(e+=`#define ${i}\n`);else if("number"==typeof r)e+=`#define ${i} ${r.toFixed()}\n`;else if("object"==typeof r){const t=r.options;let n=0;for(const i in t)e+=`#define ${t[i]} ${(n++).toFixed()}\n`;e+=`#define ${i} ${t[r.value]}\n`}}return e}function s(t,e,i,n){i=i||{},n=n||"";const s="function"==typeof e.shaders?e.shaders(i):e.shaders;return new r.a(t,n+s.vertexShader,n+s.fragmentShader,e.attributes)}},798:function(t,e,i){"use strict";i.d(e,"a",(function(){return n}));var r=i(233);class n{constructor(t,e){this._context=t,this._desc=e,this._context.instanceCounter.increment(r.c.Renderbuffer,this);const i=this._context.gl;this.glName=i.createRenderbuffer(),this._context.bindRenderbuffer(this),i.renderbufferStorage(i.RENDERBUFFER,e.internalFormat,e.width,e.height)}get descriptor(){return this._desc}resize(t,e){const i=this._desc;if(i.width===t&&i.height===e)return;i.width=t,i.height=e;const r=this._context.gl;this._context.bindRenderbuffer(this),r.renderbufferStorage(r.RENDERBUFFER,i.internalFormat,i.width,i.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(r.c.Renderbuffer,this),this._context=null)}}},947:function(t,e,i){"use strict";i.d(e,"a",(function(){return n}));var r=i(645);class n{constructor(t){this._programCacheByTemplate=new Map,this._rctx=t}dispose(){this._programCacheByTemplate.forEach((t=>t.programs.forEach((t=>t.dispose())))),this._programCacheByTemplate=null}getProgram(t,e){return this._programCacheByTemplate.has(t)||this.addProgramTemplate(t,(e=>Object(r.a)(this._rctx,t,e))),this.getProgramTemplateInstance(t,e)}addProgramTemplate(t,e){this._programCacheByTemplate.set(t,{constructor:e,programs:new Map})}getProgramTemplateInstance(t,e){const i=this._programCacheByTemplate.get(t);if(i){const t=e?JSON.stringify(e):"default";if(!i.programs.has(t)){const r=i.constructor(e);i.programs.set(t,r)}return i.programs.get(t)}return null}}},948:function(t,e,i){"use strict";i.d(e,"a",(function(){return r}));class r{constructor(t){this.readFile=t}resolveIncludes(t){return this.resolve(t)}resolve(t,e=new Map){if(e.has(t))return e.get(t);const i=this.read(t);if(!i)throw new Error(`cannot find shader file ${t}`);const r=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let n=r.exec(i);const s=[];for(;null!=n;)s.push({path:n[1],start:n.index,length:n[0].length}),n=r.exec(i);let a=0,o="";return s.forEach((t=>{o+=i.slice(a,t.start),o+=e.has(t.path)?"":this.resolve(t.path,e),a=t.start+t.length})),o+=i.slice(a),e.set(t,o),o}read(t){return this.readFile(t)}}}}]);
//# sourceMappingURL=45.7c8ed19c.chunk.js.map