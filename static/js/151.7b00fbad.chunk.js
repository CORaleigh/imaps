(this.webpackJsonpimaps=this.webpackJsonpimaps||[]).push([[151,161],{1161:function(t,e,i){"use strict";i.r(e);var s=i(131),a=(i(129),i(138)),r=(i(130),i(137),i(134)),o=i(133),n=(i(132),i(135),i(136),i(142)),h=i(159),c=i(295),l=(i(150),i(175)),p=i(338),d=i(171),v=i(166),b=i(161),y=i(380),g=i(734),u=i(762),_=i(311),m=i(569),f=i(563),G=i(615),O=i(868),x=i(968);class j{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape-start"}}class w{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape"}}class S{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape-stop"}}class k{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move-start"}}class M{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move"}}class H{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move-stop"}}class E{constructor(t){this.added=t,this.type="vertex-select"}}class C{constructor(t){this.removed=t,this.type="vertex-deselect"}}class D{constructor(t,e,i,s){this.added=t,this.graphic=e,this.oldGraphic=i,this.vertices=s,this.type="vertex-add"}}class I{constructor(t,e,i,s){this.removed=t,this.graphic=e,this.oldGraphic=i,this.vertices=s,this.type="vertex-remove"}}const V={removeVertex:["Backspace","Delete"]},R=g.b.reshapeGraphics,P={vertices:{default:new p.a({style:"circle",size:R.vertex.size,color:R.vertex.color,outline:{color:R.vertex.outlineColor,width:1}}),hover:new p.a({style:"circle",size:R.vertex.hoverSize,color:R.vertex.hoverColor,outline:{color:R.vertex.hoverOutlineColor,width:1}}),selected:new p.a({style:"circle",size:R.selected.size,color:R.selected.color,outline:{color:R.selected.outlineColor,width:1}})},midpoints:{default:new p.a({style:"circle",size:R.midpoint.size,color:R.midpoint.color,outline:{color:R.midpoint.outlineColor,width:1}}),hover:new p.a({style:"circle",size:R.midpoint.size,color:R.midpoint.color,outline:{color:R.midpoint.outlineColor,width:1}})}};let A=class extends l.a.EventedAccessor{constructor(t){super(t),this._handles=new v.a,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingTask=null,this._stagedVertex=null,this._totalDx=0,this._totalDy=0,this._viewHandles=new v.a,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.graphic=null,this.handleGraphics=[],this.layer=null,this.midpointGraphics=[],this.midpointSymbol=new p.a({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedHandles=[],this.snappingManager=null,this.type="reshape",this.view=null}initialize(){this._setup(),this._handles.add([Object(b.j)(this,"view.ready",(()=>{const{layer:t,view:e}=this;Object(O.a)(e,t),this._viewHandles.add([e.on("key-down",(t=>this._keyDownHandler(t)),y.b.TOOL)])})),Object(b.c)(this,"graphic",(()=>this.refresh())),Object(b.c)(this,"layer",((t,e)=>{e&&(this._clearSelection(),this._resetGraphics(e)),this.refresh()})),Object(b.c)(this,"enableMidpoints",(()=>{this.refresh()}))])}destroy(){this._reset(),this._mover&&this._mover.destroy(),this._mover=null,this._handles.removeAll(),this._handles=null,this._viewHandles.removeAll(),this._viewHandles=null}get state(){const t=!!this.get("view.ready"),e=!(!this.get("graphic")||!this.get("layer"));return t&&e?"active":t?"ready":"disabled"}set symbols(t){const{midpoints:e=P.midpoints,vertices:i=P.vertices}=t||{};this._set("symbols",{midpoints:e,vertices:i})}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.handleGraphics,this.midpointGraphics),e.length&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedHandles(){this.selectedHandles.length&&this._removeVertex(this.selectedHandles)}_setup(){this.graphic&&this.layer&&(this._setupGraphics(),this._setupMover())}_setUpGeometryHelper(){const t=this.graphic.geometry;Object(a.j)(t)||"polygon"!==t.type&&"polyline"!==t.type||(this._geometryHelper=new m.a(_.c.fromGeometry(t,"local"),t.type))}_saveSnappingContextForHandle(t,e){var i;this._snappingContext=new f.a({geometry:this._geometryHelper,elevationInfo:{mode:"on-the-ground",offset:0},pointer:(null==(i=e.viewEvent)?void 0:i.pointerType)||"mouse",excludeFeature:this.graphic,visualizer:new u.a,vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){this._clearSelection(),this._resetGraphicStateVars(),this._resetGraphics(),this._resetSnappingStateVars(),this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){var t;Object(a.k)(this.snappingManager)&&this.snappingManager.doneSnapping(),null==(t=this._geometryHelper)||t.destroy(),this._geometryHelper=null,this._snappingTask=Object(a.a)(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphicStateVars(){this._totalDx=0,this._totalDy=0}_resetGraphics(t){const e=t||this.layer;e&&(e.removeMany(this.handleGraphics),e.removeMany(this.midpointGraphics)),this.handleGraphics.forEach((t=>t.destroy())),this.midpointGraphics.forEach((t=>t.destroy())),this._set("handleGraphics",[]),this._set("midpointGraphics",[]),this._set("selectedHandles",[])}_setupGraphics(){const t=Object(a.q)(this.graphic.geometry),e=Object(c.b)(t.clone());if("polygon"===t.type)for(const i of e){const t=i[i.length-1];i[0][0]===t[0]&&i[0][1]===t[1]&&i.length>2&&i.pop()}this._set("handleGraphics",this._createHandleGraphics(e)),this.enableMidpoints&&this._set("midpointGraphics",this._createMidpointGraphics(e)),this._saveRelatedIndices(this.handleGraphics),this.layer.addMany(this.midpointGraphics),this.layer.addMany(this.handleGraphics)}_createHandleGraphics(t){const{_graphicAttributes:e,symbols:i,view:{spatialReference:s}}=this,a=[];return null==t||t.forEach(((t,r)=>{t.forEach(((t,o)=>{var n;const[c,l]=t;a.push(new d.a({geometry:new h.a({x:c,y:l,spatialReference:s}),symbol:null==i||null==(n=i.vertices)?void 0:n.default,attributes:{...e,pathIndex:r,pointIndex:o}}))}))})),a}_createMidpointGraphics(t){const{_graphicAttributes:e,symbols:i,view:{spatialReference:s}}=this,r=[];return null==t||t.forEach(((t,o)=>{t.forEach(((n,l)=>{const[p,v]=n,b=t[l+1]?l+1:0;if("polygon"===Object(a.i)(this.graphic.geometry,"type")||0!==b){const[a,n]=t[b],[y,g]=Object(c.d)([p,v],[a,n]);r.push(new d.a({geometry:new h.a({x:y,y:g,spatialReference:s}),symbol:i.midpoints.default,attributes:{...e,pathIndex:o,pointIndexStart:l,pointIndexEnd:b}}))}}))})),r}_saveRelatedIndices(t){if(!t)return;const e=t.map((({geometry:t})=>({x:t.x,y:t.y})));for(let i=0;i<e.length;i++){const s=[];for(let t=0;t<e.length;t++){if(i===t)continue;const a=e[i],r=e[t];a.x===r.x&&a.y===r.y&&s.push(t)}t[i].attributes.relatedGraphicIndices=s}}_setupMover(){this._mover=new x.default({enableMoveAllGraphics:!1,graphics:[].concat(this.handleGraphics,this.midpointGraphics,this.graphic),view:this.view,callbacks:{onGraphicClick:t=>this._onGraphicClickCallback(t),onGraphicMoveStart:t=>this._onGraphicMoveStartCallback(t),onGraphicMove:t=>this._onGraphicMoveCallback(t),onGraphicMoveStop:t=>this._onGraphicMoveStopCallback(t),onGraphicPointerOver:t=>this._onGraphicPointerOverCallback(t),onGraphicPointerOut:t=>this._onGraphicPointerOutCallback(t)}})}_onGraphicClickCallback(t){t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(t);else if(this._isMidpoint(e)){if(2===t.viewEvent.button)return;const i=this.graphic.clone(),s=this._createHandleFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],i,s)}else this._isHandle(e)&&(t.viewEvent.stopPropagation(),2===t.viewEvent.button?this._removeVertex(e):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedHandles.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)))}_onGraphicMoveStartCallback(t){const e=t.graphic,{dx:i,dy:s}=t;if(this._resetGraphicStateVars(),this._resetSnappingStateVars(),e===this.graphic)return this.handleGraphics.forEach((t=>t.visible=!1)),this.midpointGraphics.forEach((t=>t.visible=!1)),this._clearSelection(),void this._emitMoveStartEvent(i,s);if(this._isMidpoint(e)){this._clearSelection();const t=this.graphic.clone(),i=this._createHandleFromMidpoint(e);this._emitVertexAddEvent([e],t,i),this._addToSelection(e)}else this.selectedHandles.includes(e)||(this._clearSelection(),this._addToSelection(e));this._setUpGeometryHelper(),this._saveSnappingContextForHandle(e,t),this._onHandleMove(e,i,s,t),this._emitReshapeStartEvent(e)}_onGraphicMoveCallback(t){const{graphic:e,dx:i,dy:s}=t;this._totalDx+=i,this._totalDy+=s,e===this.graphic?(this._syncGraphicsWithGeometry(),this._emitMoveEvent(i,s)):(this._onHandleMove(e,i,s,t),this._emitReshapeEvent(e))}_onGraphicMoveStopCallback(t){const{graphic:e,dx:i,dy:s}=t;if(this._totalDx+=i,this._totalDy+=s,e===this.graphic){this._syncGraphicsWithGeometry();for(const t of[].concat(this.handleGraphics,this.midpointGraphics))t.visible=!0;this._emitMoveStopEvent(),this._resetGraphicStateVars()}else this._onHandleMove(e,i,s,t),this._resetSnappingStateVars(),this._isMidpoint(e)&&this.refresh(),this._emitReshapeStopEvent(e),this._resetGraphicStateVars()}_syncGraphicsWithGeometry(){const t=this.graphic.geometry,e="polyline"===t.type?t.paths:t.rings;this._updateHandleGraphicLocations(e),this._updateMidpointGraphicLocations(e)}_updateHandleGraphicLocations(t){for(const e of this.handleGraphics){const{pathIndex:i,pointIndex:s}=e.attributes,[a,r]=t[i][s];e.set("geometry",new h.a(a,r,this.view.spatialReference))}}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:a}=e.attributes,[r,o]=t[i][s],[n,l]=t[i][a],[p,d]=Object(c.d)([r,o],[n,l]);e.geometry=new h.a({x:p,y:d,spatialReference:this.view.spatialReference})}}_getVertexFromEditGeometry(t){var e;const{pathIndex:i,pointIndex:s}=t.attributes;return null==(e=this._geometryHelper)?void 0:e.editGeometry.components[i].vertices[s]}_onHandleMove(t,e,i,s){Object(a.a)(this._snappingTask);const r=t.geometry,o="graphic-move-stop"===s.type;if(Object(a.k)(this.snappingManager)&&1===this.selectedHandles.length&&!o){const s=this.snappingManager;this._stagedVertex=s.update(r,this._snappingContext),this._syncGeometryAfterHandleMove(t,new h.a(this._stagedVertex),e,i,o),this._emitReshapeEvent(t),this._snappingTask=Object(n.h)((async a=>{const n=await s.snap(r,this._snappingContext,a);n.valid&&(this._stagedVertex=n.apply(),this._syncGeometryAfterHandleMove(t,new h.a(this._stagedVertex),e,i,o),this._emitReshapeEvent(t))}))}else{const n=Object(a.k)(this._stagedVertex)?new h.a(this._stagedVertex):r;this._syncGeometryAfterHandleMove(t,n,e,i,o),"graphic-move"===s.type&&this._emitReshapeEvent(t)}}async _syncGeometryAfterHandleMove(t,e,i,s,a=!1){const{x:r,y:o}=e,n=this._getUpdatedGeometryAfterHandleMove(t,e);let h="polyline"===n.type?n.paths:n.rings;this._isHandle(t)&&(h=this._moveRelatedCoordinates(h,t,r,o),h=this._moveSelectedHandleCoordinates(h,t,i,s,"polygon"===n.type),this._updateMidpointGraphicLocations(h)),this.graphic.geometry=n,this._syncEditGeometryAfterHandleMove(t,r,o),a&&(t.geometry=e)}_getUpdatedGeometryAfterHandleMove(t,e){const{x:i,y:s}=e,r=Object(a.q)(this.graphic.geometry).clone(),o="polyline"===r.type?r.paths:r.rings,{pathIndex:n,pointIndex:h}=t.attributes,c=o[n].length-1;return o[n][h]=[i,s],"polygon"===r.type&&(0===h?o[n][c]=[i,s]:h===c&&(o[n][0]=[i,s])),r}_moveRelatedCoordinates(t,e,i,s){const{relatedGraphicIndices:a}=e.attributes;for(const r of a){const a=this.handleGraphics[r],{pathIndex:o,pointIndex:n}=a.attributes;t[o][n]=[i,s],a.geometry=e.geometry}return t}_moveSelectedHandleCoordinates(t,e,i,s,a){for(const r of this.selectedHandles)if(r!==e){const{pathIndex:e,pointIndex:o,relatedGraphicIndices:n}=r.attributes,h=Object(G.a)(r.geometry,i,s,this.view),c=t[e].length-1;t[e][o]=[h.x,h.y],r.geometry=h,a&&(0===o?t[e][c]=[h.x,h.y]:o===c&&(t[e][0]=[h.x,h.y]));for(const i of n){const e=this.handleGraphics[i],{pathIndex:s,pointIndex:a}=e.attributes;t[s][a]=[h.x,h.y],e.geometry=h}}return t}_syncEditGeometryAfterHandleMove(t,e,i){const s=this._getVertexFromEditGeometry(t),a=e-s.pos[0],r=i-s.pos[1];this._geometryHelper.moveVertices([s],a,r,0)}_onGraphicPointerOverCallback(t){const e=t.graphic;this._isHandle(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._isHandle(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default"}_createHandleFromMidpoint(t){const{_graphicAttributes:e}=this,i=[],s=Object(a.q)(this.graphic.geometry).clone(),{pathIndex:r,pointIndexStart:o,pointIndexEnd:n}=t.attributes,{x:h,y:c}=t.geometry,l=0===n?o+1:n,p="polyline"===s.type?s.paths:s.rings;return p[r].splice(l,0,[h,c]),t.attributes={...e,pathIndex:r,pointIndex:l,relatedGraphicIndices:[]},i.push({coordinates:p[r][l],componentIndex:r,vertexIndex:l}),this.graphic.geometry=s,i}_removeHandles(t){const e=Object(a.q)(this.graphic.geometry).clone(),i="polygon"===e.type?e.rings:e.paths,s=[];t instanceof d.a&&(t=[t]);for(const a of t){const{x:t,y:e}=a.geometry;for(let a=0;a<i.length;a++){const r=i[a];for(let o=0;o<r.length;o++){const[n,h]=r[o];t===n&&e===h&&(s.push({coordinates:i[a][o],componentIndex:a,vertexIndex:o}),i[a].splice(Number(o),1))}}}if("polygon"===e.type)for(const a of i){const[t,e]=a[0],[s,r]=a[a.length-1];(1===a.length||a.length<3&&t===s&&e===r)&&i.splice(i.indexOf(a),1),a.length>2&&(t!==s||e!==r)&&a.push(a[0])}else for(const a of i)1===a.length&&i.splice(i.indexOf(a),1);return this.graphic.geometry=e,s}_addToSelection(t){t instanceof d.a&&(t=[t]);for(const e of t)e.symbol=this.symbols.vertices.selected;this._set("selectedHandles",this.selectedHandles.concat(t)),this._emitSelectEvent(t)}_removeFromSelection(t,e){const{vertices:i}=this.symbols,s=e?i.hover:i.default;t instanceof d.a&&(t=[t]);for(const a of t)this.selectedHandles.splice(this.selectedHandles.indexOf(a),1),this._set("selectedHandles",this.selectedHandles),a.set("symbol",s);this._emitDeselectEvent(t)}_clearSelection(){if(this.selectedHandles.length){const t=this.selectedHandles;for(const e of this.selectedHandles)e.set("symbol",this.symbols.vertices.default);this._set("selectedHandles",[]),this._emitDeselectEvent(t)}}_keyDownHandler(t){V.removeVertex.includes(t.key)&&!t.repeat&&this.selectedHandles.length&&this._removeVertex(this.selectedHandles)}_removeVertex(t){if("polygon"===this.graphic.geometry.type&&this.handleGraphics.length<4||this.handleGraphics.length<3)return;const e=this.graphic.clone();t instanceof d.a&&(t=[t]);const i=this._removeHandles(t);this.refresh(),this._emitVertexRemoveEvent(t,e,i)}_isHandle(t){return this.handleGraphics.includes(t)}_isSelected(t){return this._isHandle(t)&&this.selectedHandles.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_emitMoveStartEvent(t,e){const i=new k(this.graphic,t,e);this.emit("move-start",i),this.callbacks.onMoveStart&&this.callbacks.onMoveStart(i)}_emitMoveEvent(t,e){const i=new M(this.graphic,t,e);this.emit("move",i),this.callbacks.onMove&&this.callbacks.onMove(i)}_emitMoveStopEvent(){const t=new H(this.graphic,this._totalDx,this._totalDy);this.emit("move-stop",t),this.callbacks.onMoveStop&&this.callbacks.onMoveStop(t)}_emitReshapeStartEvent(t){const e=new j(this.graphic,t,this.selectedHandles);this.emit("reshape-start",e),this.callbacks.onReshapeStart&&this.callbacks.onReshapeStart(e)}_emitReshapeEvent(t){const e=new w(this.graphic,t,this.selectedHandles);this.emit("reshape",e),this.callbacks.onReshape&&this.callbacks.onReshape(e)}_emitReshapeStopEvent(t){const e=new S(this.graphic,t,this.selectedHandles);this.emit("reshape-stop",e),this.callbacks.onReshapeStop&&this.callbacks.onReshapeStop(e)}_emitSelectEvent(t){const e=new E(t);this.emit("select",e),this.callbacks.onVertexSelect&&this.callbacks.onVertexSelect(e)}_emitDeselectEvent(t){const e=new C(t);this.emit("deselect",e),this.callbacks.onVertexDeselect&&this.callbacks.onVertexDeselect(e)}_emitVertexAddEvent(t,e,i){const s=new D(t,this.graphic,e,i);this.emit("vertex-add",s),this.callbacks.onVertexAdd&&this.callbacks.onVertexAdd(s)}_emitVertexRemoveEvent(t,e,i){const s=new I(t,this.graphic,e,i);this.emit("vertex-remove",s),this.callbacks.onVertexRemove&&this.callbacks.onVertexRemove(s)}};Object(s.a)([Object(r.b)()],A.prototype,"callbacks",void 0),Object(s.a)([Object(r.b)()],A.prototype,"enableMidpoints",void 0),Object(s.a)([Object(r.b)()],A.prototype,"graphic",void 0),Object(s.a)([Object(r.b)({readOnly:!0})],A.prototype,"handleGraphics",void 0),Object(s.a)([Object(r.b)()],A.prototype,"layer",void 0),Object(s.a)([Object(r.b)({readOnly:!0})],A.prototype,"midpointGraphics",void 0),Object(s.a)([Object(r.b)()],A.prototype,"midpointSymbol",void 0),Object(s.a)([Object(r.b)({readOnly:!0})],A.prototype,"selectedHandles",void 0),Object(s.a)([Object(r.b)()],A.prototype,"snappingManager",void 0),Object(s.a)([Object(r.b)({readOnly:!0})],A.prototype,"state",null),Object(s.a)([Object(r.b)({value:P})],A.prototype,"symbols",null),Object(s.a)([Object(r.b)({readOnly:!0})],A.prototype,"type",void 0),Object(s.a)([Object(r.b)()],A.prototype,"view",void 0),A=Object(s.a)([Object(o.a)("esri.views.draw.support.Reshape")],A);var T=A;e.default=T},469:function(t,e,i){"use strict";function s(t,e){return e?"xoffset"in e&&e.xoffset?Math.max(t,Math.abs(e.xoffset)):"yoffset"in e&&e.yoffset?Math.max(t,Math.abs(e.yoffset||0)):t:t}function a(t,e){return"number"==typeof t?t:t&&t.stops&&t.stops.length?function(t){let e=0,i=0;for(let s=0;s<t.length;s++){const a=t[s].size;"number"==typeof a&&(e+=a,i++)}return e/i}(t.stops):e}function r(t,e){if(!e)return t;const i=e.filter((t=>"size"===t.type)).map((e=>{const{maxSize:i,minSize:s}=e;return(a(i,t)+a(s,t))/2}));let s=0;const r=i.length;if(0===r)return t;for(let a=0;a<r;a++)s+=i[a];const o=Math.floor(s/r);return Math.max(o,t)}function o(t){const e=t&&t.renderer,i="touch"===(t&&t.event&&t.event.pointerType)?9:6;if(!e)return i;const a="visualVariables"in e?r(i,e.visualVariables):i;if("simple"===e.type)return s(a,e.symbol);if("unique-value"===e.type){let t=a;return e.uniqueValueInfos.forEach((e=>{t=s(t,e.symbol)})),t}if("class-breaks"===e.type){let t=a;return e.classBreakInfos.forEach((e=>{t=s(t,e.symbol)})),t}return e.type,a}i.d(e,"a",(function(){return o}))},531:function(t,e,i){"use strict";i.d(e,"a",(function(){return n})),i.d(e,"b",(function(){return h}));var s=i(138),a=i(149),r=(i(150),i(163)),o=i(469);function n(t,e,i,o=new a.a){let n;if("2d"===i.type)n=e*i.resolution;else if("3d"===i.type){const a=i.overlayPixelSizeInMapUnits(t),o=i.basemapSpatialReference;n=Object(s.k)(o)&&!o.equals(i.spatialReference)?Object(r.f)(o)/Object(r.f)(i.spatialReference):e*a}const h=t.x-n,c=t.y-n,l=t.x+n,p=t.y+n,{spatialReference:d}=i;return o.xmin=Math.min(h,l),o.ymin=Math.min(c,p),o.xmax=Math.max(h,l),o.ymax=Math.max(c,p),o.spatialReference=d,o}function h(t,e,i){const a=i.toMap(t);return!Object(s.j)(a)&&n(a,Object(o.a)(),i,c).intersects(e)}const c=new a.a},700:function(t,e,i){"use strict";i.d(e,"a",(function(){return f}));var s=i(131),a=(i(129),i(138)),r=i(130),o=(i(137),i(134)),n=i(133),h=(i(132),i(135),i(136),i(146)),c=i(175),l=i(153),p=i(152),d=i(158),v=i(274),b=i(260),y=i(292),g=i(181),u=i(386),_=i(531);const m=r.a.getLogger("esri.views.interactive.GraphicManipulator");let f=class extends h.a{constructor(t){super(t),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.events=new c.a.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null}set graphic(t){"mesh"!==Object(a.i)(t.geometry,"type")?(this._circleCollisionCache=null,this._originalSymbol=t.symbol,this._set("graphic",t),this.attachSymbolChanged()):m.error("Mesh geometries are not supported")}get elevationInfo(){const t="elevationInfo"in this.graphic.layer&&this.graphic.layer.elevationInfo,e=Object(u.e)(this.graphic),i=t?t.offset:0;return new b.a({mode:e,offset:i})}set focusedSymbol(t){t!==this._get("focusedSymbol")&&(this._set("focusedSymbol",t),this._updateGraphicSymbol(),this._circleCollisionCache=null)}grabbableForEvent(){return!0}set grabbing(t){t!==this._get("grabbing")&&(this._set("grabbing",t),this._updateGraphicSymbol())}set hovering(t){t!==this._get("hovering")&&(this._set("hovering",t),this._updateGraphicSymbol())}set selected(t){t!==this._get("selected")&&(this._set("selected",t),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:t?"select":"deselect"}))}get _focused(){return this._get("hovering")||this._get("grabbing")}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null)}intersectionDistance(t){const e=this.graphic;if(!1===e.visible)return null;const i=e.geometry;if(Object(a.j)(i))return null;const s=this._get("focusedSymbol"),r=Object(a.k)(s)?s:e.symbol;return"2d"===this.view.type?this._intersectDistance2D(this.view,t,i,r):this._intersectDistance3D(this.view,t,e)}attach(){this.attachSymbolChanged(),Object(a.k)(this.layer)&&this.layer.add(this.graphic)}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),Object(a.k)(this.layer)&&this.layer.remove(this.graphic)}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=this.graphic.watch("symbol",(t=>{Object(a.k)(t)&&t!==this.focusedSymbol&&t!==this._originalSymbol&&(this._originalSymbol=t,this._focused&&Object(a.k)(this.focusedSymbol)&&(this.graphic.symbol=this.focusedSymbol))}),!0)}detachSymbolChanged(){Object(a.k)(this._graphicSymbolChangedHandle)&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null)}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&Object(a.k)(this.focusedSymbol)?this.focusedSymbol:this._originalSymbol}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol}_intersectDistance2D(t,e,i,s){if(s=s||Object(y.e)(i),Object(a.j)(s))return null;let r=this._circleCollisionCache;if("point"!==i.type||"simple-marker"!==s.type)return Object(_.b)(e,i,t)?1:null;if(Object(a.j)(r)||!r.originalPoint.equals(i)){const e=i,a=t.spatialReference;if(Object(v.b)(e.spatialReference,a)){const t=Object(v.j)(e,a);r={originalPoint:e.clone(),mapPoint:t,radiusPx:Object(l.h)(s.size)},this._circleCollisionCache=r}}if(Object(a.k)(r)){const i=Object(l.j)(e,O),a=t.toScreen(r.mapPoint),o=r.radiusPx,n=a.x+Object(l.h)(s.xoffset),h=a.y-Object(l.h)(s.yoffset);return Object(g.j)(i,[n,h])<o*o?1:null}return null}_intersectDistance3D(t,e,i){const s=t.toMap(e,{include:[i]});return s&&Object(v.o)(s,G,t.renderSpatialReference)?Object(d.n)(G,t.state.camera.eye):null}};Object(s.a)([Object(o.b)({constructOnly:!0,nonNullable:!0})],f.prototype,"graphic",null),Object(s.a)([Object(o.b)({readOnly:!0})],f.prototype,"elevationInfo",null),Object(s.a)([Object(o.b)({constructOnly:!0,nonNullable:!0})],f.prototype,"view",void 0),Object(s.a)([Object(o.b)({value:null})],f.prototype,"focusedSymbol",null),Object(s.a)([Object(o.b)({constructOnly:!0})],f.prototype,"layer",void 0),Object(s.a)([Object(o.b)()],f.prototype,"interactive",void 0),Object(s.a)([Object(o.b)()],f.prototype,"selectable",void 0),Object(s.a)([Object(o.b)()],f.prototype,"grabbable",void 0),Object(s.a)([Object(o.b)({value:!1})],f.prototype,"grabbing",null),Object(s.a)([Object(o.b)()],f.prototype,"dragging",void 0),Object(s.a)([Object(o.b)()],f.prototype,"hovering",null),Object(s.a)([Object(o.b)({value:!1})],f.prototype,"selected",null),Object(s.a)([Object(o.b)()],f.prototype,"cursor",void 0),f=Object(s.a)([Object(n.a)("esri.views.interactive.GraphicManipulator")],f);const G=Object(p.e)(),O=Object(l.g)()},968:function(t,e,i){"use strict";i.r(e);var s=i(131),a=(i(129),i(141)),r=i(138),o=(i(130),i(137),i(134)),n=i(133),h=(i(132),i(135),i(136),i(175)),c=i(166),l=i(161),p=i(380),d=i(413),v=i(615),b=i(700);class y{constructor(t,e,i,s,a){this.graphic=t,this.index=e,this.x=i,this.y=s,this.viewEvent=a,this.type="graphic-click"}}class g{constructor(t,e,i,s,a){this.graphic=t,this.index=e,this.x=i,this.y=s,this.viewEvent=a,this.type="graphic-double-click"}}class u{constructor(t,e,i,s,a,r,o,n,h,c){this.graphic=t,this.allGraphics=e,this.index=i,this.x=s,this.y=a,this.dx=r,this.dy=o,this.totalDx=n,this.totalDy=h,this.viewEvent=c,this.defaultPrevented=!1,this.type="graphic-move-start"}preventDefault(){this.defaultPrevented=!0}}class _{constructor(t,e,i,s,a,r,o,n,h,c){this.graphic=t,this.allGraphics=e,this.index=i,this.x=s,this.y=a,this.dx=r,this.dy=o,this.totalDx=n,this.totalDy=h,this.viewEvent=c,this.defaultPrevented=!1,this.type="graphic-move"}preventDefault(){this.defaultPrevented=!0}}class m{constructor(t,e,i,s,a,r,o,n,h,c){this.graphic=t,this.allGraphics=e,this.index=i,this.x=s,this.y=a,this.dx=r,this.dy=o,this.totalDx=n,this.totalDy=h,this.viewEvent=c,this.defaultPrevented=!1,this.type="graphic-move-stop"}preventDefault(){this.defaultPrevented=!0}}class f{constructor(t,e,i,s,a){this.graphic=t,this.index=e,this.x=i,this.y=s,this.viewEvent=a,this.type="graphic-pointer-over"}}class G{constructor(t,e,i,s,a){this.graphic=t,this.index=e,this.x=i,this.y=s,this.viewEvent=a,this.type="graphic-pointer-out"}}class O{constructor(t,e,i,s,a){this.graphic=t,this.index=e,this.x=i,this.y=s,this.viewEvent=a,this.type="graphic-pointer-down"}}class x{constructor(t,e,i,s,a){this.graphic=t,this.index=e,this.x=i,this.y=s,this.viewEvent=a,this.type="graphic-pointer-up"}}let j=class extends h.a.EventedAccessor{constructor(t){super(t),this._activeGraphic=null,this._dragEvent=null,this._handles=new c.a,this._hoverGraphic=null,this._initialDragGeometry=null,this._viewHandles=new c.a,this._manipulators=[],this.type="graphic-mover",this.callbacks={onGraphicClick(){},onGraphicDoubleClick(){},onGraphicMoveStart(){},onGraphicMove(){},onGraphicMoveStop(){},onGraphicPointerOver(){},onGraphicPointerOut(){},onGraphicPointerDown(){},onGraphicPointerUp(){}},this.enableMoveAllGraphics=!1,this.graphics=[],this.view=null}initialize(){this._setUpManipulators(),this._handles.add([Object(l.d)(this,["graphics","graphics.length"],(()=>{this._setUpManipulators()})),Object(l.j)(this,"view.ready",(()=>{this._viewHandles.add([this.view.on("immediate-click",(t=>this._clickHandler(t)),p.b.TOOL),this.view.on("double-click",(t=>this._doubleClickHandler(t)),p.b.TOOL),this.view.on("pointer-down",(t=>this._pointerDownHandler(t)),p.b.TOOL),this.view.on("pointer-move",(t=>this._pointerMoveHandler(t)),p.b.TOOL),this.view.on("pointer-up",(t=>this._pointerUpHandler(t)),p.b.TOOL),this.view.on("drag",(t=>this._dragHandler(t)),p.b.TOOL),this.view.on("key-down",(t=>this._keyDownHandler(t)),p.b.TOOL)])}))])}destroy(){this.reset(),this._manipulators.forEach((t=>t.destroy())),this._manipulators=null,this._viewHandles.removeAll(),this._handles.removeAll()}get state(){const t=!!this.get("view.ready"),e=!!this.get("graphics.length"),i=this._activeGraphic;return t&&e?i?"moving":"active":t?"ready":"disabled"}reset(){this._activeGraphic=null,this._hoverGraphic=null,this._dragEvent=null}updateGeometry(t,e){const i=this.graphics[t];i&&i.set("geometry",e)}_clickHandler(t){const e=this._findTargetGraphic(Object(d.a)(t));if(e){const i=new y(e,this.graphics.indexOf(e),t.x,t.y,t);this.emit("graphic-click",i),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(i)}}_doubleClickHandler(t){const e=this._findTargetGraphic(Object(d.a)(t));if(e){const i=new g(e,this.graphics.indexOf(e),t.x,t.y,t);this.emit("graphic-double-click",i),this.callbacks.onGraphicDoubleClick&&this.callbacks.onGraphicDoubleClick(i)}}_pointerDownHandler(t){const e=this._findTargetGraphic(Object(d.a)(t));if(e){this._activeGraphic=e;const{x:i,y:s}=t,a=new O(e,this.graphics.indexOf(e),i,s,t);this.emit("graphic-pointer-down",a),this.callbacks.onGraphicPointerDown&&this.callbacks.onGraphicPointerDown(a)}else this._activeGraphic=null}_pointerUpHandler(t){if(this._activeGraphic){const{x:e,y:i}=t,s=this.graphics.indexOf(this._activeGraphic),a=new x(this._activeGraphic,s,e,i,t);this.emit("graphic-pointer-up",a),this.callbacks.onGraphicPointerUp&&this.callbacks.onGraphicPointerUp(a)}}_pointerMoveHandler(t){if(this._dragEvent)return;const e=this._findTargetGraphic(Object(d.a)(t));if(e){const{x:i,y:s}=t;if(this._hoverGraphic){if(this._hoverGraphic===e)return;const a=this.graphics.indexOf(this._hoverGraphic),r=new G(this.graphics[a],a,i,s,t);this._hoverGraphic=null,this.emit("graphic-pointer-out",r),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(r)}const a=this.graphics.indexOf(e),r=new f(e,a,i,s,t);return this._hoverGraphic=e,this.emit("graphic-pointer-over",r),void(this.callbacks.onGraphicPointerOver&&this.callbacks.onGraphicPointerOver(r))}if(this._hoverGraphic){const{x:e,y:i}=t,s=this.graphics.indexOf(this._hoverGraphic),a=new G(this.graphics[s],s,e,i,t);this._hoverGraphic=null,this.emit("graphic-pointer-out",a),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(a)}}_dragHandler(t){if("start"!==t.action&&!this._dragEvent||!this._activeGraphic||!this._activeGraphic.geometry)return;t.stopPropagation();const{action:e,x:i,y:s}=t,r=this.graphics.indexOf(this._activeGraphic),o=this._activeGraphic.geometry,n=this._dragEvent?i-this._dragEvent.x:0,h=this._dragEvent?s-this._dragEvent.y:0,c=i-t.origin.x,l=s-t.origin.y;if(this._activeGraphic.geometry=Object(v.a)(o,n,h,this.view),this.enableMoveAllGraphics&&this.graphics.forEach((t=>{t!==this._activeGraphic&&(t.geometry=Object(v.a)(t.geometry,n,h,this.view))})),this._dragEvent=t,"start"===e){this._initialDragGeometry=Object(a.a)(o);const e=new u(this._activeGraphic,this.graphics,r,i,s,n,h,c,l,t);this.emit("graphic-move-start",e),this.callbacks.onGraphicMoveStart&&this.callbacks.onGraphicMoveStart(e),e.defaultPrevented&&this._activeGraphic.set("geometry",o)}else if("update"===e){const e=new _(this._activeGraphic,this.graphics,r,i,s,n,h,c,l,t);this.emit("graphic-move",e),this.callbacks.onGraphicMove&&this.callbacks.onGraphicMove(e),e.defaultPrevented&&this._activeGraphic.set("geometry",o)}else{const e=new m(this._activeGraphic,this.graphics,r,i,s,n,h,c,l,t);this._dragEvent=null,this._activeGraphic=null,this.emit("graphic-move-stop",e),this.callbacks.onGraphicMoveStop&&this.callbacks.onGraphicMoveStop(e),e.defaultPrevented&&this.graphics[r].set("geometry",this._initialDragGeometry),this._initialDragGeometry=null}}_keyDownHandler(t){"a"!==t.key&&"d"!==t.key&&"n"!==t.key||"moving"!==this.state||t.stopPropagation()}_findTargetGraphic(t){let e=null,i=Number.MAX_VALUE;return this._manipulators.forEach((s=>{const a=s.intersectionDistance(t);Object(r.k)(a)&&a<i&&(i=a,e=s.graphic)})),e}_setUpManipulators(){const{graphics:t,view:e}=this;this._manipulators.forEach((t=>t.destroy())),this._manipulators=null!=t&&t.length?t.map((t=>new b.a({graphic:t,view:e}))):[]}};Object(s.a)([Object(o.b)()],j.prototype,"_activeGraphic",void 0),Object(s.a)([Object(o.b)({readOnly:!0})],j.prototype,"type",void 0),Object(s.a)([Object(o.b)()],j.prototype,"callbacks",void 0),Object(s.a)([Object(o.b)()],j.prototype,"enableMoveAllGraphics",void 0),Object(s.a)([Object(o.b)()],j.prototype,"graphics",void 0),Object(s.a)([Object(o.b)({readOnly:!0})],j.prototype,"state",null),Object(s.a)([Object(o.b)()],j.prototype,"view",void 0),j=Object(s.a)([Object(n.a)("esri.views.draw.support.GraphicMover")],j);var w=j;e.default=w}}]);
//# sourceMappingURL=151.7b00fbad.chunk.js.map