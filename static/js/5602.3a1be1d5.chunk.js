"use strict";(globalThis.webpackChunkimaps=globalThis.webpackChunkimaps||[]).push([[5602,9818],{16054:(e,t,i)=>{i.d(t,{Z:()=>r});var n=i(18759);class r{constructor(e,t){this._storage=new n.WJ,this._storage.maxSize=e,t&&this._storage.registerRemoveFunc("",t)}put(e,t,i){this._storage.put(e,t,i,1)}pop(e){return this._storage.pop(e)}get(e){return this._storage.get(e)}clear(){this._storage.clearAll()}destroy(){this._storage.destroy()}get maxSize(){return this._storage.maxSize}set maxSize(e){this._storage.maxSize=e}}},50689:(e,t,i)=>{i.d(t,{aX:()=>_,or:()=>C,hR:()=>w});var n=i(42265),r=i(10064),s=i(32718),o=i(92026),a=i(80885),l=i(29909),c=i(76335),f=i(92975),u=i(81753),h=(i(59486),i(76200)),p=i(35995),d=i(77981);async function m(e,t,i){const n="string"==typeof e?(0,p.mN)(e):e,r=t[0].spatialReference,s=(0,d.Ji)(t[0]),o={...i,query:{...n.query,f:"json",sr:r.wkid?r.wkid:JSON.stringify(r),geometries:JSON.stringify((a=t,{geometryType:(0,d.Ji)(a[0]),geometries:a.map((e=>e.toJSON()))}))}};var a;return function(e,t,i){const n=(0,d.q9)(t);return e.map((e=>{const t=n.fromJSON(e);return t.spatialReference=i,t}))}((await(0,h.default)(n.path+"/simplify",o)).data,s,r)}const y=s.Z.getLogger("esri.geometry.support.normalizeUtils");function g(e){return"polygon"===e[0].type}function x(e){return"polyline"===e[0].type}function w(e,t){if(!(e instanceof l.Z||e instanceof a.Z)){const e="straightLineDensify: the input geometry is neither polyline nor polygon";throw y.error(e),new r.Z(e)}const i=(0,c.x3)(e),n=[];for(const r of i){const e=[];n.push(e),e.push([r[0][0],r[0][1]]);for(let i=0;i<r.length-1;i++){const n=r[i][0],s=r[i][1],o=r[i+1][0],a=r[i+1][1],l=Math.sqrt((o-n)*(o-n)+(a-s)*(a-s)),c=(a-s)/l,f=(o-n)/l,u=l/t;if(u>1){for(let a=1;a<=u-1;a++){const i=a*t,r=f*i+n,o=c*i+s;e.push([r,o])}const i=(l+Math.floor(u-1)*t)/2,r=f*i+n,o=c*i+s;e.push([r,o])}e.push([o,a])}}return function(e){return"polygon"===e.type}(e)?new a.Z({rings:n,spatialReference:e.spatialReference}):new l.Z({paths:n,spatialReference:e.spatialReference})}function I(e,t,i){if(t){const t=w(e,1e6);e=(0,u.Sx)(t,!0)}return i&&(e=(0,c.Sy)(e,i)),e}function b(e,t,i){if(Array.isArray(e)){const n=e[0];if(n>t){const i=(0,c.XZ)(n,t);e[0]=n+i*(-2*t)}else if(n<i){const t=(0,c.XZ)(n,i);e[0]=n+t*(-2*i)}}else{const n=e.x;if(n>t){const i=(0,c.XZ)(n,t);e=e.clone().offset(i*(-2*t),0)}else if(n<i){const t=(0,c.XZ)(n,i);e=e.clone().offset(t*(-2*i),0)}}return e}function v(e,t){let i=-1;for(let n=0;n<t.cutIndexes.length;n++){const r=t.cutIndexes[n],s=t.geometries[n],o=(0,c.x3)(s);for(let e=0;e<o.length;e++){const t=o[e];t.some((i=>{if(i[0]<180)return!0;{let i=0;for(let e=0;e<t.length;e++){const n=t[e][0];i=n>i?n:i}i=Number(i.toFixed(9));const n=-360*(0,c.XZ)(i,180);for(let r=0;r<t.length;r++){const t=s.getPoint(e,r);s.setPoint(e,r,t.clone().offset(n,0))}return!0}}))}if(r===i){if(g(e))for(const t of(0,c.x3)(s))e[r]=e[r].addRing(t);else if(x(e))for(const t of(0,c.x3)(s))e[r]=e[r].addPath(t)}else i=r,e[r]=s}return e}async function _(e,t,i){if(!Array.isArray(e))return _([e],t);t&&"string"!=typeof t&&y.warn("normalizeCentralMeridian()","The url object is deprecated, use the url string instead");const r="string"==typeof t?t:t?.url??n.Z.geometryServiceUrl;let s,g,x,w,C,S,R,T,k=0;const P=[],M=[];for(const n of e)if((0,o.Wi)(n))M.push(n);else if(s||(s=n.spatialReference,g=(0,f.C5)(s),x=s.isWebMercator,S=x?102100:4326,w=c.UZ[S].maxX,C=c.UZ[S].minX,R=c.UZ[S].plus180Line,T=c.UZ[S].minus180Line),g)if("mesh"===n.type)M.push(n);else if("point"===n.type)M.push(b(n.clone(),w,C));else if("multipoint"===n.type){const e=n.clone();e.points=e.points.map((e=>b(e,w,C))),M.push(e)}else if("extent"===n.type){const e=n.clone()._normalize(!1,!1,g);M.push(e.rings?new a.Z(e):e)}else if(n.extent){const e=n.extent,t=(0,c.XZ)(e.xmin,C)*(2*w);let i=0===t?n.clone():(0,c.Sy)(n.clone(),t);e.offset(t,0),e.intersects(R)&&e.xmax!==w?(k=e.xmax>k?e.xmax:k,i=I(i,x),P.push(i),M.push("cut")):e.intersects(T)&&e.xmin!==C?(k=e.xmax*(2*w)>k?e.xmax*(2*w):k,i=I(i,x,360),P.push(i),M.push("cut")):M.push(i)}else M.push(n.clone());else M.push(n);let F=(0,c.XZ)(k,w),O=-90;const B=F,z=new l.Z;for(;F>0;){const e=360*F-180;z.addPath([[e,O],[e,-1*O]]),O*=-1,F--}if(P.length>0&&B>0){const t=v(P,await async function(e,t,i,n){const r="string"==typeof e?(0,p.mN)(e):e,s=t[0].spatialReference,o={...n,query:{...r.query,f:"json",sr:JSON.stringify(s),target:JSON.stringify({geometryType:(0,d.Ji)(t[0]),geometries:t}),cutter:JSON.stringify(i)}},a=await(0,h.default)(r.path+"/cut",o),{cutIndexes:l,geometries:c=[]}=a.data;return{cutIndexes:l,geometries:c.map((e=>{const t=(0,d.im)(e);return t.spatialReference=s,t}))}}(r,P,z,i)),n=[],s=[];for(let i=0;i<M.length;i++){const r=M[i];if("cut"!==r)s.push(r);else{const r=t.shift(),a=e[i];(0,o.pC)(a)&&"polygon"===a.type&&a.rings&&a.rings.length>1&&r.rings.length>=a.rings.length?(n.push(r),s.push("simplify")):s.push(x?(0,u.$)(r):r)}}if(!n.length)return s;const a=await m(r,n,i),l=[];for(let e=0;e<s.length;e++){const t=s[e];"simplify"!==t?l.push(t):l.push(x?(0,u.$)(a.shift()):a.shift())}return l}const Z=[];for(let n=0;n<M.length;n++){const e=M[n];if("cut"!==e)Z.push(e);else{const e=P.shift();Z.push(!0===x?(0,u.$)(e):e)}}return Z}function C(e,t){const i=(0,f.C5)(t);if(i){const[t,n]=i.valid,r=n-t;if(e<t)for(;e<t;)e+=r;if(e>n)for(;e>n;)e-=r}return e}},76335:(e,t,i)=>{i.d(t,{Sy:()=>l,UZ:()=>o,XZ:()=>a,x3:()=>c});var n=i(29909),r=i(78952),s=i(77981);const o={102100:{maxX:20037508.342788905,minX:-20037508.342788905,plus180Line:new n.Z({paths:[[[20037508.342788905,-20037508.342788905],[20037508.342788905,20037508.342788905]]],spatialReference:r.Z.WebMercator}),minus180Line:new n.Z({paths:[[[-20037508.342788905,-20037508.342788905],[-20037508.342788905,20037508.342788905]]],spatialReference:r.Z.WebMercator})},4326:{maxX:180,minX:-180,plus180Line:new n.Z({paths:[[[180,-180],[180,180]]],spatialReference:r.Z.WGS84}),minus180Line:new n.Z({paths:[[[-180,-180],[-180,180]]],spatialReference:r.Z.WGS84})}};function a(e,t){return Math.ceil((e-t)/(2*t))}function l(e,t){const i=c(e);for(const n of i)for(const e of n)e[0]+=t;return e}function c(e){return(0,s.oU)(e)?e.rings:e.paths}},93060:(e,t,i)=>{i.r(t),i.d(t,{default:()=>Ve});var n=i(27366),r=i(44055),s=i(45918),o=i(10064),a=i(92026),l=i(97642),c=i(66978),f=i(94172),u=i(49861),h=(i(63780),i(93169)),p=i(25243),d=i(27135),m=i(38511),y=i(69912),g=i(30651),x=i(6693),w=i(46671),I=(i(59486),i(76200)),b=i(32718),v=i(8025),_=i(92975),C=i(25899),S=i(45948),R=i(86591),T=i(79586),k=i(22824),P=i(21969),M=i(64145),F=i(46584),O=i(55343),B=i(55185),z=i(53866),Z=i(78952);const D=b.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),N=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(e){this._set("url",(0,C.Nm)(e,D))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if((0,a.Wi)(e))return null;const i=this._rasterJobHandler.instance,n=this.rasterInfo.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:n},t):(0,M.KC)(e,n)}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,B.GE)(e.meshType,e.simulationSettings,e.flowData,(0,a.pC)(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo;if((0,a.Wi)(t))return e;let i=e.multidimensionalDefinition||this.multidimensionalDefinition;!(0,a.Wi)(i)&&i.length||(i=(0,P.Tj)(this.raster.rasterInfo));const n=e.timeExtent||this.timeExtent;if((0,a.pC)(i)&&(0,a.pC)(n)&&((0,a.pC)(n.start)||(0,a.pC)(n.end))){i=i.map((e=>e.clone()));const r=t.variables.find((e=>{let{name:t}=e;return t===i[0].variableName}))?.dimensions?.find((e=>{let{name:t}=e;return"StdTime"===t})),s=i.find((e=>{let{dimensionName:t}=e;return"StdTime"===t}));if(!r||!s)return{...e,multidimensionalDefinition:null};const{start:o,end:l}=n,c=(0,a.Wi)(o)?null:o.getTime(),f=(0,a.Wi)(l)?null:l.getTime(),u=c??f,h=f??c;if((0,a.pC)(r.values)){const e=r.values.filter((e=>{if(Array.isArray(e)){if(u===h)return e[0]<=u&&e[1]>=u;const t=e[0]<=u&&e[1]>u||e[0]<h&&e[1]>=h,i=e[0]>=u&&e[1]<=h||e[0]<u&&e[1]>h;return t||i}return u===h?e===u:e>=u&&e<=h}));if(e.length){const t=e.sort(((e,t)=>u===h?(e[0]??e)-(t[0]??t):Math.abs((e[1]??e)-h)-Math.abs((t[1]??t)-h)))[0];s.values=[t]}else i=null}else if(r.hasRegularIntervals&&r.extent){const[e,t]=r.extent;u>t||h<e?i=null:s.values=u===h?[u]:[Math.max(e,u),Math.min(t,h)]}}return{...e,multidimensionalDefinition:i}}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=(0,F.ol)(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!((0,a.pC)(i)&&i.pixels&&i.pixels.length>0))return null;let n;await this.updateRenderer();const r=this._rasterJobHandler.instance,{bandIds:s}=this;return n=r?await r.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),n}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!this.loaded||(0,a.Wi)(t))return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const n=(0,_.C5)(e);return k.Z.create({size:256,spatialReference:e,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(n.requestAsImageElement){const r=this.getTileUrl(e,t,i);return(0,I.default)(r,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then((e=>e.data))}if((0,a.pC)(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),(0,a.Wi)(n.multidimensionalDefinition))){const r=n.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,i,r),pixelBlock:null}}return await this._initJobHandler(),"raster-shaded-relief"===this.renderer.type&&(n={...n,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,i,n)}async fetchPixels(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return(0,a.pC)(this.rasterInfo.multidimensionalInfo)&&(n=this.normalizeRasterFetchOptions(n),(0,a.Wi)(n.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(e,t,i,n))}async identify(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return!(0,a.pC)(this.rasterInfo.multidimensionalInfo)||this.rasterInfo.hasMultidimensionalTranspose&&((0,P.WU)(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent)||(t=this.normalizeRasterFetchOptions(t),!(0,a.Wi)(t.multidimensionalDefinition))?this.raster.identify(e,t):{location:e,value:null}}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const e=this.rasterInfo.multidimensionalInfo;if((0,a.Wi)(e)||"standard-time"!==this.rasterInfo.dataType)return!1;const t=this.multidimensionalDefinition[0]?.variableName;return e.variables.some((e=>e.name===t&&e.dimensions.some((e=>"StdTime"===e.name))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,P.Tj)(this.raster.rasterInfo)),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new T.Z;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null,this._cachedRendererJson=null}_configDefaultInterpolation(){if(null==this.interpolation){const e=(0,F.In)(this.rasterInfo,this.raster.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",e)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;if(this.bandIds||(this.bandIds=(0,F.YD)(e)),!this.renderer){const t=(0,F.Ob)(e,{bandIds:this.bandIds,variableName:(0,a.pC)(this.multidimensionalDefinition)?this.multidimensionalDefinition[0]?.variableName:null});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===t.type&&(e.statistics?.[0].max>1e24||e.statistics?.[0].min<-1e24)&&(t.dynamicRangeAdjustment=!0,t.statistics=null,"none"===t.stretchType&&(t.stretchType="min-max")),this.renderer=t}this.symbolizer?(this.symbolizer.rendererJSON=(0,F.ol)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new O.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const t=this.symbolizer.bind();t.success||D.warn("imagery-tile-mixin",t.error||"The given renderer is not supported by the layer.")}};return(0,n._)([(0,u.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"_compatibleFullExtent",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"bandIds",void 0),(0,n._)([(0,u.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),(0,n._)([(0,u.Cb)({type:z.Z,json:{read:!1}}),(0,v.B)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"interpolation",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"ioConfig",void 0),(0,n._)([(0,u.Cb)({type:[R.Z]})],t.prototype,"multidimensionalDefinition",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"raster",void 0),(0,n._)([(0,u.Cb)({readOnly:!0}),(0,v.B)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"sourceJSON",void 0),(0,n._)([(0,u.Cb)({type:Z.Z,json:{read:!1}}),(0,v.B)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),(0,n._)([(0,u.Cb)({type:k.Z,json:{read:!1}}),(0,v.B)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),(0,n._)([(0,u.Cb)(S.HQ)],t.prototype,"url",null),(0,n._)([(0,u.Cb)({types:s.dr})],t.prototype,"renderer",null),(0,n._)([(0,u.Cb)()],t.prototype,"symbolizer",void 0),t=(0,n._)([(0,y.j)("esri.layers.ImageryTileMixin")],t),t};var E=i(6061),J=i(29598),W=i(71684),L=i(56811),H=i(99063),A=i(83040),j=i(60117),q=i(86200),G=i(32014),U=i(46784),$=i(67426),V=i(55635),X=i(45502),Y=i(17314),Q=i(80394),K=i(7882);let ee=class extends((0,$.v)(U.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=(0,Q.zD)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:k.Z.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=(0,Q.ut)(e.spatialReference);return(0,a.pC)(t)&&e.extent.width>=t/2}set url(e){this._set("url",(0,C.Nm)(e,b.Z.getLogger(this.declaredClass)))}async open(e){throw new o.Z("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const r=n.tileInfo||this.rasterInfo.storageInfo.tileInfo,s=this.getTileExtentFromTileInfo(e,t,i,r);return this.fetchPixels(s,r.size[0],r.size[1],n)}async identify(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{multidimensionalDefinition:i,timeExtent:n}=t,{hasMultidimensionalTranspose:r,multidimensionalInfo:s}=this.rasterInfo;let{transposedVariableName:o}=t;const l=(0,a.pC)(s)&&r&&(null!=n||(0,P.WU)(i));l&&!o&&(o=(0,a.pC)(i)&&i.length>0?i[0].variableName:s.variables[0].name,t={...t,transposedVariableName:o}),t=this._getRequestOptionsWithSliceId(t);const{spatialReference:c,extent:f}=this.rasterInfo,{datumTransformation:u}=t;let h=(0,Q.nF)(e,c,u);if(!f.intersects(h))return{location:h,value:null};if((0,a.pC)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(h);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};h=e}let p=0;const d=o&&(0,a.pC)(s)&&this.rasterInfo.hasMultidimensionalTranspose;if(!d)if(t.srcResolution)p=(0,Q.kr)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(p=await this.computeBestPyramidLevelForLocation(e,t),null==p)return{location:h,value:null};const m=this.identifyPixelLocation(h,p,null,d);if(null===m)return{location:h,value:null};const{row:y,col:g,rowOffset:x,colOffset:w,blockWidth:I}=m,b=o??(0,a.Wg)(t.sliceId),v=(0,V.Rq)(this.url,b),_=`${p}/${y}/${g}`;let C=(0,V.Qg)(v,null,_);(0,a.Wi)(C)&&(C=this.fetchRawTile(p,y,g,t),(0,V.gX)(v,null,_,C));const S=await C;if((0,a.Wi)(S)||!S.pixels?.length)return{location:h,value:null};const R=x*I+w;return this._processIdentifyResult(S,{srcLocation:h,position:R,pyramidLevel:p,useTransposedTile:d,requestSomeSlices:l,identifyOptions:t})}async fetchPixels(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(e=(0,Q.kZ)(e),(n=this._getRequestOptionsWithSliceId(n)).requestRawData)return this._fetchPixels(e,t,i,n);const r=(0,Q.ut)(e.spatialReference),s=(0,Q.Hq)(e);if((0,a.Wi)(r)||0===s||1===s&&this._isGlobalWrappableSource)return this._fetchPixels(e,t,i,n);if(s>=3)return{extent:e,pixelBlock:null};const o=[],{xmin:l,xmax:c}=e,f=Math.round(r/(c-l)*t),u=f-Math.round((r/2-l)/(c-l)*t);let h=0;const p=[];for(let a=0;a<=s;a++){const d=new z.Z({xmin:0===a?l:-r/2,xmax:a===s?c-r*a:r/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),m=0===a?f-u:a===s?t-h:f;h+=m,p.push(m);const y=n.disableWrapAround&&a>0?null:this._fetchPixels(d,m,i,n);o.push(y)}const d=(await Promise.all(o)).map((e=>e?.pixelBlock));let m=null;const y={width:t,height:i};return m=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:p},n)).pixelBlock:(0,Y.us)(d,y,{blockWidths:p}),{extent:e,srcExtent:(0,Q.tB)(e,this.rasterInfo.spatialReference,n.datumTransformation),pixelBlock:m}}async fetchRawPixels(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};t={x:Math.floor(t.x),y:Math.floor(t.y)};const r=await this._fetchRawTiles(e,t,i,n),{nativeExtent:s,nativePixelSize:o,storageInfo:l}=this.rasterInfo,c=2**e,f=o.x*c,u=o.y*c,h=new z.Z({xmin:s.xmin+f*t.x,xmax:s.xmin+f*(t.x+i.width-1),ymin:s.ymax-u*(t.y+i.height-1),ymax:s.ymax-u*t.y,spatialReference:s.spatialReference});if(!r)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:p,mosaicSize:d}=r;if(1===p.length&&(0,a.pC)(p[0])&&p[0].width===i.width&&p[0].height===i.height)return{extent:h,srcExtent:h,pixelBlock:r.pixelBlocks[0]};const m=e>0?l.pyramidBlockWidth:l.blockWidth,y=e>0?l.pyramidBlockHeight:l.blockHeight,g={x:t.x%m,y:t.y%y};let x;return x=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:d,destDimension:i,clipOffset:g,clipSize:i,coefs:null,sampleSpacing:null,interpolation:n.interpolation,alignmentInfo:null,blockWidths:null},n)).pixelBlock:(0,Y.us)(p,d,{clipOffset:g,clipSize:i}),{extent:h,srcExtent:h,pixelBlock:x}}fetchRawTile(e,t,i,n){throw new o.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,Q.tB)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,X.J)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){const{customFetchParameters:n}=this.ioConfig,{range:r,query:s,headers:o}=t;i=i??t.retryCount??this.ioConfig.retryCount;const a=r?{Range:`bytes=${r.from}-${r.to}`}:null;try{return await(0,I.default)(e,{...t,query:{...s,...n},headers:{...o,...a}})}catch(l){if(i>0)return i--,this.request(e,t,i);throw l}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return(0,a.Wi)(t)||(0,a.Wi)(e)||0===e.length?null:(0,P.gk)(e,t)}getTileExtentFromTileInfo(e,t,i,n){const r=n.lodAt(e);return this.getTileExtent({x:r.resolution,y:r.resolution},t,i,n.origin,n.spatialReference,n.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:n}=this.rasterInfo;if(!e.tileInfo){const r=[],s=e.maximumPyramidLevel||0;let o=Math.max(n.x,n.y),a=1/.0254*96*o;for(let e=0;e<=s;e++)r.push({level:s-e,resolution:o,scale:a}),o*=2,a*=2;const l=new K.Z({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new k.Z({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:512,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:512,n=arguments.length>3?arguments[3]:void 0;const{width:r,height:s,nativeExtent:o,pixelSize:a,spatialReference:l}=e,c=new K.Z({x:o.xmin,y:o.ymax,spatialReference:l});null==n&&(n=Math.max(0,Math.round(Math.log(Math.max(r,s))/Math.LN2-8)));const f=this.computeBlockBoundary(o,512,512,{x:o.xmin,y:o.ymax},[a],n);e.storageInfo=new G.Z({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:n,blockBoundary:f})}async computeBestPyramidLevelForLocation(e){return 0}computeBlockBoundary(e,t,i,n,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:2;if(1===r.length&&s>0){r=[...r];let{x:e,y:t}=r[0];for(let i=0;i<s;i++)e*=o,t*=o,r.push({x:e,y:t})}const a=[],{x:l,y:c}=n;for(let f=0;f<r.length;f++){const{x:n,y:s}=r[f];a.push({minCol:Math.floor((e.xmin-l+.1*n)/t/n),maxCol:Math.floor((e.xmax-l-.1*n)/t/n),minRow:Math.floor((c-e.ymax+.1*s)/i/s),maxRow:Math.floor((c-e.ymin-.1*s)/i/s)})}return a}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:n}=this.rasterInfo.storageInfo;if(0===e)return t;if((0,a.pC)(i)&&i.length)return i[e-1];const r=n**e;return{x:t.x*r,y:t.y*r}}identifyPixelLocation(e,t,i,n){const{spatialReference:r,nativeExtent:s,storageInfo:o}=this.rasterInfo,{maximumPyramidLevel:l,origin:c,transposeInfo:f}=o,u=n&&(0,a.pC)(f)?f.tileSize[0]:o.blockWidth,h=n&&(0,a.pC)(f)?f.tileSize[1]:o.blockHeight,p=(0,Q.nF)(e,r,i);if(!s.intersects(p))return null;if(t<0||t>l)return null;const d=this.getPyramidPixelSize(t),{x:m,y:y}=d,g=(c.y-p.y)/y/h,x=(p.x-c.x)/m/u,w=Math.min(h-1,Math.floor((g-Math.floor(g))*h)),I=Math.min(u-1,Math.floor((x-Math.floor(x))*u));return{pyramidLevel:t,row:Math.floor(g),col:Math.floor(x),rowOffset:w,colOffset:I,blockWidth:u,srcLocation:p}}getTileExtent(e,t,i,n,r,s){const[o,a]=s,l=n.x+i*o*e.x,c=l+o*e.x,f=n.y-t*a*e.y,u=f-a*e.y;return new z.Z({xmin:l,xmax:c,ymin:u,ymax:f,spatialReference:r})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const n=this.rasterInfo.storageInfo.blockBoundary[e];return!n||n.maxRow<t||n.maxCol<i||n.minRow>t||n.minCol>i}async _fetchPixels(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=(0,Q.Hq)(e);if(r>=2)return{extent:e,pixelBlock:null};const s=this._getSourceDataInfo(e,t,i,n),{pyramidLevel:o,pyramidResolution:l,srcResolution:c,srcExtent:f,srcWidth:u,srcHeight:h}=s;if(0===u||0===h)return{extent:e,srcExtent:f,pixelBlock:null};const p=(0,a.Wg)(this.rasterInfo.transform),d="gcs-shift"===p?.type,m=(0,a.pC)((0,Q.ut)(e.spatialReference));!d&&m||(r=(0,Q.Hq)(s.srcExtent,d));const y=this.rasterInfo.storageInfo,g={x:Math.floor((f.xmin-y.origin.x)/l.x+.1),y:Math.floor((y.origin.y-f.ymax)/l.y+.1)},x=await this._fetchRawTiles(o,g,{width:u,height:h,wrapCount:r},n);if(!x)return{extent:e,srcExtent:f,pixelBlock:null};const w=o>0?y.pyramidBlockWidth:y.blockWidth,I=o>0?y.pyramidBlockHeight:y.blockHeight,b=w===u&&I===h&&g.x%w==0&&g.y%I==0,v=new K.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),_=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:C}=n;if(!_&&b&&1===x.pixelBlocks.length&&w===t&&I===i&&c.x===v.x&&c.y===v.y)return{extent:e,srcExtent:f,pixelBlock:x.pixelBlocks[0]};const S=m&&(0,a.pC)((0,Q.ut)(f.spatialReference)),R=n.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");R&&!this.rasterJobHandler&&await(0,Q.zD)();const T=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:v.toJSON(),datumTransformation:C,rasterTransform:p,hasWrapAround:r>0||S,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:R},n):(0,Q.Qp)({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:v,datumTransformation:C,rasterTransform:p,hasWrapAround:r>0||S,isAdaptive:!1,includeGCSGrid:R});let k;const P=!n.requestRawData,F={rows:T.spacing[0],cols:T.spacing[1]},O=(0,a.Wg)(this._getRasterTileAlignmentInfo(o,x.extent.xmin)),{pixelBlocks:B,mosaicSize:z,isPartiallyFilled:Z}=x;let D=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:B,srcMosaicSize:z,destDimension:P?{width:t,height:i}:null,coefs:P?T.coefficients:null,sampleSpacing:P?F:null,projectDirections:R,gcsGrid:R?T.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:n.interpolation,alignmentInfo:O,blockWidths:null},n);({pixelBlock:k,localNorthDirections:D}=e)}else{const e=(0,Y.us)(B,z,{alignmentInfo:O});k=P?(0,Y.Uk)(e,{width:t,height:i},T.coefficients,F,n.interpolation):e,R&&T.gcsGrid&&(D=(0,Y.Qh)({width:t,height:i},T.gcsGrid),k=(0,M.xQ)(k,this.rasterInfo.dataType,D))}return n.requestRawData||R?{srcExtent:f,pixelBlock:k,transformGrid:T,localNorthDirections:D,extent:e,isPartiallyFilled:Z}:{srcExtent:f,extent:e,pixelBlock:k}}async _fetchRawTiles(e,t,i,n){const{origin:r,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:o,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:f}=t,{width:u,height:h,wrapCount:p}=i;const d=this._getRasterTileAlignmentInfo(e,0);n.buffer&&(c-=n.buffer.cols,f-=n.buffer.rows,u+=2*n.buffer.cols,h+=2*n.buffer.rows);let m=0,y=0,g=0;p&&(0,a.pC)(d)&&(({worldColumnCountFromOrigin:y,originColumnOffset:g,rightPadding:m}=d),y*d.blockWidth-m>=c+u&&(m=0));const x=Math.floor(c/o),w=Math.floor(f/l),I=Math.floor((c+u+m-1)/o),b=Math.floor((f+h+m-1)/l),v=s[e];if(!v)return null;const{minRow:_,minCol:C,maxCol:S,maxRow:R}=v;if(0===p&&(b<_||I<C||w>R||x>S))return null;const T=new Array;let k=!1;const P=null==this.ioConfig.allowPartialFill?n.allowPartialFill:this.ioConfig.allowPartialFill;for(let z=w;z<=b;z++)for(let t=x;t<=I;t++){let i=t;if(!n.disableWrapAround&&p&&(0,a.pC)(d)&&y<=t&&(i=t-y-g),z>=_&&i>=C&&R>=z&&S>=i){const t=this._fetchRawTile(e,z,i,n);P?T.push(new Promise((e=>{t.then((t=>e(t))).catch((()=>{k=!0,e(null)}))}))):T.push(t)}else T.push(null)}if(0===T.length)return null;const M=await Promise.all(T),F={height:(b-w+1)*l,width:(I-x+1)*o},{spatialReference:O}=this.rasterInfo,B=this.getPyramidPixelSize(e),{x:Z,y:D}=B;return{extent:new z.Z({xmin:r.x+x*o*Z,xmax:r.x+(I+1)*o*Z,ymin:r.y-(b+1)*l*D,ymax:r.y-w*l*D,spatialReference:O}),pixelBlocks:M,mosaicSize:F,isPartiallyFilled:k}}_fetchRawTile(e,t,i,n){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:s,minCol:o,maxCol:l,maxRow:f}=r;if(t<s||i<o||t>f||i>l)return Promise.resolve(null);const u=(0,V.Rq)(this.url,n.sliceId),h=`${e}/${t}/${i}`;let p=(0,V.Qg)(u,n.registryId,h);if((0,a.Wi)(p)){const r=new AbortController;p=this.fetchRawTile(e,t,i,{...n,signal:r.signal}),(0,V.gX)(u,n.registryId,h,p,r),p.catch((()=>(0,V.Gc)(u,n.registryId,h)))}return n.signal&&(0,c.fu)(n,(()=>{(0,V.OE)(u,n.registryId,h)})),p}_computeMagDirValues(e){const{bandCount:t,dataType:i}=this.rasterInfo;if((2!==t||"vector-magdir"!==i)&&"vector-uv"!==i||2!==e?.length||!e[0]?.length)return null;const n=e[0].length;if("vector-magdir"===i){const t=e[1].map((e=>(e+360)%360));return[e[0],t]}const[r,s]=e,o=[],a=[];for(let l=0;l<n;l++){const[e,t]=(0,M.Tg)([r[l],s[l]]);o.push(e),a.push(t)}return[o,a]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,Q.P_)(this.rasterInfo)),(0,a.Wi)(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const r={datumTransformation:n.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};n.srcResolution&&(r.srcResolution=n.srcResolution,this._updateSourceDataInfo(e,r));const s=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:o,srcHeight:a,pyramidLevel:l}=r,c=o/t,f=a/i,u=l<s&&c*f>=16;if(u||l===s&&(c>8||f>8)||0===o||0===a){const o=new K.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let a=(0,Q.VO)(o,this.rasterInfo.spatialReference,e,r.datumTransformation);const h=!a||n.srcResolution&&a.x+a.y<n.srcResolution.x+n.srcResolution.y;if(u&&n.srcResolution&&h){const e=Math.round(Math.log(Math.max(c,f))/Math.LN2)-1;if(s-l+3>=e){const t=2**e;a={x:n.srcResolution.x*t,y:n.srcResolution.y*t}}}a&&(r.srcResolution=a,this._updateSourceDataInfo(e,r))}return(r.srcWidth/t>8||r.srcHeight/i>8)&&(r.srcWidth=0,r.srcHeight=0),r}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:n,datumTransformation:r}=t,{pyramidLevel:s,pyramidResolution:o,excessiveReading:l}=(0,Q.kr)(n,this.rasterInfo,this.ioConfig.sampling);if(l)return;let c=t.srcExtent||(0,Q.tB)(e,i,r);if(null==c)return;const f=(0,a.Wg)(this.rasterInfo.transform);f&&(c=f.inverseTransform(c)),t.srcExtent=c;const u=Math.ceil((c.xmax-c.xmin)/o.x-.1),h=Math.ceil((c.ymax-c.ymin)/o.y-.1);t.pyramidLevel=s,t.pyramidResolution=o,t.srcWidth=u,t.srcHeight=h}_getRequestOptionsWithSliceId(e){return(0,a.pC)(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:i,position:n,pyramidLevel:r,useTransposedTile:s}=t,o=e.pixels[0].length/e.width/e.height;if(e.mask&&!e.mask[n])return{location:i,value:null};const{multidimensionalInfo:l}=this.rasterInfo;if((0,a.Wi)(l)||!s){const t=e.pixels.map((e=>e[n])),s={location:i,value:t,pyramidLevel:r},o=this._computeMagDirValues(t.map((e=>[e])));return o?.length&&(s.magdirValue=o.map((e=>e[0]))),s}let c=e.pixels.map((e=>Array.prototype.slice.call(e,n*o,n*o+o))),f=this._computeMagDirValues(c);const{requestSomeSlices:u,identifyOptions:h}=t;let p=(0,P.MO)(l,h.transposedVariableName);if(u){const e=(0,P.Ur)(p,(0,a.Wg)(h.multidimensionalDefinition),(0,a.Wg)(h.timeExtent));c=c.map((t=>e.map((e=>t[e])))),f=f?.map((t=>e.map((e=>t[e])))),p=e.map((e=>p[e]))}return{location:i,value:null,dataSeries:p.map(((e,t)=>{const i={value:c.map((e=>e[t])),multidimensionalDefinition:e.multidimensionalDefinition,variableName:e.multidimensionalDefinition[0].variableName,dimensionValues:{}};return f?.length&&(i.magdirValue=[f[0][t],f[1][t]]),e.multidimensionalDefinition.forEach((e=>i.dimensionValues[e.dimensionName]=e.values[0])),i})),pyramidLevel:r}}};(0,n._)([(0,u.Cb)()],ee.prototype,"_rasterTileAlighmentInfo",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],ee.prototype,"_isGlobalWrappableSource",null),(0,n._)([(0,u.Cb)(S.HQ)],ee.prototype,"url",null),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],ee.prototype,"datasetName",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],ee.prototype,"datasetFormat",void 0),(0,n._)([(0,u.Cb)()],ee.prototype,"rasterInfo",void 0),(0,n._)([(0,u.Cb)()],ee.prototype,"ioConfig",void 0),(0,n._)([(0,u.Cb)()],ee.prototype,"sourceJSON",void 0),ee=(0,n._)([(0,y.j)("esri.layers.support.rasterDatasets.BaseRaster")],ee);const te=ee;var ie=i(17061);function ne(e){const t=e.fields,i=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",r=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=r.map((e=>e.name)),o=[];let a=0,l=0;return i.forEach((e=>{const t={};for(t[n]=a++,l=1;l<s.length;l++)t[s[l]]=e[l-1];o.push({attributes:t})})),{displayFieldName:"",fields:r,features:o}}class re{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const n=t.getUint32(4,!0),r=t.getUint16(8,!0),s=t.getUint16(10,!0),o={version:i,recordCount:n,headerByteCount:r,recordByteCount:s};let a=32;const l=[],c=[];let f;if(3===i){for(;13!==t.getUint8(a);)f=String.fromCharCode(t.getUint8(a+11)).trim(),l.push({name:(0,ie.f)(new Uint8Array(e,a,11)),type:f,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(f)],length:t.getUint8(a+16)}),a+=32;if(a+=1,l.length>0)for(;c.length<n&&e.byteLength-a>s;){const i=[];32===t.getUint8(a)?(a+=1,l.forEach((t=>{if("C"===t.type)i.push((0,ie.f)(new Uint8Array(e,a,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,a,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,a,t.length)).trim()));else if("D"===t.type){const n=String.fromCharCode.apply(null,new Uint8Array(e,a,t.length)).trim();i.push(new Date(parseInt(n.substring(0,4),10),parseInt(n.substring(4,6),10)-1,parseInt(n.substring(6,8),10)))}a+=t.length})),c.push(i)):a+=s}}return{header:o,fields:l,records:c,recordSet:ne({fields:l,records:c})}}}var se=i(77960),oe=i(49818);const ae=new Map;ae.set("int16","esriFieldTypeSmallInteger"),ae.set("int32","esriFieldTypeInteger"),ae.set("int64","esriFieldTypeInteger"),ae.set("float32","esriFieldTypeSingle"),ae.set("float64","esriFieldTypeDouble"),ae.set("text","esriFieldTypeString");let le=class extends te{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:e?.signal});if(!this._validateHeader(t))throw new o.Z("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:n}=this._parseHeader(t);if("thematic"===n.dataType){const e=await this._fetchAuxiliaryInformation();n.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",n),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{transposeInfo:r}=this.rasterInfo.storageInfo,{transposedVariableName:s}=n,o=!(!r||!s),a=o?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(a<0)return null;const l=this._buildCacheFilePath(a,t,i,n.multidimensionalDefinition,s),c=this._getIndexRecordFromBundle(t,i,o),f=await this.request(l,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:n.signal});if(!f)return null;const u=new Uint8Array(f.data),h=this._getTileEndAndContentType(u,c);if(0===h.recordSize)return null;const p=await this.request(l,{range:{from:h.position,to:h.position+h.recordSize},responseType:"array-buffer",signal:n.signal});if(!p)return null;const[d,m]=this._getTileSize(o);return this.decodePixelBlock(p.data,{width:d,height:m,planes:null,pixelType:null,returnPixelInterleavedDims:o})}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){const t=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:i,histograms:n,colormap:r,blockWidth:s,blockHeight:o,firstPyramidLevel:a,maximumPyramidLevel:l}=e,c=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),f=e.extent.spatialReference,u=e.geodataXform?.spatialReference,h=new Z.Z(f?.wkid||f?.wkt?f:u);let p=new z.Z({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:h});const d=new K.Z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:h}),m=Math.round((p.xmax-p.xmin)/d.x),y=Math.round((p.ymax-p.ymin)/d.y),g=this._parseTransform(e.geodataXform),x=g?p:null;g&&(p=g.forwardTransform(p),d.x=(p.xmax-p.xmin)/m,d.y=(p.ymax-p.ymin)/y);const w=e.properties??{},I=e.format.toLowerCase().replace("cache/",""),b=new K.Z(e.origin.x,e.origin.y,h);let v,_,C,S;if(r&&r.colors)for(v=[],_=0;_<r.colors.length;_++)C=r.colors[_],S=r.values?r.values[_]:_,v.push([S,255&C,C<<16>>>24,C<<8>>>24,C>>>24]);const R=e.LODInfos,T=[];for(_=0;_<R.levels.length;_++)T.push({level:R.levels[_],resolution:R.resolutions[_],scale:96/.0254*R.resolutions[_]});const P=new k.Z({dpi:96,lods:T,format:I,origin:b,size:[s,o],spatialReference:h}),M={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},F=[{maxCol:Math.ceil(m/s)-1,maxRow:Math.ceil(y/o)-1,minCol:0,minRow:0}];let O=2;if(l>0)for(_=0;_<l;_++)F.push({maxCol:Math.ceil(m/O/s)-1,maxRow:Math.ceil(y/O/o)-1,minCol:0,minRow:0}),O*=2;const B=e.mdInfo;let D=null;if(B&&w._yxs){const e=w._yxs;D={packetSize:e.PacketSize,tileSize:[e.TileXSize,e.TileYSize]}}return{storageInfo:M,rasterInfo:new q.Z({width:m,height:y,pixelType:t,bandCount:i,extent:p,nativeExtent:x,transform:g,spatialReference:h,pixelSize:d,keyProperties:w,statistics:c,histograms:n,multidimensionalInfo:B,colormap:v,storageInfo:new G.Z({blockWidth:s,blockHeight:o,pyramidBlockWidth:s,pyramidBlockHeight:o,origin:b,tileInfo:P,transposeInfo:D,firstPyramidLevel:a,maximumPyramidLevel:l,blockBoundary:F})})}}_parseTransform(e){if(!(0,se.j)(e))throw new o.Z("cloudraster:open","the data contains unsupported geodata transform types");const t=(0,se.c)(e);if("identity"===t.type)return null;if("polynomial"!==t.type||!t.forwardCoefficients?.length||!t.inverseCoefficients?.length)throw new o.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return t}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),n=await Promise.all([t,i]);let r;if(n[0]){let e=n[0].fields;const t=n[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":ae.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(r={fields:e,features:i})}}return!r&&n[1]&&(r=re.parse(n[1]).recordSet),oe.default.fromJSON(r)}_buildCacheFilePath(e,t,i,n,r){const s=this._getPackageSize(!!r),o=Math.floor(t/s)*s,l=Math.floor(i/s)*s,c="R"+this._toHexString4(o)+"C"+this._toHexString4(l);let f="L";f+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,h=n?.[0];if((0,a.Wi)(u)||!h)return`${this.url}/_alllayers/${f}/${c}.bundle`;let p="_yxs";if(!r){p=u.variables.find((e=>e.name===h.variableName)).dimensions[0].values.indexOf(h.values[0]).toString(16);const e=4-p.length;for(let t=0;t<e;t++)p="0"+p;p="S"+p}const d=this._getVariableFolderName(r||h.variableName);return`${this.url}/_alllayers/${d}/${p}/${f}/${c}.bundle`}_getPackageSize(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const{transposeInfo:t}=this.rasterInfo.storageInfo;return e&&(0,a.pC)(t)?t.packetSize:this.storageInfo.packetSize}_getTileSize(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const{storageInfo:t}=this.rasterInfo,{transposeInfo:i}=t;return e&&(0,a.pC)(i)?i.tileSize:t.tileInfo.size}_getVariableFolderName(e){return""===(e=e.trim())?"_v":e.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=this._getPackageSize(i),r=n*(e%n)+t%n;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let n,r=0;for(n=0;n<5;n++)r|=(255&i[n])<<8*n;const s=0xffffffffff&r;for(r=0,n=5;n<8;n++)r|=(255&i[n])<<8*(n-5);return{position:s,recordSize:0xffffffffff&r}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,n._)([(0,u.Cb)({readOnly:!0})],le.prototype,"storageInfo",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),le=(0,n._)([(0,y.j)("esri.layers.support.rasterDatasets.CloudRaster")],le);const ce=le;var fe=i(21449);let ue=class extends te{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){await this.init();const{pixelBlock:t,statistics:i,histograms:n,name:r,keyProperties:s,nativeExtent:o,transform:a}=this.data,{width:l,height:c,pixelType:f}=t,u=this.data.extent||new z.Z({xmin:-.5,ymin:.5,xmax:l-.5,ymax:c-.5,spatialReference:new Z.Z({wkid:3857})}),h=this.data.isPseudoSpatialReference??!this.data.extent,p={x:u.width/l,y:u.height/c},d=new q.Z({width:l,height:c,pixelType:f,extent:u,nativeExtent:o,transform:a,pixelSize:p,spatialReference:u.spatialReference,bandCount:3,keyProperties:s||{},statistics:i,isPseudoSpatialReference:h,histograms:n});this.createRemoteDatasetStorageInfo(d,512,512),this._set("rasterInfo",d),this.updateTileInfo(),await this._buildInMemoryRaster(t,{width:512,height:512},e),this.datasetName=r,this.url="/InMemory/"+r}fetchRawTile(e,t,i){const n=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(n)}async _buildInMemoryRaster(e,t,i){const n=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:n},i):Promise.resolve((0,Y.Vl)(e,t,n)),s=(0,a.pC)(this.rasterInfo.statistics),l=(0,a.pC)(this.rasterInfo.histograms),f=s?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,fe.Hv)(e)),u=await(0,c.as)([r,f]);if(!u[0].value&&u[1].value)throw new o.Z("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=u[0].value,s||(this.rasterInfo.statistics=u[1].value?.statistics),l||(this.rasterInfo.histograms=u[1].value?.histograms)}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],ue.prototype,"datasetFormat",void 0),(0,n._)([(0,u.Cb)()],ue.prototype,"data",void 0),ue=(0,n._)([(0,y.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],ue);const he=ue;function pe(e,t){if(!e||!t)return[];let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=[];if(t){const r=pe(e,i);for(let e=0;e<r.length;e++)pe(r[e],t).forEach((e=>n.push(e)));return n}const r=e.getElementsByTagNameNS("*",i);if(!r||0===r.length)return[];for(let s=0;s<r.length;s++)n.push(r[s]||r.item[s]);return n}function de(e,t){if(!e||!t)return null;let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=pe(e,i);return n.length>0?t?de(n[0],t):n[0]:null}function me(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const i=t?de(e,t):e;let n;return i?(n=i.textContent||i.nodeValue,n?n.trim():null):null}function ye(e,t){const i=pe(e,t),n=[];let r;for(let s=0;s<i.length;s++)r=i[s].textContent||i[s].nodeValue,r&&(r=r.trim(),""!==r&&n.push(r));return n}function ge(e,t){return ye(e,t).map((e=>Number(e)))}function xe(e,t){const i=me(e,t);return Number(i)}function we(e,t){const i=e?.nodeName?.toLowerCase(),n=t.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===n}var Ie=i(69405);function be(e,t){if(!e||!t)return null;const i=[];for(let n=0;n<e.length;n++)i.push(e[n]),i.push(t[n]);return i}function ve(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new Z.Z({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),n=e.indexOf("PROJCS"),r=n>-1?n:e.indexOf("GEOGCS");if(-1===r)return null;const s=e.slice(r,e.lastIndexOf("]",i)+1).trim(),o=e.slice(i,e.lastIndexOf("]")).trim();t=_e(s);const a=new Z.Z(t?{wkid:t}:{wkt:s}),l=_e(o);return l&&(a.vcsWkid=l),a}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=_e(e),new Z.Z(0!==t?{wkid:t}:{wkt:e})):null}function _e(e){const t=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),i=t[t.length-1].split(","),n=i[0]?.toLowerCase();if(("epsg"===n||"esri"===n)&&e.endsWith('"]]')){const e=Number(i[1]);if(!isNaN(e)&&0!==e)return e}return 0}function Ce(e){if("pamdataset"!==e?.documentElement.tagName?.toLowerCase())return{};const t={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(we(e,"SRS")){if(!t.spatialReference){const i=me(e);t.spatialReference=ve(i)}}else if(we(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:i,transform:n}=function(e){const t=de(e,"GeodataXform"),i=ve(xe(t,"SpatialReference/WKID")||me(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:i,transform:null};const n=xe(t,"PolynomialOrder")??1,r=ge(t,"CoeffX/Double"),s=ge(t,"CoeffY/Double"),o=ge(t,"InverseCoeffX/Double"),a=ge(t,"InverseCoeffY/Double"),l=be(r,s),c=be(o,a);return{spatialReference:i,transform:new Ie.Z({spatialReference:i,polynomialOrder:n,forwardCoefficients:l,inverseCoefficients:c})}}(e);t.transform=n,t.spatialReference||(t.spatialReference=i)}else pe(e,"MDI").forEach((e=>t.metadata[e.getAttribute("key")]=me(e)));else if(we(e,"PAMRasterBand")){const i=function(e){const t=xe(e,"NoDataValue"),i=de(e,"Histograms/HistItem"),n=xe(i,"HistMin"),r=xe(i,"HistMax"),s=xe(i,"BucketCount"),o=me(i,"HistCounts")?.split("|").map((e=>Number(e)));let a,l,c,f;pe(e,"Metadata/MDI").forEach((e=>{const t=Number(e.textContent??e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":a=t;break;case"STATISTICS_MAXIMUM":l=t;break;case"STATISTICS_MEAN":c=t;break;case"STATISTICS_STDDEV":f=t}}));const u=xe(e,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:o?.length&&null!=a&&null!=l?{min:n,max:r,size:s||o.length,counts:o}:null,sourceBandIndex:u,statistics:null!=a&&null!=l?{min:a,max:l,avg:c,stddev:f}:null}}(e);null!=i.sourceBandIndex&&null==t.rasterBands[i.sourceBandIndex]?t.rasterBands[i.sourceBandIndex]=i:t.rasterBands.push(i)}}));const i=t.rasterBands;if(i){const e=!!i[0].statistics;t.statistics=e?i.map((e=>e.statistics)):null;const n=!!i[0].histogram;t.histograms=n?i.map((e=>e.histogram)):null}return t}let Se=class extends te{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:n,histograms:r,transform:s}=await this._fetchAuxiliaryData(e);const o=!i;o&&(i=new Z.Z({wkid:3857})),r?.length&&null==n&&(n=(0,fe.Oh)(r));const{width:a,height:l}=t;let c=new z.Z({xmin:-.5,ymin:.5-l,xmax:a-.5,ymax:.5,spatialReference:i});const f=s?s.forwardTransform(c):c;let u=!0;if(s){const e=s.forwardCoefficients;u=e&&0===e[1]&&0===e[2],u&&(s=null,c=f)}const h=new he({data:{extent:f,nativeExtent:c,transform:s,pixelBlock:t,statistics:n,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:o}});await h.open(),h.data=null,this._set("rasterInfo",h.rasterInfo),this._inMemoryRaster=h}fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:e?.signal}),i=(0,X.y)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new o.Z("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const n=i.toLowerCase(),r="gif"===n||"bmp"===n||!(0,h.Z)("ios");return await this.decodePixelBlock(t,{format:n,useCanvas:r,hasNoZlibMask:!0})}async _fetchAuxiliaryData(e){const t=(0,a.Wg)(e?.signal),i=this.ioConfig.skipExtensions??[],n=i.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:t}),r=this.datasetFormat,s="JPG"===r?"jgw":"PNG"===r?"pgw":"BMP"===r?"bpw":null,o=i.includes(s)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+s,{responseType:"text",signal:t}),l=await(0,c.as)([n,o]);if(t?.aborted)throw(0,c.zE)();const f=Ce(l[0].value?.data);if(!f.transform){const e=l[1].value?l[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;f.transform=6===e?.length?new Ie.Z({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return f}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),Se=(0,n._)([(0,y.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],Se);const Re=Se;var Te=i(35995),ke=i(71466),Pe=i(23638),Me=i(3089),Fe=i(38045);let Oe=class extends te{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const n=i.data;if(this.sourceJSON=n,!n)throw new o.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!n.tileInfo)throw new o.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=n.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(n.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===n.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=n.name.slice(n.name.indexOf("/")+1);const r=await this._fetchRasterInfo({signal:t});if(!(0,a.pC)(r))throw new o.Z("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?(0,ke.d)(n.tileInfo,n):k.Z.fromJSON(n.tileInfo),{extent:t,pixelSize:i}=r,s=.5/r.width*i.x;let o,a;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==n.maxScale&&("Raster"===this.tileType?(o=e.lods.find((e=>e.resolution===i.x)),o||(o=e.lods[e.lods.length-1])):(o=e.lods.find((e=>Math.abs(e.scale-n.maxScale)<s)),o||(o=e.lods.filter((e=>e.scale>n.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=o.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),o||(o=l);const c=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==n.minScale&&"Elevation"===this.tileType&&(a=e.lods.find((e=>Math.abs(e.scale-n.minScale)<s)),this._levelOffset=a.level-c.level),a||(a=c);const f=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>s||!e.lods.some((e=>Math.abs(e.resolution-f)<s)))&&(i.x=i.y=o.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const u=o.level-a.level,[h,p]=e.size,d=[];e.lods.forEach((e=>{e.level>=a.level&&e.level<=o.level&&d.push({x:e.resolution,y:e.resolution})})),d.sort(((e,t)=>e.x-t.x));const m=this.computeBlockBoundary(t,h,p,e.origin,d,u),y=d.length>1?d.slice(1):null;let g;n.transposeInfo&&(g={tileSize:[n.transposeInfo.rows,n.transposeInfo.cols],packetSize:r.keyProperties?._yxs.PacketSize??0}),r.storageInfo=new G.Z({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:y,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:u,tileInfo:e,transposeInfo:g,blockBoundary:m}),this._fixGCSShift(r),this._set("rasterInfo",r)}if(n.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:r.storageInfo.tileInfo,parsedUrl:(0,Te.mN)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Pe.y({layer:e})}}async fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{storageInfo:r,extent:s}=this.rasterInfo,{transposeInfo:o}=r,l=(0,a.pC)(o)&&!!n.transposedVariableName;if(this._slices&&!l&&null==n.sliceId)return null;const c=l?0:r.maximumPyramidLevel-e+this._levelOffset,f=`${this.url}/tile/${c}/${t}/${i}`,u=this._slices?l?{variable:n.transposedVariableName}:{sliceId:n.sliceId||0}:null,{data:h}=await this.request(f,{query:u,responseType:"array-buffer",signal:n.signal});if(!h)return null;const p=l?o.tileSize:r.tileInfo.size,d=await this.decodePixelBlock(h,{width:p[0],height:p[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnPixelInterleavedDims:l}),m=r.blockBoundary[e];if("jpg"!==r.compression||i>m.minCol&&i<m.maxCol&&t>m.minRow&&t<m.maxRow)return d;const{origin:y,blockWidth:g,blockHeight:x}=r,{x:w,y:I}=this.getPyramidPixelSize(e),b=Math.round((s.xmin-y.x)/w)%g,v=Math.round((s.xmax-y.x)/w)%g||g,_=Math.round((y.y-s.ymax)/I)%x,C=Math.round((y.y-s.ymin)/I)%x||x,S=i===m.minCol?b:0,R=t===m.minRow?_:0,T=i===m.maxCol?v:g,k=t===m.maxRow?C:x;return(0,Y.pW)(d,{x:S,y:R},{width:T-S,height:k-R}),d}getSliceIndex(e){if(!this._slices||(0,a.Wi)(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!i||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.statistics)),n=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.histograms)),r=await Promise.all([i,n]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,(0,a.Wg)(t.datumTransformation));if(null===i)return null;let n=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let s=r-n+this._levelOffset;const o=i.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,i.row,i.col,t))break}catch{}if(s--,n++,i=this.identifyPixelLocation(o,n,(0,a.Wg)(t.datumTransformation)),null===i)return null}return-1===s||null==i?null:n}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),i=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=Z.Z.fromJSON(t.spatialReference||t.extent.spatialReference),r=new K.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n});return new q.Z({width:e,height:i,bandCount:3,extent:z.Z.fromJSON(t.extent),spatialReference:n,pixelSize:r,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,n=(0,Fe.g)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then((e=>e.data&&e.data.slices)).catch((()=>null)):null,s=await Promise.all([n,r]);return this._slices=s[1],s[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Me.Z,e.extent=e.transform.forwardTransform(t))}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],Oe.prototype,"datasetFormat",void 0),(0,n._)([(0,u.Cb)()],Oe.prototype,"tileType",void 0),Oe=(0,n._)([(0,y.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],Oe);const Be=Oe;var ze=i(99278),Ze=i(60263);const De=new Map;De.set("Int8","s8"),De.set("UInt8","u8"),De.set("Int16","s16"),De.set("UInt16","u16"),De.set("Int32","s32"),De.set("UInt32","u32"),De.set("Float32","f32"),De.set("Float64","f32"),De.set("Double64","f32");const Ne=new Map;Ne.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Ne.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Ne.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Ne.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let Ee=class extends te{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?(0,a.Wg)(e.signal):null,i=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:n,files:r}=this._parseHeader(i.data);if(-1===this.ioConfig.skipExtensions?.indexOf("aux.xml")){const t=await this._fetchAuxiliaryData(e);null!=t&&(n.statistics=t.statistics??n.statistics,n.histograms=t.histograms,t.histograms&&(0,a.Wi)(n.statistics)&&(n.statistics=(0,fe.Oh)(t.histograms)))}this._set("rasterInfo",n),this._files=r;const s=await this.request(r.index,{responseType:"array-buffer",signal:t});this._storageIndex=this._parseIndex(s.data);const{blockWidth:o,blockHeight:l}=this.rasterInfo.storageInfo,c=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:f,height:u}=this.rasterInfo,h=[],p=this._getBandSegmentCount();let d=0,m=-1;for(;d<this._storageIndex.length;){m++;const e=Math.ceil(f/o/c**m)-1,t=Math.ceil(u/l/c**m)-1;d+=(e+1)*(t+1)*p*4,h.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,m>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=m),this.updateTileInfo()}async fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{blockWidth:r,blockHeight:s,blockBoundary:o}=this.rasterInfo.storageInfo,l=o[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:c,pixelType:f}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:p}=this._getTileLocation(e,t,i);if(!u||0===u.length)return null;if(0===u[0].from&&0===u[0].to){const e=new Uint8Array(r*s);return new ze.Z({width:r,height:s,pixels:null,mask:e,validPixelCount:0})}const{bandIds:d}=this.ioConfig,m=this._getBandSegmentCount(),y=[];let g=0;for(g=0;g<m;g++)(!d||d.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:u[g].from,to:u[g].to},responseType:"array-buffer",signal:n.signal}));const x=await Promise.all(y),w=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),I=new Uint8Array(w);let b=0;for(g=0;g<m;g++)I.set(new Uint8Array(x[g].data),b),b+=x[g].data.byteLength;const v=Ne.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(I.buffer,{width:r,height:s,format:v,planes:d?.length||c,pixelType:f});if((0,a.pC)(this.rasterInfo.noDataValue)&&"lerc"!==v&&!_.mask){const e=this.rasterInfo.noDataValue[0];if(null!=e){const t=_.width*_.height,i=new Uint8Array(t);if(Math.abs(e)>1e24)for(g=0;g<t;g++)Math.abs((_.pixels[0][g]-e)/e)>1e-6&&(i[g]=1);else for(g=0;g<t;g++)_.pixels[0][g]!==e&&(i[g]=1);_.mask=i}}let C=0,S=0;if(h!==r||p!==s){let e=_.mask;if(e)for(g=0;g<s;g++)if(S=g*r,g<p)for(C=h;C<r;C++)e[S+C]=0;else for(C=0;C<r;C++)e[S+C]=0;else for(e=new Uint8Array(r*s),_.mask=e,g=0;g<p;g++)for(S=g*r,C=0;C<h;C++)e[S+C]=1}return _}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,n,r,s,o;if(Ze.f){for(i=new Uint8Array(e),r=new ArrayBuffer(e.byteLength),n=new Uint8Array(r),s=0;s<e.byteLength/4;s++)for(o=0;o<4;o++)n[4*s+o]=i[4*s+3-o];t=new Uint32Array(r)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return Ne.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:n,blockHeight:r,pyramidScalingFactor:s}=this.rasterInfo.storageInfo,{width:o,height:a}=this.rasterInfo,l=this._getBandSegmentCount();let c,f,u,h=0,p=0;for(u=0;u<e;u++)p=s**u,c=Math.ceil(o/n/p),f=Math.ceil(a/r/p),h+=c*f;p=s**e,c=Math.ceil(o/n/p),f=Math.ceil(a/r/p),h+=t*c+i,h*=4*l;const d=this._storageIndex.subarray(h,h+4*l);let m=0,y=0;const g=[];for(let x=0;x<l;x++)m=d[4*x+0]*2**32+d[4*x+1],y=m+d[4*x+2]*2**32+d[4*x+3],g.push({from:m,to:y});return{ranges:g,actualTileWidth:i<c-1?n:Math.ceil(o/p)-n*(c-1),actualTileHeight:t<f-1?r:Math.ceil(a/p)-r*(f-1)}}_parseHeader(e){const t=de(e,"MRF_META/Raster");if(!t)throw new o.Z("mrf:open","not a valid MRF format");const i=de(t,"Size"),n=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),s=parseInt(i.getAttribute("c"),10),a=(me(t,"Compression")||"none").toLowerCase();if(!Ne.has(a))throw new o.Z("mrf:open","currently does not support compression "+a);const l=me(t,"DataType")||"UInt8",c=De.get(l);if(null==c)throw new o.Z("mrf:open","currently does not support pixel type "+l);const f=de(t,"PageSize"),u=parseInt(f.getAttribute("x"),10),h=parseInt(f.getAttribute("y"),10),p=de(t,"DataValues");let d,m;if(p&&(m=p.getAttribute("NoData"),null!=m&&(d=m.trim().split(" ").map((e=>parseFloat(e))))),de(e,"MRF_META/CachedSource"))throw new o.Z("mrf:open","currently does not support MRF referencing other data files");const y=de(e,"MRF_META/GeoTags"),g=de(y,"BoundingBox");let x,w=!1;if(null!=g){const e=parseFloat(g.getAttribute("minx")),t=parseFloat(g.getAttribute("miny")),i=parseFloat(g.getAttribute("maxx")),n=parseFloat(g.getAttribute("maxy")),r=me(y,"Projection")||"";let s;if("LOCAL_CS[]"!==r)if(r.toLowerCase().startsWith("epsg:")){const e=Number(r.slice(5));isNaN(e)||0===e||(s=new Z.Z({wkid:e}))}else s=ve(r);else w=!0,s=new Z.Z({wkid:3857});x=new z.Z(e,t,i,n),x.spatialReference=s}else w=!0,x=new z.Z({xmin:-.5,ymin:.5-r,xmax:n-.5,ymax:.5,spatialReference:new Z.Z({wkid:3857})});const I=de(e,"MRF_META/Rsets"),b=parseInt(I&&I.getAttribute("scale")||"2",10),v=x.spatialReference,_=new G.Z({origin:new K.Z({x:x.xmin,y:x.ymax,spatialReference:v}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:a,pyramidScalingFactor:b}),C=new K.Z({x:x.width/n,y:x.height/r,spatialReference:v}),S=new q.Z({width:n,height:r,extent:x,isPseudoSpatialReference:w,spatialReference:v,bandCount:s,pixelType:c,pixelSize:C,noDataValue:d,storageInfo:_}),R=me(e,"datafile"),T=me(e,"IndexFile");return{rasterInfo:S,files:{mrf:this.url,index:T||this.url.replace(".mrf",".idx"),data:R||this.url.replace(".mrf",Ne.get(a).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return Ce(t)}catch{return null}}};(0,n._)([(0,u.Cb)()],Ee.prototype,"_files",void 0),(0,n._)([(0,u.Cb)()],Ee.prototype,"_storageIndex",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],Ee.prototype,"datasetFormat",void 0),Ee=(0,n._)([(0,y.j)("esri.layers.support.rasterIO.MRFRaster")],Ee);const Je=Ee;var We=i(58424),Le=i(92217);const He=(e,t)=>{const i=e.get(t);return i&&i.values},Ae=(e,t)=>{const i=e.get(t);return i&&i.values[0]};let je=class extends te{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){await this.init();const t=e?(0,a.Wg)(e.signal):null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!i)throw new o.Z("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:n,firstIFD:r,isBigTiff:s}=(0,We.cK)(i),l=[];await this._readIFDs(l,i,n,r,0,s?8:4,t);const c=(0,We.FI)(l),{width:f,height:u,tileWidth:h,tileHeight:p,planes:d,pixelType:m,compression:y,firstPyramidLevel:g,maximumPyramidLevel:x,pyramidBlockWidth:w,pyramidBlockHeight:I,tileBoundary:b,affine:v,metadata:_}=c;let C=ve(c.extent.spatialReference?.wkt||c.extent.spatialReference?.wkid),S=!1;null==C&&(S=!0,C=new Z.Z({wkid:3857}));const R=new z.Z({...c.extent,spatialReference:C}),T=new K.Z(R?{x:R.xmin,y:R.ymax,spatialReference:C}:{x:0,y:0}),k=new G.Z({blockWidth:h,blockHeight:p,pyramidBlockWidth:w,pyramidBlockHeight:I,compression:y,origin:T,firstPyramidLevel:g,maximumPyramidLevel:x,blockBoundary:b}),P=new K.Z({x:(R.xmax-R.xmin)/f,y:(R.ymax-R.ymin)/u,spatialReference:C}),M=_?{BandProperties:_.bandProperties,DataType:_.dataType}:{},F=new q.Z({width:f,height:u,bandCount:d,pixelType:m,compression:y,pixelSize:P,storageInfo:k,spatialReference:C,isPseudoSpatialReference:S,keyProperties:M,extent:R,statistics:_?_.statistics:null});if(v?.length&&(F.nativeExtent=new z.Z({xmin:-.5,ymin:.5-u,xmax:f-.5,ymax:.5,spatialReference:C}),F.transform=new Ie.Z({polynomialOrder:1,forwardCoefficients:[v[2]+v[0]/2,v[5]-v[3]/2,v[0],v[3],-v[1],-v[4]]}),F.extent=F.transform.forwardTransform(F.nativeExtent),F.pixelSize=new K.Z({x:(R.xmax-R.xmin)/f,y:(R.ymax-R.ymin)/u,spatialReference:C}),k.origin.x=-.5,k.origin.y=.5),!this.ioConfig.skipExtensions?.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){if(F.statistics=t.statistics??F.statistics,F.histograms=t.histograms,t.histograms&&(0,a.Wi)(F.statistics)&&(F.statistics=(0,fe.Oh)(t.histograms)),t.transform&&!v){F.transform=t.transform,F.nativeExtent=F.extent;const e=F.transform.forwardTransform(F.nativeExtent);F.pixelSize=new K.Z({x:(e.xmax-e.xmin)/f,y:(e.ymax-e.ymin)/u,spatialReference:C}),F.extent=e}F.spatialReference||(F.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",F),this._headerInfo={littleEndian:n,isBigTiff:s,ifds:l,...c},!this._headerInfo.isSupported)throw new o.Z("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,i))return null;const r=this._getTileLocation(e,t,i);if(!r)return null;const{ranges:s,actualTileWidth:o,actualTileHeight:a,ifd:l}=r,c=s.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:n.signal}))),f=await Promise.all(c),u=f.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),h=1===f.length?f[0].data:new ArrayBuffer(u),p=[0],d=[0];if(f.length>1){const e=new Uint8Array(h);for(let t=0,i=0;t<f.length;t++){const n=f[t].data;e.set(new Uint8Array(n),i),p[t]=i,i+=n.byteLength,d[t]=n.byteLength}}const{blockWidth:m,blockHeight:y}=this.getBlockWidthHeight(e),g=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:l,offsets:p,sizes:d},width:m,height:y,planes:null,pixelType:null});let x,w,I;if(o!==m||a!==y){let e=g.mask;if(e)for(x=0;x<y;x++)if(I=x*m,x<a)for(w=o;w<m;w++)e[I+w]=0;else for(w=0;w<m;w++)e[I+w]=0;else for(e=new Uint8Array(m*y),g.mask=e,x=0;x<a;x++)for(I=x*m,w=0;w<o;w++)e[I+w]=1}return g}async _readIFDs(e,t,i,n,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:4,o=arguments.length>6?arguments[6]:void 0;if(!n)return null;(n>=t.byteLength||n<0)&&(t=(await this.request(this.url,{range:{from:n+r,to:n+r+this._bufferSize},responseType:"array-buffer",signal:o})).data,r=n+r,n=0);const a=await this._readIFD(t,i,n,r,Le.Z.TIFF_TAGS,s,o);if(e.push(a.ifd),!a.nextIFD)return null;await this._readIFDs(e,t,i,a.nextIFD-r,r,s,o)}async _readIFD(e,t,i,n){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Le.Z.TIFF_TAGS,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:4,o=arguments.length>6?arguments[6]:void 0;if(!e)return null;const a=(0,We.vr)(e,t,i,n,r,s);if(a.success){const i=[];if(a.ifd.forEach((e=>{e.values||i.push(e)})),i.length>0){const r=i.map((e=>e.offlineOffsetSize)),s=Math.min.apply(null,r.map((e=>e[0])));if(Math.min.apply(null,r.map((e=>e[0]+e[1])))-s<=this._bufferSize){const{data:r}=await this.request(this.url,{range:{from:s,to:s+this._bufferSize},responseType:"array-buffer",signal:o});e=r,n=s,i.forEach((i=>(0,We.Dq)(e,t,i,n)))}}if(a.ifd.has("GEOKEYDIRECTORY")){const i=a.ifd.get("GEOKEYDIRECTORY"),r=i.values;if(r&&r.length>4){const s=r[0]+"."+r[1]+"."+r[2],a=await this._readIFD(e,t,i.valueOffset+6-n,n,Le.Z.GEO_KEYS,2,o);i.data=a.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return a}if(a.requiredBufferSize&&a.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:n,to:n+a.requiredBufferSize+4},responseType:"array-buffer",signal:o});return(e=i.data).byteLength<a.requiredBufferSize?null:this._readIFD(e,t,0,n,Le.Z.TIFF_TAGS,4,o)}}_getTileLocation(e,t,i){const{firstPyramidLevel:n,blockBoundary:r}=this.rasterInfo.storageInfo,s=0===e?0:e-(n-1),o=this._headerInfo.ifds[s];if(!o)return null;const a=(0,We.If)(o,this._headerInfo),l=He(o,"TILEOFFSETS");if(void 0===l)return null;const c=He(o,"TILEBYTECOUNTS"),{minRow:f,minCol:u,maxRow:h,maxCol:p}=r[s];if(t>h||i>p||t<f||i<u)return null;const d=Ae(o,"IMAGEWIDTH"),m=Ae(o,"IMAGELENGTH"),y=Ae(o,"TILEWIDTH"),g=Ae(o,"TILELENGTH"),x=a?this.rasterInfo.bandCount:1,w=x*t*(p+1)+i,I=[{from:l[w],to:l[w+x-1]+c[w+x-1]-1}];if(a){let e=!0;for(let t=0;t<x;t++)if(l[w+t]+c[w+t]!==l[w+t+1]){e=!1;break}if(!e)for(let t=0;t<x;t++)I[t]={from:l[w+t],to:l[w+t]+c[w+t]-1}}const b=l[w],v=c[w];return null==b||null==v?null:{ranges:I,ifd:o,actualTileWidth:i===p?d%y:y,actualTileHeight:t===h?m%g:g}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return Ce(t)}catch{return null}}};(0,n._)([(0,u.Cb)()],je.prototype,"_files",void 0),(0,n._)([(0,u.Cb)()],je.prototype,"_headerInfo",void 0),(0,n._)([(0,u.Cb)()],je.prototype,"_bufferSize",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],je.prototype,"datasetFormat",void 0),je=(0,n._)([(0,y.j)("esri.layers.support.rasterDatasets.TIFFRaster")],je);const qe=je,Ge=new Map;Ge.set("CRF",{desc:"Cloud Raster Format",constructor:ce}),Ge.set("MRF",{desc:"Meta Raster Format",constructor:Je}),Ge.set("TIFF",{desc:"GeoTIFF",constructor:qe}),Ge.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Be}),Ge.set("JPG",{desc:"JPG Raster Format",constructor:Re}),Ge.set("PNG",{desc:"PNG Raster Format",constructor:Re}),Ge.set("GIF",{desc:"GIF Raster Format",constructor:Re}),Ge.set("BMP",{desc:"BMP Raster Format",constructor:Re});var Ue=i(81085);let $e=class extends((0,x.h)((0,L.M)((0,E.q)((0,J.I)((0,w.N)(N((0,H.n)((0,W.Q)((0,l.R)(g.Z)))))))))){constructor(){super(...arguments),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,a.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.r9).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let e=[new A.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const t=this.rasterInfo?.attributeTable?.fields;if(t){const i=t.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));e=e.concat(i)}const i=this.rasterInfo.dataType;if(("vector-magdir"===i||"vector-uv"===i)&&(0,a.pC)(this.rasterInfo.multidimensionalInfo)){const t=this.rasterInfo.multidimensionalInfo.variables[0].unit?.trim(),i="Magnitude"+(t?` (${t})`:"");e.push(new A.Z({name:"Raster.Magnitude",alias:i,domain:null,editable:!1,type:"double"})),e.push(new A.Z({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return e}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const n=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,r=(0,s.ij)(n,i)||void 0;if(null!=r)return r}createPopupTemplate(e){return(0,Ue.eZ)({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new o.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return Ge.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:n}=e;let r=e.datasetFormat;null==r&&t.lastIndexOf(".")&&(r=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===r||"TIF"===r?r="TIFF":"JPG"!==r&&"JPEG"!==r&&"JFIF"!==r||(r="JPG"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(r="RasterTileServer");const s={url:t,sourceJSON:n,datasetFormat:r,ioConfig:i||{bandIds:null,sampling:null}};let a,l;if(this.supportedFormats.has(r)){if("CRF"===r&&!i.enableCRF)throw new o.Z("rasterfactory:open",`cannot open raster: ${t}`);return a=Ge.get(r).constructor,l=new a(s),await l.open({signal:e.signal}),l}if(r)throw new o.Z("rasterfactory:open","not a supported format "+r);const c=Array.from(Ge.keys());let f=0;const u=()=>(r=c[f++],r&&("CRF"!==r||i.enableCRF)?(a=Ge.get(r).constructor,l=new a(s),l.open({signal:e.signal}).then((()=>l)).catch((()=>u()))):null);return u()}static register(e,t,i){Ge.has(e.toUpperCase())||Ge.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new o.Z("imagery-tile-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.own((0,f.YP)((()=>this.customParameters),(e=>{this.raster.ioConfig.customFetchParameters=e})))}};(0,n._)([(0,u.Cb)({type:[p.z8],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],$e.prototype,"bandIds",void 0),(0,n._)([(0,u.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,d.J)(j.c)],$e.prototype,"interpolation",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],$e.prototype,"multidimensionalDefinition",void 0),(0,n._)([(0,u.Cb)(S.rn)],$e.prototype,"legendEnabled",void 0),(0,n._)([(0,u.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],$e.prototype,"isReference",void 0),(0,n._)([(0,u.Cb)({type:["show","hide"]})],$e.prototype,"listMode",void 0),(0,n._)([(0,u.Cb)({json:{read:!0,write:!0}})],$e.prototype,"blendMode",void 0),(0,n._)([(0,u.Cb)()],$e.prototype,"sourceJSON",void 0),(0,n._)([(0,u.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],$e.prototype,"version",void 0),(0,n._)([(0,u.Cb)()],$e.prototype,"title",void 0),(0,n._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],$e.prototype,"type",void 0),(0,n._)([(0,u.Cb)({type:["ArcGISTiledImageServiceLayer"]})],$e.prototype,"operationalLayerType",void 0),(0,n._)([(0,u.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],$e.prototype,"popupEnabled",void 0),(0,n._)([(0,u.Cb)({type:r.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],$e.prototype,"popupTemplate",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],$e.prototype,"defaultPopupTemplate",null),(0,n._)([(0,u.Cb)({readOnly:!0,type:[A.Z]})],$e.prototype,"fields",void 0),(0,n._)([(0,u.Cb)({readOnly:!0,type:[A.Z]})],$e.prototype,"rasterFields",null),(0,n._)([(0,u.Cb)({types:s.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const e="raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!e}}},origins:{"web-scene":{types:s.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],$e.prototype,"renderer",null),(0,n._)([(0,m.r)("renderer")],$e.prototype,"readRenderer",null),$e=(0,n._)([(0,y.j)("esri.layers.ImageryTileLayer")],$e);const Ve=$e},55635:(e,t,i)=>{i.d(t,{OE:()=>u,Gc:()=>d,Qg:()=>h,Rq:()=>l,gX:()=>p,z2:()=>c,ET:()=>f,Vx:()=>y});i(59486);var n=i(92026);var r=i(80394),s=i(7882);const o=new Map,a=new class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:15e3,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.refCount--,e.refCount<=0&&(n.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.ts=Date.now(),e.refCount++,n.delete(i),n.set(i,e),e.block}return null}putBlock(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=this._cachedBlocks,s=e+"/"+t;if(r.has(s)){const e=r.get(s);e.ts=Date.now(),e.refCount++}else r.set(s,{block:i,ts:Date.now(),refCount:1,controller:n});this._trim(),this._updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,n=e+"/"+t;i.has(n)&&i.delete(n)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),i=Date.now();for(let n=0;n<t.length&&t[n][1].ts<=i-this._duration;n++)e.delete(t[n][0]);0===e.size&&this._clearTimer()}),this._interval)}_trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function l(e,t){return null==t?e:`${e}?sliceId=${t}`}function c(e,t){const i={extent:null,rasterInfo:t,cache:new Map};if(o.has(e)){const t=o.get(e);return t.push(i),t.length-1}return o.set(e,[i]),0}function f(e,t){if(o.has(e)){const i=o.get(e);i[t]=null,i.some((e=>null!=e))||o.delete(e)}}function u(e,t,i){if(!o.has(e))return null==t?a.decreaseRefCount(e,i):0;const n=o.get(e);if(null==n[t])return a.decreaseRefCount(e,i);const r=n[t].cache;if(r.has(i)){const e=r.get(i);if(e.refCount--,0===e.refCount){r.delete(i);for(let e=0;e<n.length;e++)n[e]&&n[e].cache.has(i)&&n[e].cache.delete(i);e.controller&&e.controller.abort()}return e.refCount}return 0}function h(e,t,i){if(!o.has(e))return null==t?a.getBlock(e,i):null;const n=o.get(e);if(null==n[t]){for(let e=0;e<n.length;e++)if(n[e]&&n[e].cache.has(i)){const t=n[e].cache.get(i);return t.refCount++,t.block}return a.getBlock(e,i)}const r=n[t].cache;if(r.has(i)){const e=r.get(i);return e.refCount++,e.block}for(let s=0;s<n.length;s++)if(s!==t&&n[s]&&n[s]&&n[s].cache.has(i)){const e=n[s].cache.get(i);return e.refCount++,r.set(i,e),e.block}return null}function p(e,t,i,n){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;if(!o.has(e))return void(null==t&&a.putBlock(e,i,n,r));const s=o.get(e);if(null==s[t])return void a.putBlock(e,i,n,r);const l={refCount:1,block:n,isResolved:!1,isRejected:!1,controller:r};n.then((()=>l.isResolved=!0)).catch((()=>l.isRejected=!0)),s[t].cache.set(i,l)}function d(e,t,i){if(!o.has(e))return void(null==t&&a.deleteBlock(e,i));const n=o.get(e);null!=n[t]?n[t].cache.delete(i):a.deleteBlock(e,i)}function m(e,t){if(!o.has(e))return null;const i=o.get(e);return null==i[t]?null:i[t]}function y(e,t,i,o,a,l){let c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const f=m(e,t),u=f.extent,{cache:h,rasterInfo:p}=f;if(u&&u.xmin===i.xmin&&u.xmax===i.xmax&&u.ymin===i.ymin&&u.ymax===i.ymax)return;const d=i.clone().normalize(),{spatialReference:y,transform:g}=p,x=new Set;for(let m=0;m<d.length;m++){const e=d[m];if(e.xmax-e.xmin<=o||e.ymax-e.ymin<=o)continue;let t=(0,r.tB)(e,y,c);(0,n.pC)(g)&&(t=g.inverseTransform(t));const i=new s.Z({x:o,y:o,spatialReference:e.spatialReference});if(null==a&&!(a=(0,r.VO)(i,y,e,c)))return;const{pyramidLevel:f,pyramidResolution:u,excessiveReading:h}=(0,r.kr)(a,p,l||"closest");if(h)return;const{storageInfo:w}=p,{origin:I}=w,b={x:Math.max(0,Math.floor((t.xmin-I.x)/u.x)),y:Math.max(0,Math.floor((I.y-t.ymax)/u.y))},v=Math.ceil((t.xmax-t.xmin)/u.x-.1),_=Math.ceil((t.ymax-t.ymin)/u.y-.1),C=f>0?w.pyramidBlockWidth:w.blockWidth,S=f>0?w.pyramidBlockHeight:w.blockHeight,R=1,T=Math.max(0,Math.floor(b.x/C)-R),k=Math.max(0,Math.floor(b.y/S)-R),P=Math.floor((b.x+v-1)/C)+R,M=Math.floor((b.y+_-1)/S)+R;for(let n=k;n<=M;n++)for(let e=T;e<=P;e++)x.add(`${f}/${n}/${e}`)}h.forEach(((e,t)=>{if(!x.has(t)){const e=h.get(t);(null==e||e.isResolved||e.isRejected)&&h.delete(t)}})),f.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax}}},32935:(e,t,i)=>{i.d(t,{Z:()=>l});var n=i(27366),r=i(46784),s=i(49861),o=(i(63780),i(93169),i(25243),i(69912));let a=class extends r.wq{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,n._)([(0,s.Cb)()],a.prototype,"affectsPixelSize",null),(0,n._)([(0,s.Cb)({json:{write:!0}})],a.prototype,"spatialReference",void 0),a=(0,n._)([(0,o.j)("esri.layers.support.rasterTransforms.BaseRasterTransform")],a);const l=a},3089:(e,t,i)=>{i.d(t,{Z:()=>c});var n=i(27366),r=i(49861),s=(i(63780),i(93169),i(25243),i(27135)),o=i(69912),a=i(32935);let l=class extends a.Z{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}};(0,n._)([(0,s.J)({GCSShiftXform:"gcs-shift"})],l.prototype,"type",void 0),(0,n._)([(0,r.Cb)()],l.prototype,"tolerance",void 0),l=(0,n._)([(0,o.j)("esri.layers.support.rasterTransforms.GCSShiftTransform")],l);const c=l},69405:(e,t,i)=>{i.d(t,{Z:()=>m});var n=i(27366),r=(i(59486),i(49861)),s=(i(63780),i(93169),i(25243),i(27135)),o=i(38511),a=i(69912),l=i(31201),c=i(32935),f=i(7882),u=i(53866);function h(e,t,i){const{x:n,y:r}=t;if(i<2)return{x:e[0]+n*e[2]+r*e[4],y:e[1]+n*e[3]+r*e[5]};if(2===i){const t=n*n,i=r*r,s=n*r;return{x:e[0]+n*e[2]+r*e[4]+t*e[6]+s*e[8]+i*e[10],y:e[1]+n*e[3]+r*e[5]+t*e[7]+s*e[9]+i*e[11]}}const s=n*n,o=r*r,a=n*r,l=s*n,c=s*r,f=n*o,u=r*o;return{x:e[0]+n*e[2]+r*e[4]+s*e[6]+a*e[8]+o*e[10]+l*e[12]+c*e[14]+f*e[16]+u*e[18],y:e[1]+n*e[3]+r*e[5]+s*e[7]+a*e[9]+o*e[11]+l*e[13]+c*e[15]+f*e[17]+u*e[19]}}function p(e,t,i){const{xmin:n,ymin:r,xmax:s,ymax:o,spatialReference:a}=t;let l=[];if(i<2)l.push({x:n,y:o}),l.push({x:s,y:o}),l.push({x:n,y:r}),l.push({x:s,y:r});else{let e=10;for(let t=0;t<e;t++)l.push({x:n,y:r+(o-r)*t/(e-1)}),l.push({x:s,y:r+(o-r)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:n+(s-n)*t/e,y:r}),l.push({x:n+(s-n)*t/e,y:o})}l=l.map((t=>h(e,t,i)));const c=l.map((e=>e.x)),f=l.map((e=>e.y));return new u.Z({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,f),ymax:Math.max.apply(null,f),spatialReference:a})}let d=class extends c.Z{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:n}=t;if(!i?.length||!n?.length||i.length!==n.length)return null;const r=[];for(let s=0;s<i.length;s++)r.push(i[s]),r.push(n[s]);return r}writeForwardCoefficients(e,t,i){const n=[],r=[];for(let s=0;s<e?.length;s++)s%2==0?n.push(e[s]):r.push(e[s]);t.coeffX=n,t.coeffY=r}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,n,r,s,o]=e,a=n*o-s*r,l=s*r-n*o;return[(s*i-t*o)/a,(n*i-t*r)/l,o/a,r/l,-s/a,-n/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:n}=t;if(!i?.length||!n?.length||i.length!==n.length)return null;const r=[];for(let s=0;s<i.length;s++)r.push(i[s]),r.push(n[s]);return r}writeInverseCoefficients(e,t,i){const n=[],r=[];for(let s=0;s<e?.length;s++)s%2==0?n.push(e[s]):r.push(e[s]);t.inverseCoeffX=n,t.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const t=h(this.forwardCoefficients,e,this.polynomialOrder);return new f.Z({x:t.x,y:t.y,spatialReference:e.spatialReference})}return p(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=h(this.inverseCoefficients,e,this.polynomialOrder);return new f.Z({x:t.x,y:t.y,spatialReference:e.spatialReference})}return p(this.inverseCoefficients,e,this.polynomialOrder)}};(0,n._)([(0,r.Cb)({json:{write:!0}})],d.prototype,"polynomialOrder",void 0),(0,n._)([(0,r.Cb)()],d.prototype,"forwardCoefficients",void 0),(0,n._)([(0,o.r)("forwardCoefficients",["coeffX","coeffY"])],d.prototype,"readForwardCoefficients",null),(0,n._)([(0,l.c)("forwardCoefficients")],d.prototype,"writeForwardCoefficients",null),(0,n._)([(0,r.Cb)({json:{write:!0}})],d.prototype,"inverseCoefficients",null),(0,n._)([(0,o.r)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],d.prototype,"readInverseCoefficients",null),(0,n._)([(0,l.c)("inverseCoefficients")],d.prototype,"writeInverseCoefficients",null),(0,n._)([(0,r.Cb)()],d.prototype,"affectsPixelSize",null),(0,n._)([(0,s.J)({PolynomialXform:"polynomial"})],d.prototype,"type",void 0),d=(0,n._)([(0,a.j)("esri.layers.support.rasterTransforms.PolynomialTransform")],d);const m=d},77960:(e,t,i)=>{i.d(t,{j:()=>p,c:()=>d});var n=i(3089),r=i(27366),s=(i(32718),i(25243),i(63780),i(93169),i(75366),i(27135)),o=i(69912),a=i(32935);let l=class extends a.Z{constructor(){super(...arguments),this.type="identity"}};(0,r._)([(0,s.J)({IdentityXform:"identity"})],l.prototype,"type",void 0),l=(0,r._)([(0,o.j)("esri.layers.support.rasterTransforms.IdentityTransform")],l);const c=l;var f=i(69405);const u={GCSShiftXform:n.Z,IdentityXform:c,PolynomialXform:f.Z},h=Object.keys(u);function p(e){const t=e?.type;return!e||h.includes(t)}function d(e){const t=e?.type;if(!t)return null;const i=u[e?.type];if(i){const t=new i;return t.read(e),t}return null}},49818:(e,t,i)=>{i.r(t),i.d(t,{default:()=>I});var n,r=i(27366),s=i(59486),o=i(52639),a=i(43404),l=i(46784),c=i(84652),f=i(92026),u=i(49861),h=(i(25243),i(38511)),p=i(69912),d=i(31201),m=i(78952),y=i(77981),g=i(83040);const x=new a.X({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let w=n=class extends l.wq{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){const i=m.Z.fromJSON(t.spatialReference),n=[];for(let r=0;r<e.length;r++){const t=e[r],s=o.Z.fromJSON(t),a=t.geometry&&t.geometry.spatialReference;(0,f.pC)(s.geometry)&&!a&&(s.geometry.spatialReference=i);const l=t.aggregateGeometries,c=s.aggregateGeometries;if(l&&(0,f.pC)(c))for(const e in c){const t=c[e],n=l[e]?.spatialReference;(0,f.pC)(t)&&!n&&(t.spatialReference=i)}n.push(s)}return n}writeGeometryType(e,t,i,n){if(e)return void x.write(e,t,i,n);const{features:r}=this;if(r)for(const s of r)if(s&&(0,f.pC)(s.geometry))return void x.write(s.geometry.type,t,i,n)}readQueryGeometry(e,t){if(!e)return null;const i=!!e.spatialReference,n=(0,y.im)(e);return!i&&t.spatialReference&&(n.spatialReference=m.Z.fromJSON(t.spatialReference)),n}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:i}=this;if(i)for(const n of i)if(n&&(0,f.pC)(n.geometry)&&n.geometry.spatialReference)return void(t.spatialReference=n.geometry.spatialReference.toJSON())}clone(){return new n(this.cloneProperties())}cloneProperties(){return(0,c.d9)({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(e){const t=this.write();if(t.features&&Array.isArray(e)&&e.length>0)for(let i=0;i<t.features.length;i++){const n=t.features[i];if(n.geometry){const t=e&&e[i];n.geometry=t&&t.toJSON()||n.geometry}}return t}quantize(e){const{scale:[t,i],translate:[n,r]}=e,s=this.features,o=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-n)/t)),(e=>Math.round((r-e)/i)));for(let a=0,l=s.length;a<l;a++)o((0,f.Wg)(s[a].geometry))||(s.splice(a,1),a--,l--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:i}=this;if(!i)return this;const{translate:[n,r],scale:[s,o]}=i,a=this._getHydrationFunction(e,(e=>e*s+n),(e=>r-e*o));for(const{geometry:l}of t)(0,f.pC)(l)&&a(l);return this.transform=null,this}_quantizePoints(e,t,i){let n,r;const s=[];for(let o=0,a=e.length;o<a;o++){const a=e[o];if(o>0){const e=t(a[0]),o=i(a[1]);e===n&&o===r||(s.push([e-n,o-r]),n=e,r=o)}else n=t(a[0]),r=i(a[1]),s.push([n,r])}return s.length>0?s:null}_getQuantizationFunction(e,t,i){return"point"===e?e=>(e.x=t(e.x),e.y=i(e.y),e):"polyline"===e||"polygon"===e?e=>{const n=(0,y.oU)(e)?e.rings:e.paths,r=[];for(let s=0,o=n.length;s<o;s++){const e=n[s],o=this._quantizePoints(e,t,i);o&&r.push(o)}return r.length>0?((0,y.oU)(e)?e.rings=r:e.paths=r,e):null}:"multipoint"===e?e=>{const n=this._quantizePoints(e.points,t,i);return n.length>0?(e.points=n,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,i){return"point"===e?e=>{e.x=t(e.x),e.y=i(e.y)}:"polyline"===e||"polygon"===e?e=>{const n=(0,y.oU)(e)?e.rings:e.paths;let r,s;for(let o=0,a=n.length;o<a;o++){const e=n[o];for(let n=0,o=e.length;n<o;n++){const o=e[n];n>0?(r+=o[0],s+=o[1]):(r=o[0],s=o[1]),o[0]=t(r),o[1]=i(s)}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=i(e.ymin),e.xmax=t(e.xmax),e.ymax=i(e.ymax)}:"multipoint"===e?e=>{const n=e.points;let r,s;for(let o=0,a=n.length;o<a;o++){const e=n[o];o>0?(r+=e[0],s+=e[1]):(r=e[0],s=e[1]),e[0]=t(r),e[1]=i(s)}}:void 0}};(0,r._)([(0,u.Cb)({type:String,json:{write:!0}})],w.prototype,"displayFieldName",void 0),(0,r._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],w.prototype,"exceededTransferLimit",void 0),(0,r._)([(0,u.Cb)({type:[o.Z],json:{write:!0}})],w.prototype,"features",void 0),(0,r._)([(0,h.r)("features")],w.prototype,"readFeatures",null),(0,r._)([(0,u.Cb)({type:[g.Z],json:{write:!0}})],w.prototype,"fields",void 0),(0,r._)([(0,u.Cb)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:x.read}}})],w.prototype,"geometryType",void 0),(0,r._)([(0,d.c)("geometryType")],w.prototype,"writeGeometryType",null),(0,r._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],w.prototype,"hasM",void 0),(0,r._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],w.prototype,"hasZ",void 0),(0,r._)([(0,u.Cb)({types:s.qM,json:{write:!0}})],w.prototype,"queryGeometry",void 0),(0,r._)([(0,h.r)("queryGeometry")],w.prototype,"readQueryGeometry",null),(0,r._)([(0,u.Cb)({type:m.Z,json:{write:!0}})],w.prototype,"spatialReference",void 0),(0,r._)([(0,d.c)("spatialReference")],w.prototype,"writeSpatialReference",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],w.prototype,"transform",void 0),w=n=(0,r._)([(0,p.j)("esri.rest.support.FeatureSet")],w),w.prototype.toJSON.isDefaultToJSON=!0;const I=w}}]);
//# sourceMappingURL=5602.3a1be1d5.chunk.js.map