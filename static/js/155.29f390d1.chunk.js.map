{"version":3,"sources":["Components/Overview/utils/overview.ts","Components/Overview/Overview.tsx","../node_modules/@arcgis/core/layers/GraphicsLayer.js"],"names":["setGraphicSymbol","overview","scheme","type","basemap","map","geometryType","basemapTheme","SimpleFillSymbol","color","r","g","b","Panel","props","ref","useRef","useEffect","view","expand","ArcGISMap","console","log","document","querySelector","MapView","navigation","browserTouchPanEnabled","mouseWheelZoomEnabled","container","ui","remove","createOverview","current","content","when","then","mainView","extent","clone","graphicLayer","GraphicsLayer","listMode","opacity","add","Graphic","symbol","watch","graphics","getItemAt","geometry","goTo","target","duration","easing","rotation","configureOverview","className","n","i","p","s","constructor","super","this","elevationInfo","a","screenSizePerspectiveEnabled","internal","destroy","removeAll","addMany","removeMany","on","e","graphicChanged","emit","t","prototype","c","readOnly","constructOnly","o","h"],"mappings":"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","file":"static/js/155.29f390d1.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport ArcGISMap from '@arcgis/core/Map';\nimport MapView from '@arcgis/core/views/MapView';\nimport GraphicsLayer from '@arcgis/core/layers/GraphicsLayer';\nimport Graphic from '@arcgis/core/Graphic';\nimport SimpleFillSymbol from '@arcgis/core/symbols/SimpleFillSymbol';\nimport * as type from '@arcgis/core/smartMapping/symbology/type';\nexport const createOverview = (view: __esri.MapView): __esri.MapView => {\n  const map: ArcGISMap = new ArcGISMap({ basemap: view.map.basemap });\n  console.log(document.querySelector('#overviewMap'));\n  const overview = new MapView({\n    map: map,\n    navigation: {\n      browserTouchPanEnabled: false,\n      mouseWheelZoomEnabled: false,\n    },\n    container: 'overviewMap',\n  });\n  overview.ui.remove('zoom');\n  overview.ui.remove('attribution');\n  return overview;\n};\nconst setGraphicSymbol = (overview: __esri.MapView): SimpleFillSymbol | undefined => {\n  const scheme = type.getSchemes({ basemap: overview.map.basemap, geometryType: 'polygon' });\n  if (scheme.basemapTheme === 'light') {\n    return new SimpleFillSymbol({ color: { r: 0, g: 0, b: 0 } as __esri.Color });\n  }\n  if (scheme.basemapTheme === 'dark') {\n    return new SimpleFillSymbol({ color: { r: 255, g: 255, b: 255 } as __esri.Color });\n  }\n};\nexport const configureOverview = (overview: __esri.MapView, mainView: __esri.MapView): void => {\n  overview.map.basemap = mainView.map.basemap;\n  let extent = mainView.extent.clone();\n  extent.expand(4);\n  overview.extent = extent;\n  const graphicLayer = new GraphicsLayer({ listMode: 'hide', opacity: 0.5 });\n  graphicLayer.add(new Graphic({ symbol: setGraphicSymbol(overview) }));\n  overview.map.add(graphicLayer);\n  mainView.watch(['stationary'], () => {\n    graphicLayer.graphics.getItemAt(0).geometry = mainView.extent;\n    extent = mainView.extent.clone();\n    extent.expand(4);\n    overview.goTo({ target: extent }, { duration: 1000, easing: 'ease' });\n  });\n  mainView.map.watch('basemap', (basemap) => {\n    overview.map.basemap = basemap;\n    graphicLayer.graphics.getItemAt(0).symbol = setGraphicSymbol(overview) as __esri.SimpleFillSymbol;\n  });\n  mainView.watch('rotation', (rotation) => {\n    (overview as any).rotation = rotation;\n  });\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useRef } from 'react';\n\nimport './Overview.scss';\nimport { configureOverview, createOverview } from './utils/overview';\nexport const Panel = (props: any) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (props.view && props.expand) {\n      const overview = createOverview(props.view);\n      overview.container = ref.current as HTMLDivElement;\n      (props.expand as __esri.Expand).content = ref.current as HTMLDivElement;\n      overview.when().then(() => {\n        configureOverview(overview, props.view);\n      });\n    }\n\n    return () => {\n      console.log('clean up');\n    };\n  }, []); // only after initial render\n\n  return <div className=\"overview-map\" ref={ref}></div>;\n};\nexport default Panel;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.19/esri/copyright.txt for details.\n*/\nimport{_ as r}from\"../chunks/tslib.es6.js\";import\"../core/has.js\";import\"../core/Logger.js\";import\"../core/accessorSupport/ensureType.js\";import{property as e}from\"../core/accessorSupport/decorators/property.js\";import{subclass as o}from\"../core/accessorSupport/decorators/subclass.js\";import\"../core/urlUtils.js\";import\"../core/uuid.js\";import\"../portal/support/resourceExtension.js\";import s from\"./Layer.js\";import t from\"../symbols/support/ElevationInfo.js\";import{BlendLayer as i}from\"./mixins/BlendLayer.js\";import{ScaleRangeLayer as p}from\"./mixins/ScaleRangeLayer.js\";import a,{graphicsCollectionProperty as c}from\"../support/GraphicsCollection.js\";let n=class extends(i(p(s))){constructor(r){super(r),this.elevationInfo=null,this.graphics=new a,this.screenSizePerspectiveEnabled=!0,this.type=\"graphics\",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(r){return this.graphics.add(r),this}addMany(r){return this.graphics.addMany(r),this}removeAll(){return this.graphics.removeAll(),this}remove(r){this.graphics.remove(r)}removeMany(r){this.graphics.removeMany(r)}on(r,e){return super.on(r,e)}graphicChanged(r){this.emit(\"graphic-update\",r)}};r([e({type:t})],n.prototype,\"elevationInfo\",void 0),r([e(c())],n.prototype,\"graphics\",void 0),r([e({type:[\"show\",\"hide\"]})],n.prototype,\"listMode\",void 0),r([e()],n.prototype,\"screenSizePerspectiveEnabled\",void 0),r([e({readOnly:!0})],n.prototype,\"type\",void 0),r([e({constructOnly:!0})],n.prototype,\"internal\",void 0),n=r([o(\"esri.layers.GraphicsLayer\")],n);var h=n;export default h;\n"],"sourceRoot":""}