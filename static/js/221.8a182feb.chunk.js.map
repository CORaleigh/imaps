{"version":3,"sources":["Components/TipManager/TipManager.tsx"],"names":["TipManager","props","ref","useRef","title","setTitle","useState","tips","setTips","closed","setClosed","theme","useContext","ThemeContext","useEffect","tipManagerToggled","event","target","tipsDismissed","current","addEventListener","removeEventListener","tipsDimissed","length","class","dir","map","tip","i","heading","text","video","href","rel"],"mappings":"0HAAA,qFAKO,MAAMA,EAAcC,IACzB,MAAMC,EAAMC,oBACLC,EAAOC,GAAYC,sBACnBC,EAAMC,GAAWF,mBAAgB,KACjCG,EAAQC,GAAaJ,oBAAS,IAC/B,MAAEK,GAAUC,qBAAWC,KAmB7B,OAjBAC,qBAAU,KAAO,IAAD,EACd,MAAMC,EAAqBC,IACrBA,EAAMC,OAAOR,QACfR,EAAMiB,iBAIV,OADA,UAAAhB,EAAIiB,eAAJ,SAAaC,iBAAiB,0BAA2BL,GAClD,KAAO,IAAD,EACX,UAAAb,EAAIiB,eAAJ,SAAaE,oBAAoB,0BAA2BN,MAE7D,CAACd,EAAMqB,eACVR,qBAAU,KACRT,EAASJ,EAAMG,OACfI,EAAQ,IAAWP,EAAMM,OAEzBG,GAAWT,EAAMM,KAAKgB,UACrB,CAACtB,EAAMM,OAER,qCACEL,IAAKA,EACLsB,MAAQ,uBAAsBb,IAC9Bc,IAAI,MACJ,aAAW,QACX,qBAAoBrB,EACpB,wBAAsB,MACtB,YAAU,OACV,gBAAc,WACdK,OAAQA,EAAS,GAAK,KATxB,gBAWGF,QAXH,IAWGA,OAXH,EAWGA,EAAMmB,KAAI,CAACC,EAAKC,IAEb,8BAAaC,QAASF,EAAIvB,MAA1B,UACE,4BAAIuB,EAAIG,OACPH,EAAII,OACH,mBAAGC,KAAML,EAAII,MAAOd,OAAO,SAASgB,IAAI,aAAxC,oCAHkCN,EAAIvB,MAAQwB,QAa7C5B","file":"static/js/221.8a182feb.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport ThemeContext from '../ThemeContext';\nimport './TipManager.scss';\nexport const TipManager = (props: any) => {\n  const ref = useRef<HTMLElement>();\n  const [title, setTitle] = useState();\n  const [tips, setTips] = useState<any[]>([]);\n  const [closed, setClosed] = useState(true);\n  const { theme } = useContext(ThemeContext);\n\n  useEffect(() => {\n    const tipManagerToggled = (event: any) => {\n      if (event.target.closed) {\n        props.tipsDismissed();\n      }\n    };\n    ref.current?.addEventListener('calciteTipManagerToggle', tipManagerToggled);\n    return () => {\n      ref.current?.removeEventListener('calciteTipManagerToggle', tipManagerToggled);\n    };\n  }, [props.tipsDimissed]);\n  useEffect(() => {\n    setTitle(props.title);\n    setTips([...[], ...props.tips]);\n\n    setClosed(!props.tips.length);\n  }, [props.tips]); // only after initial render\n  return (\n    <calcite-tip-manager\n      ref={ref}\n      class={`shell calcite-theme-${theme}`}\n      dir=\"ltr\"\n      intl-close=\"Close\"\n      intl-default-title={title}\n      intl-pagination-label=\"Tip\"\n      intl-next=\"Next\"\n      intl-previous=\"Previous\"\n      closed={closed ? '' : null}\n    >\n      {tips?.map((tip, i) => {\n        return (\n          <calcite-tip heading={tip.title} key={tip.title + i}>\n            <p>{tip.text}</p>\n            {tip.video && (\n              <a href={tip.video} target=\"_blank\" rel=\"noreferrer\">\n                Watch video tutorial\n              </a>\n            )}\n          </calcite-tip>\n        );\n      })}\n    </calcite-tip-manager>\n  );\n};\nexport default TipManager;\n"],"sourceRoot":""}