{"version":3,"sources":["Components/Header/Header.tsx"],"names":["Header","props","ref","useRef","links","setLinks","useState","theme","setTheme","useContext","ThemeContext","useEffect","current","addEventListener","event","requestAnimationFrame","target","querySelector","getAttribute","styles","document","querySelectorAll","Array","from","forEach","style","i","innerHTML","includes","head","appendChild","placement","scale","width","type","slot","icon","map","group","selection-mode","group-title","title","link","rel","href","value","active"],"mappings":"0HAAA,iFAMO,MAAMA,EAAUC,IACrB,MAAMC,EAAMC,oBACLC,EAAOC,GAAYC,mBAASL,EAAMG,QACnC,MAAEG,EAAF,SAASC,GAAaC,qBAAWC,KAgBvC,OAfAC,qBAAU,KAAO,IAAD,EACd,UAAAT,EAAIU,eAAJ,SAAaC,iBAAiB,yBAA0BC,IACtDC,uBAAsB,KACpB,MAAMR,EAAQO,EAAME,OAAOC,cAAc,iCAAiCC,aAAa,SACvFV,EAASD,GACT,MAAMY,EAASC,SAASC,iBAAiB,SACtBC,MAAMC,KAAKJ,GACnBK,SAAQ,CAACC,EAAOC,KACrBD,EAAME,UAAUC,SAAU,+BAA8BrB,OAC1Da,SAASS,KAAKC,YAAYL,cAKjC,IAED,mCACE,uCACA,mCAAkBvB,IAAKA,EAAK6B,UAAU,kBAAkBC,MAAM,IAAIC,MAAM,IAAIC,KAAK,QAAjF,UACE,gCAAgBC,KAAK,mBAArB,SACE,8BAAcC,KAAK,gBAEpBhC,EAAMiC,KAAKC,GAER,wCAAwBC,iBAAe,OAAOC,cAAaF,EAAMG,MAAjE,SACGH,EAAMlC,MAAMiC,KAAKK,GAEd,uCAAuBC,IAAI,aAAaC,KAAMF,EAAKE,KAAM5B,OAAO,SAAhE,SACG0B,EAAKD,OADsEC,EAAKD,UAHZH,EAAMG,SAWvF,yCAAwBF,iBAAe,SAASC,cAAY,QAA5D,UACE,uCAAuBK,MAAM,QAAQC,OAAkB,UAAVvC,EAAoB,GAAK,KAAtE,mBAGA,uCAAuBsC,MAAM,OAAOC,OAAkB,SAAVvC,EAAmB,GAAK,KAApE,4BAQKP","file":"static/js/170.ebbd534d.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport ThemeContext from '../ThemeContext';\nimport './Header.scss';\nexport const Header = (props: any) => {\n  const ref = useRef<HTMLElement>();\n  const [links, setLinks] = useState(props.links);\n  const { theme, setTheme } = useContext(ThemeContext);\n  useEffect(() => {\n    ref.current?.addEventListener('calciteDropdownSelect', (event: any) => {\n      requestAnimationFrame(() => {\n        const theme = event.target.querySelector('calcite-dropdown-item[active]').getAttribute('value');\n        setTheme(theme);\n        const styles = document.querySelectorAll('style');\n        const styleArray = Array.from(styles);\n        styleArray.forEach((style, i) => {\n          if (style.innerHTML.includes(`--esri-calcite-theme-name: \"${theme}\"`)) {\n            document.head.appendChild(style);\n          }\n        });\n      });\n    });\n  }, []);\n  return (\n    <header>\n      <h2>iMAPS</h2>\n      <calcite-dropdown ref={ref} placement=\"bottom-trailing\" scale=\"m\" width=\"m\" type=\"click\">\n        <calcite-button slot=\"dropdown-trigger\">\n          <calcite-icon icon=\"hamburger\"></calcite-icon>\n        </calcite-button>\n        {links.map((group: any) => {\n          return (\n            <calcite-dropdown-group selection-mode=\"none\" group-title={group.title} key={group.title}>\n              {group.links.map((link: any) => {\n                return (\n                  <calcite-dropdown-item rel=\"noreferrer\" href={link.href} target=\"_blank\" key={link.title}>\n                    {link.title}\n                  </calcite-dropdown-item>\n                );\n              })}\n            </calcite-dropdown-group>\n          );\n        })}\n        <calcite-dropdown-group selection-mode=\"single\" group-title=\"Theme\">\n          <calcite-dropdown-item value=\"light\" active={theme === 'light' ? '' : null}>\n            Light\n          </calcite-dropdown-item>\n          <calcite-dropdown-item value=\"dark\" active={theme === 'dark' ? '' : null}>\n            Dark\n          </calcite-dropdown-item>\n        </calcite-dropdown-group>\n      </calcite-dropdown>\n    </header>\n  );\n};\nexport default Header;\n"],"sourceRoot":""}