(this.webpackJsonpimaps=this.webpackJsonpimaps||[]).push([[248],{307:function(t,e,s){"use strict";s.r(e),s.d(e,"DictionaryLoader",(function(){return b}));var i=s(105),o=s(103),r=s(88),n=s(87),a=s(282),l=s(85),c=s(91),u=s(155),y=s(130),f=s(430);const h=n.a.getLogger("esri.renderers.support.DictionaryLoader"),m={type:"CIMSimpleLineCallout",lineSymbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",width:.5,color:[0,0,0,255]}]}};class b{constructor(t,e,s){this.config=null,this.fieldMap=null,this.url=null,this._ongoingRequests=new Map,this._symbolCache=new a.a(100),this.url=t,this.config=e,this.fieldMap=s}getSymbolFields(){return this._symbolFields}async getSymbolAsync(t,e){let s;this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(e));try{s=await this._dictionaryPromise}catch(p){if(Object(c.l)(p))return this._dictionaryPromise=null,null}const o={};if(this.fieldMap)for(const i of this._symbolFields){const e=this.fieldMap[i];if(e&&null!=t.attributes[e]){const s=""+t.attributes[e];o[i]=s}else o[i]=""}const r=s(o,e);if(!r||"string"!=typeof r)return null;const n=Object(u.b)(r).toString(),a=this._symbolCache.get(n);if(a)return a.catch((()=>{this._symbolCache.pop(n)})),a;const y=r.split(";"),f=[],h=[];for(const l of y)if(l)if(l.includes("po:")){const t=l.substr(3).split("|");if(3===t.length){const e=t[0],s=t[1];let o=t[2];if("DashTemplate"===s)o=o.split(" ").map((t=>Number(t)));else if("Color"===s){const t=new i.a(o).toRgba();o=[t[0],t[1],t[2],255*t[3]]}else o=Number(o);h.push({primitiveName:e,propertyName:s,value:o})}}else if(l.includes("|")){for(const t of l.split("|"))if(this._itemNames.has(t)){f.push(t);break}}else this._itemNames.has(l)&&f.push(l);const m=!Object(l.k)(t.geometry)||!t.geometry.hasZ&&"point"===t.geometry.type,b=this._cimPartsToCIMSymbol(f,h,m,e);return this._symbolCache.put(n,b,1),b}async fetchResources(t){if(this._dictionaryPromise)return this._dictionaryPromise;if(!this.url)return void h.error("no valid URL!");const e=Object(l.k)(t)?t.abortOptions:null,s=Object(o.default)(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},...e}),[{data:i}]=await Promise.all([s,Object(y.e)()]);if(!i)throw this._dictionaryPromise=null,new r.a("esri.renderers.DictionaryRenderer","Bad dictionary data!");const n=i.expression,a=i.authoringInfo;this._refSymbolUrlTemplate=this.url+"/"+i.cimRefTemplateUrl,this._itemNames=new Set(i.itemsNames),this._symbolFields=a.symbol;const c={};if(this.config){const t=this.config;for(const e in t)c[e]=t[e]}if(a.configuration)for(const o of a.configuration)c.hasOwnProperty(o.name)||(c[o.name]=o.value);const u=[];if(Object(l.k)(t)&&t.fields&&this.fieldMap)for(const o of this._symbolFields){const e=this.fieldMap[o],s=t.fields.filter((t=>t.name===e));s.length>0&&u.push({...s[0],name:o})}return this._dictionaryPromise=Object(y.b)(n,Object(l.k)(t)?t.spatialReference:null,u,c).then((t=>{const e={scale:0};return(s,i)=>{const o=t.repurposeFeature({geometry:null,attributes:s});return e.scale=Object(l.k)(i)?i.scale:void 0,t.evaluate({$feature:o,$view:e})}})).catch((t=>(h.error("Creating dictinoary expression failed:",t),null))),this._dictionaryPromise}async _cimPartsToCIMSymbol(t,e,s,i){const o=new Array(t.length);for(let a=0;a<t.length;a++)o[a]=this._getSymbolPart(t[a],i);const r=await Promise.all(o),n=this.fieldMap;for(const a of r)p(a,n);return new f.a({data:this._combineSymbolParts(r,e,s)})}async _getSymbolPart(t,e){if(this._ongoingRequests.has(t))return this._ongoingRequests.get(t).then((t=>t.data));const s=this._refSymbolUrlTemplate.replace(/\{itemName\}/gi,t),i=Object(o.default)(s,{responseType:"json",query:{f:"json"},...e});this._ongoingRequests.set(t,i);try{return(await i).data}catch(r){return this._ongoingRequests.delete(t),Promise.reject(r)}}_combineSymbolParts(t,e,s){if(!t||0===t.length)return null;const i={...t[0]};if(t.length>1){i.symbolLayers=[];for(const e of t){const t=e;i.symbolLayers.unshift(...t.symbolLayers)}}return s&&(i.callout=m),{type:"CIMSymbolReference",symbol:i,primitiveOverrides:e}}}function p(t,e){if(!t)return;const s=t.symbolLayers;if(!s)return;let i=s.length;for(;i--;){const t=s[i];t&&!1!==t.enable&&"CIMVectorMarker"===t.type&&d(t,e)}}function d(t,e){const s=t.markerGraphics;if(s)for(const i of s){if(!i)continue;const t=i.symbol;if(t)switch(t.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":p(t,e);break;case"CIMTextSymbol":t.fieldMap=e}}}},430:function(t,e,s){"use strict";s.d(e,"a",(function(){return b}));var i,o=s(79),r=s(89),n=s(155),a=s(81),l=(s(83),s(95)),c=s(93),u=s(80),y=s(92),f=s(106),h=s(265);let m=i=class extends h.a{constructor(t){super(t),this.data=null,this.type="cim"}readData(t,e){return e}writeData(t,e){if(t)for(const s in t)e[s]=t[s]}async collectRequiredFields(t,e){if("CIMSymbolReference"===this.data.type){const s=this.data.primitiveOverrides;if(s){const i=s.map((s=>{const i=s.valueExpressionInfo;return Object(f.c)(t,e,i.expression)}));await Promise.all(i)}}}clone(){return new i({data:Object(r.a)(this.data)})}hash(){return Object(n.b)(JSON.stringify(this.data)).toString()}};Object(o.a)([Object(a.b)({json:{write:!1}})],m.prototype,"color",void 0),Object(o.a)([Object(a.b)({json:{write:!0}})],m.prototype,"data",void 0),Object(o.a)([Object(c.a)("data",["symbol"])],m.prototype,"readData",null),Object(o.a)([Object(y.a)("data",{})],m.prototype,"writeData",null),Object(o.a)([Object(l.a)({CIMSymbolReference:"cim"},{readOnly:!0})],m.prototype,"type",void 0),m=i=Object(o.a)([Object(u.a)("esri.symbols.CIMSymbol")],m);const b=m}}]);
//# sourceMappingURL=248.811a72a8.chunk.js.map