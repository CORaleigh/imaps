(this.webpackJsonpimaps=this.webpackJsonpimaps||[]).push([[293],{1337:function(e,a,t){"use strict";t.r(a);var i=t(78),s=t(80),r=(t(76),t(81),t(77),t(79)),l=t(1117),c=t(84);const n=e=>{let a=class extends e{initialize(){const{layer:e,view:a}=this;e.source.supportsSpatialReference(a.spatialReference)||this.addResolvingPromise(Promise.reject(new c.a("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return Object(i.a)([Object(s.b)()],a.prototype,"layer",void 0),Object(i.a)([Object(s.b)({readOnly:!0})],a.prototype,"availableFields",null),a=Object(i.a)([Object(r.a)("esri.views.layers.OGCFeatureLayerView")],a),a};let p=class extends(n(l.default)){};p=Object(i.a)([Object(r.a)("esri.views.2d.layers.OGCFeatureLayerView2D")],p);var o=p;a.default=o}}]);
//# sourceMappingURL=293.2f217c76.chunk.js.map