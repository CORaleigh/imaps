{"version":3,"sources":["Components/Shell/utils/shell.ts","Components/Shell/Shell.tsx"],"names":["panelDismissedChange","e","target","parentElement","collapsed","dismissed","actionClicked","action","actions","isActive","isTool","innerWidth","forEach","a","deactivateActions","shellPanel","closest","removeAttribute","setAttribute","windowResize","width","setWidth","setActions","document","querySelectorAll","button","find","title","getAttribute","window","querySelector","MapView","lazy","Header","TipManager","PropertyPanel","LocationSearch","Layers","Basemaps","Legend","PropertySelect","Measure","Sketch","Bookmarks","Print","Shell","tips","setTips","useState","tipsTitle","setTipsTitle","view","setView","viewCreated","setViewCreated","selectedProperties","setSelectedProperties","selectedFeature","setSelectedFeature","theme","setTheme","useContext","ThemeContext","sketchVM","useRef","selectVM","measurement","coordinates","activeTool","setActiveTool","ActionContext","featureSelected","feature","attributes","geometry","container","getElementById","ReactDOM","render","fallback","geometrySet","geometryChanged","toolActivated","selectActivated","activatePropertySearch","active","search","hidden","shell","propertiesSelected","properties","length","console","log","sketchToolActivated","sketchViewModel","current","cancel","viewModel","activeViewModel","clear","mode","measurementActivated","measurementTool","coordinatesTool","showTips","text","label","slot","icon","appearance","scale","calcite-hydrated","onClick","renderWidget","hasChildNodes","default","basemaps","id","imagery","useEffect","panel","addEventListener","matchMedia","matches","body","classList","remove","add","link","Array","from","head","href","includes","appendChild","undefined","newTheme","localStorage","setItem","updateTheme","getItem","shadowRoot","removeEventListener","className","position","width-scale","expand-disabled","map","placement","reference-element","name","disabled","async","requestAnimationFrame","aria-label","links","initialized","mapView","closed","tipsDismissed"],"mappings":"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","file":"static/js/173.96790b33.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport React from 'react';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst panelDismissedChange = (e: Event) => {\n  const shellPanel = (e.target as HTMLElement)?.parentElement;\n  (shellPanel as HTMLCalciteShellPanelElement).collapsed = (e.target as HTMLCalcitePanelElement)?.dismissed;\n};\n\nexport const initialized = (): void => {\n  const panels = document.querySelectorAll('calcite-panel');\n  panels.forEach((panel) => {\n    panel?.addEventListener('calcitePanelDismissedChange', panelDismissedChange);\n  });\n};\n\nexport const deactivate = (): void => {\n  const panels = document.querySelectorAll('calcite-panel');\n  panels.forEach((panel) => {\n    panel?.removeEventListener('calcitePanelDismissedChange', panelDismissedChange);\n  });\n};\nconst deactivateActions = (actions: any[], isTool: boolean): void => {\n  if (innerWidth < 1000) {\n    actions.forEach((a) => {\n      a.isActive = false;\n    });\n  } else {\n    if (isTool) {\n      actions.forEach((a) => {\n        a.isActive = a.isActive && !a.isTool;\n      });\n    } else {\n      actions.forEach((a) => {\n        a.isActive = a.isActive && a.isTool;\n      });\n    }\n  }\n};\nexport const actionClicked = (e: any, action: any, actions: any[]): any[] => {\n  if (action.isActive) {\n    action.isActive = false;\n  } else {\n    deactivateActions(actions, action.isTool);\n    action.isActive = true;\n  }\n  const shellPanel = e.target.closest('calcite-shell-panel');\n\n  if (!action.isActive) {\n    shellPanel?.setAttribute('collapsed', '');\n  } else {\n    shellPanel?.removeAttribute('collapsed');\n  }\n  return actions;\n};\n\nexport const updateTheme = (theme: string, setTheme: React.Dispatch<string>) => {\n  if (theme) {\n    if (theme === 'dark') {\n      setTheme('dark');\n    }\n    if (theme === 'light') {\n      setTheme('light');\n    }\n  } else {\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      theme = 'dark';\n      setTheme('dark');\n    } else {\n      theme = 'light';\n      setTheme('light');\n    }\n  }\n  document.body.classList.remove(theme === 'light' ? 'dark' : 'light');\n  document.body.classList.add(theme === 'light' ? 'light' : 'dark');\n\n  const link = Array.from(document.head.querySelectorAll('link')).find((link: HTMLLinkElement) => {\n    return link.href.includes(`${theme}/main.css`);\n  });\n  if (link) {\n    document.head.appendChild(link);\n  }\n\n  if (window.matchMedia != undefined) {\n    window.matchMedia('(prefers-color-scheme: dark)')?.addEventListener('change', (e) => {\n      const newTheme = e.matches ? 'dark' : 'light';\n      setTheme(newTheme);\n      window.localStorage.setItem('imaps_theme', newTheme);\n      document.body.classList.remove(newTheme === 'light' ? 'dark' : 'light');\n      document.body.classList.add(newTheme === 'light' ? 'light' : 'dark');\n      const link = Array.from(document.head.querySelectorAll('link')).find((link: HTMLLinkElement) => {\n        return link.href.includes(`${newTheme}/main.css`);\n      });\n      if (link) {\n        document.head.appendChild(link);\n      }\n    });\n  }\n};\n\nexport const windowResize = (\n  actions: any[],\n  width: number,\n  setWidth: React.Dispatch<number>,\n  setActions: React.Dispatch<any[]>,\n) => {\n  const activeActions = document.querySelectorAll('calcite-action[active]');\n  activeActions.forEach((button) => {\n    const action = actions.find((action) => {\n      return action.title === button.getAttribute('text');\n    });\n    if (window.innerWidth >= 1000 && action?.isActive && width < 1000) {\n      if (action.isTool) {\n        (document.querySelector('calcite-shell-panel[slot=contextual-panel]') as HTMLElement)?.setAttribute(\n          'collapsed',\n          '',\n        );\n        action.isActive = false;\n      }\n    }\n    if (window.innerWidth < 1000 && action?.isActive && width >= 1000) {\n      if (action.isTool) {\n        (document.querySelector('calcite-shell-panel[slot=primary-panel]') as HTMLElement)?.removeAttribute(\n          'collapsed',\n        );\n        action.isActive = false;\n      } else {\n        (document.querySelector('calcite-shell-panel[slot=contextual-panel]') as HTMLElement)?.removeAttribute(\n          'collapsed',\n        );\n      }\n    }\n  });\n  setWidth(window.innerWidth);\n\n  setActions([...actions]);\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useContext, useEffect, useState, lazy, Suspense, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nconst MapView = lazy(() => {\n  return import('../MapView/MapView');\n});\nconst Header = lazy(() => {\n  return import('../Header/Header');\n});\nconst TipManager = lazy(() => {\n  return import('../TipManager/TipManager');\n});\nconst PropertyPanel = lazy(() => import('../PropertyPanel/PropertyPanel'));\nconst LocationSearch = lazy(() => import('../LocationSearch/LocationSearch'));\nconst Layers = lazy(() => import('../Layers/Layers'));\nconst Basemaps = lazy(() => import('../Basemaps/Basemaps'));\nconst Legend = lazy(() => import('../Legend/Legend'));\nconst PropertySelect = lazy(() => import('../PropertySelect/PropertySelect'));\nconst Measure = lazy(() => import('../Measure/Measure'));\nconst Sketch = lazy(() => import('../Sketch/Sketch'));\nconst Bookmarks = lazy(() => import('../Bookmarks/Bookmarks'));\nconst Print = lazy(() => import('../Print/Print'));\nimport './Shell.scss';\nimport { actionClicked, deactivate, initialized, updateTheme, windowResize } from './utils/shell';\nimport ThemeContext from '../ThemeContext';\nimport { basemaps, links } from '../../config/config';\nimport ActionContext from '../ActionContext';\n\nexport const Shell = () => {\n  const [tips, setTips] = useState<any>([]);\n  const [tipsTitle, setTipsTitle] = useState<string>();\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const [view, setView] = useState<__esri.MapView | null>(null);\n  const [viewCreated, setViewCreated] = useState(false);\n  const [selectedProperties, setSelectedProperties] = useState<__esri.Graphic[]>([]);\n  const [selectedFeature, setSelectedFeature] = useState<any>();\n  const { theme, setTheme } = useContext(ThemeContext);\n  //define sketch tools to handle deactivating other sketch tools\n  const sketchVM = useRef<__esri.SketchViewModel>();\n  const selectVM = useRef<__esri.SketchViewModel>();\n  const measurement = useRef<__esri.Measurement>();\n  const coordinates = useRef<__esri.CoordinateConversion>();\n\n  const [activeTool, setActiveTool] = useState<string>();\n  const { actions, setActions } = useContext(ActionContext);\n\n  //when feature is selected update featureSelected state and render PropertySelect\n  const featureSelected = (feature: __esri.Graphic | undefined) => {\n    setSelectedFeature({ ...selectedFeature, ...{ attributes: feature?.attributes, geometry: feature?.geometry } });\n    const action = actions.find((action) => {\n      return action.title === 'Property Select';\n    });\n    if (action && view) {\n      const container = document.getElementById(action?.container);\n      if (container) {\n        ReactDOM.render(\n          <Suspense fallback={''}>\n            <PropertySelect\n              view={view}\n              selectedFeature={feature}\n              geometrySet={geometryChanged}\n              toolActivated={selectActivated}\n            />\n          </Suspense>,\n          container,\n        );\n      }\n    }\n  };\n  //activate PropertySearch on load and on geometry updates\n  const activatePropertySearch = (): HTMLElement => {\n    const active = actions.find((action) => {\n      return action.isActive;\n    });\n    if (active) {\n      active.isActive = false;\n    }\n    const search = actions.find((action) => {\n      return action.title === 'Property Search';\n    });\n\n    if (search) {\n      search.isActive = true;\n    }\n    const container = document.getElementById(search?.container as string);\n    if (container) {\n      const panel: HTMLDivElement = container?.closest('.action-panel') as HTMLDivElement;\n      panel.hidden = false;\n      const shell = container?.closest('calcite-shell-panel');\n      shell?.removeAttribute('collapsed');\n    }\n    return container as HTMLElement;\n  };\n\n  const propertiesSelected = (properties: __esri.Graphic[]) => {\n    setSelectedProperties([...selectedProperties, ...properties]);\n    if (properties.length > 1) {\n      setSelectedFeature({ ...selectedFeature, ...{ attributes: null } });\n    }\n    const container = activatePropertySearch();\n\n    ReactDOM.render(\n      <Suspense fallback={''}>\n        <PropertyPanel\n          propertiesSelected={propertiesSelected}\n          featureSelected={featureSelected}\n          selectedProperties={properties}\n        />\n      </Suspense>,\n      container,\n    );\n\n    console.log('setActions');\n    setActions([...[], ...actions]);\n  };\n\n  //deactivate other sketch tools\n  const sketchToolActivated = (sketchViewModel: __esri.SketchViewModel) => {\n    sketchVM.current = sketchViewModel;\n    selectVM.current?.cancel();\n    measurement.current?.viewModel.activeViewModel?.clear();\n    if (coordinates.current) {\n      coordinates.current.viewModel.mode = 'live';\n    }\n    setActiveTool('sketch');\n  };\n  const measurementActivated = (measurementTool: __esri.Measurement, coordinatesTool: __esri.CoordinateConversion) => {\n    measurement.current = measurementTool;\n    coordinates.current = coordinatesTool;\n    sketchVM.current?.cancel();\n    selectVM.current?.cancel();\n    setActiveTool('measure');\n  };\n  const selectActivated = (sketchViewModel: __esri.SketchViewModel) => {\n    selectVM.current = sketchViewModel;\n    sketchVM.current?.cancel();\n    measurement.current?.viewModel.activeViewModel?.clear();\n    if (coordinates.current) {\n      coordinates.current.viewModel.mode = 'live';\n    }\n    setActiveTool('select');\n  };\n\n  //reset tips when dismissed\n  const tipsDismissed = () => {\n    setTips([]);\n    setTipsTitle('');\n  };\n  //render Tips action\n  const showTips = (isTool: boolean) => {\n    let action: any;\n    if (isTool) {\n      action = actions.find((action: any) => {\n        return action.isActive && action.isTool;\n      });\n    } else {\n      action = actions.find((action: any) => {\n        return action.isActive;\n      });\n    }\n\n    return action?.tips?.length ? (\n      <calcite-action\n        text=\"Action\"\n        label=\"Action\"\n        slot=\"header-actions-end\"\n        icon=\"lightbulb\"\n        appearance=\"solid\"\n        scale=\"m\"\n        calcite-hydrated=\"\"\n        onClick={() => {\n          setTips([...tips, ...action.tips]);\n          setTipsTitle(action.title);\n        }}\n      ></calcite-action>\n    ) : (\n      ''\n    );\n  };\n\n  //after map has initiliazed\n  const mapInitialized = async (mapView: __esri.MapView) => {\n    if (!viewCreated) {\n      setView(mapView);\n      setViewCreated(true);\n      const container = document.getElementById('propertySearch');\n      if (mapView.map) {\n        ReactDOM.render(\n          <Suspense fallback={''}>\n            <PropertyPanel\n              view={mapView}\n              propertiesSelected={propertiesSelected}\n              featureSelected={featureSelected}\n              selectedProperties={selectedProperties}\n              toolActivated={selectActivated}\n            />\n          </Suspense>,\n          container,\n        );\n      }\n    }\n  };\n\n  //update PropertyPanel geometry when geometry is updated by MapView or PropertySelect\n  const geometryChanged = (geometry: __esri.Geometry) => {\n    const container = activatePropertySearch();\n    ReactDOM.render(\n      <Suspense fallback={''}>\n        <PropertyPanel\n          geometry={geometry}\n          propertiesSelected={propertiesSelected}\n          selectedProperties={selectedProperties}\n          featureSelected={featureSelected}\n          selectedFeature={selectedFeature}\n        />\n      </Suspense>,\n      container,\n    );\n  };\n\n  //render widgets as they become active\n  const renderWidget = (action: any) => {\n    if (action) {\n      const container = document.getElementById(action.container);\n\n      if (!container?.hasChildNodes()) {\n        if (action.title === 'Property Search') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <PropertyPanel\n                view={view}\n                propertiesSelected={propertiesSelected}\n                featureSelected={featureSelected}\n                selectedProperties={selectedProperties}\n              />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Location Search') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <LocationSearch view={view} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Layers') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Layers view={view} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Basemaps') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Basemaps view={view} default={basemaps.default.id} imagery={basemaps.imagery.id} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Legend') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Legend view={view} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Property Select') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <PropertySelect\n                view={view}\n                geometrySet={geometryChanged}\n                selectedFeature={selectedFeature}\n                toolActivated={selectActivated}\n                activeTool={activeTool}\n              />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Measure') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Measure view={view} measurementActivated={measurementActivated} activeTool={activeTool} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Sketch') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Sketch view={view} toolActivated={sketchToolActivated} activeTool={activeTool} />{' '}\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Bookmarks') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Bookmarks view={view} />{' '}\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Print') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Print view={view} />{' '}\n            </Suspense>,\n            container,\n          );\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    initialized();\n    const theme = window.localStorage.getItem('imaps_theme') as string;\n    updateTheme(theme, setTheme);\n\n    window.addEventListener('resize', () => {\n      windowResize(actions, width, setWidth, setActions);\n    });\n    document\n      .querySelector('calcite-shell-panel')\n      ?.shadowRoot?.querySelector('.content')\n      ?.setAttribute('style', 'width: calc(var(--calcite-panel-width-multiplier) * 100vw) !important;');\n\n    return () => {\n      window.removeEventListener('resize', () => {\n        windowResize(actions, width, setWidth, setActions);\n      });\n      deactivate();\n    };\n  }, [actions]);\n  return (\n    <div>\n      <calcite-shell theme={theme} className=\"shell\">\n        {width >= 1000 ? (\n          <calcite-shell-panel slot=\"primary-panel\" position=\"start\" width-scale=\"l\" collapsed>\n            <calcite-action-bar expand-disabled slot=\"action-bar\">\n              {actions.map((action: any) => {\n                if (action.isTool) {\n                  return (\n                    <div key={`${action.container}_action_primary`}>\n                      <calcite-tooltip\n                        placement=\"trailing\"\n                        label={action.title}\n                        reference-element={`${action.container}_action`}\n                      >\n                        {action.title}\n                      </calcite-tooltip>\n                      <calcite-tooltip-manager>\n                        <calcite-action\n                          text={action.title}\n                          name={action.container}\n                          icon={action.icon}\n                          id={`${action.container}_action`}\n                          disabled={!viewCreated ? '' : null}\n                          onClick={async (e: any) => {\n                            console.log('setActions');\n                            setActions([...actionClicked(e, action, actions)]);\n                            requestAnimationFrame(() => {\n                              renderWidget(action);\n                            });\n                          }}\n                          active={action.isActive === true ? '' : null}\n                        ></calcite-action>\n                      </calcite-tooltip-manager>\n                    </div>\n                  );\n                }\n              })}\n            </calcite-action-bar>\n            {actions.map((action: any) => {\n              if (action.isTool && action.isActive) {\n                console.log(action);\n                return (\n                  <div className=\"panel-header\" key={`${action.icon}_header_primary`}>\n                    <div className=\"panel-title\">{action.title}</div>\n                    <div className=\"header-actions\">\n                      {showTips(true)}\n                      <calcite-action\n                        aria-label=\"Close\"\n                        appearance=\"solid\"\n                        scale=\"m\"\n                        calcite-hydrated=\"\"\n                        icon=\"x\"\n                        onClick={() => {\n                          document\n                            ?.querySelector('calcite-shell-panel[slot=primary-panel]')\n                            ?.setAttribute('collapsed', '');\n                          action.isActive = false;\n\n                          console.log('setActions');\n                          setActions([...actions]);\n                        }}\n                      ></calcite-action>\n                    </div>\n                  </div>\n                );\n              }\n            })}\n            {actions.map((action: any) => {\n              if (action.isTool) {\n                return (\n                  <div\n                    id={action.container}\n                    className=\"action-panel\"\n                    key={`${action.container}_primary`}\n                    hidden={!action.isActive}\n                  ></div>\n                );\n              }\n            })}\n          </calcite-shell-panel>\n        ) : (\n          ''\n        )}\n\n        <calcite-shell-panel slot=\"contextual-panel\" position=\"end\" width-scale=\"l\">\n          <calcite-action-bar expand-disabled slot=\"action-bar\">\n            {actions.map((action: any) => {\n              if (!action.isTool || width < 1000) {\n                return (\n                  <div key={`${action.container}_action_contextual`}>\n                    <calcite-tooltip\n                      placement=\"leading\"\n                      label={action.title}\n                      reference-element={`${action.container}_action`}\n                    >\n                      {action.title}\n                    </calcite-tooltip>\n                    <calcite-tooltip-manager>\n                      <calcite-action\n                        text={action.title}\n                        name={action.container}\n                        icon={action.icon}\n                        id={`${action.container}_action`}\n                        disabled={!viewCreated ? '' : null}\n                        onClick={async (e: any) => {\n                          console.log('setActions');\n                          setActions([...actionClicked(e, action, actions)]);\n                          requestAnimationFrame(() => {\n                            renderWidget(action);\n                          });\n                        }}\n                        active={action.isActive === true ? '' : null}\n                      ></calcite-action>\n                    </calcite-tooltip-manager>\n                  </div>\n                );\n              }\n            })}\n          </calcite-action-bar>\n\n          {actions.map((action: any) => {\n            if ((!action.isTool || width < 1000) && action.isActive) {\n              return (\n                <div className=\"panel-header\" key={`${action.icon}_header_contextual`}>\n                  <div className=\"panel-title\">{action.title}</div>\n                  <div className=\"header-actions\">\n                    {showTips(false)}\n                    <calcite-action\n                      aria-label=\"Close\"\n                      appearance=\"solid\"\n                      scale=\"m\"\n                      calcite-hydrated=\"\"\n                      icon=\"x\"\n                      onClick={() => {\n                        document\n                          ?.querySelector('calcite-shell-panel[slot=contextual-panel]')\n                          ?.setAttribute('collapsed', '');\n                        action.isActive = false;\n\n                        console.log('setActions');\n                        setActions([...actions]);\n                      }}\n                    ></calcite-action>\n                  </div>\n                </div>\n              );\n            }\n          })}\n          {actions.map((action: any) => {\n            if (!action.isTool || width < 1000) {\n              return (\n                <div\n                  className=\"action-panel\"\n                  id={action.container}\n                  key={`${action.container}_contextual`}\n                  hidden={!action.isActive}\n                ></div>\n              );\n            }\n          })}\n        </calcite-shell-panel>\n\n        <div slot=\"shell-header\">\n          <Suspense fallback={''}>\n            <Header links={links} />\n          </Suspense>\n        </div>\n        <Suspense fallback={''}>\n          <MapView\n            id=\"95092428774c4b1fb6a3b6f5fed9fbc4\"\n            initialized={mapInitialized}\n            geometryChanged={geometryChanged}\n            selectedProperties={selectedProperties}\n            selectedFeature={selectedFeature}\n          />\n        </Suspense>\n      </calcite-shell>\n      <Suspense fallback={''}>\n        <TipManager tips={tips} title={tipsTitle} closed tipsDismissed={tipsDismissed} />\n      </Suspense>\n    </div>\n  );\n};\nexport default Shell;\n"],"sourceRoot":""}