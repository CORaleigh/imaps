{"version":3,"file":"static/js/6902.ea02383e.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/node_modules/@stencil/core/internal/client|lazy|/^/.//.*/.entry/.js.*$/|include: //.entry/.js$/|exclude: //.system/.entry/.js$/|groupOptions: {}|namespace object","Components/Layers/utils/layers.ts","Components/Layers/Layers.tsx"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 67435;\nmodule.exports = webpackEmptyAsyncContext;","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport Collection from '@arcgis/core/core/Collection';\nimport ActionToggle from '@arcgis/core/support/actions/ActionToggle';\nexport const layerListItemCreated = (event: any): void => {\n  const item = event.item;\n  if (item.layer.type != 'group' && item.layer.type != undefined) {\n    const slider = document.createElement('calcite-slider');\n    slider.setAttribute('min', '0');\n    slider.setAttribute('max', '100');\n    slider.setAttribute('step', '1');\n    slider.setAttribute('snap', '');\n    slider.setAttribute('min-label', '0%');\n    slider.setAttribute('max-label', '100%');\n    slider.setAttribute('label-handles', '');\n    slider.setAttribute('value', Math.round(item?.layer.opacity * 100).toString());\n    slider.setAttribute('data', item.layer.id);\n    slider.addEventListener(\n      'calciteSliderUpdate',\n      (event) => {\n        item.layer.opacity = Math.round(parseInt((event?.target as any)?.getAttribute('value'))) / 100;\n      },\n      { passive: true },\n    );\n    item.panel = {\n      content: [slider, 'legend'],\n      open: false, //item.layer.visible,\n    };\n  }\n  item.open = item.layer.visible;\n  item.layer.watch('visible', (visible: boolean) => {\n    // if (item.panel) {\n    //   item.panel.open = visible;\n    // }\n    item.open = visible;\n\n    if (visible) {\n      if (item.layer.parent) {\n        if (item.layer.parent.type === 'group') {\n          item.layer.parent.visible = true;\n        }\n      }\n      if (item.layer.parent.parent) {\n        if (item.layer.parent.parent.type === 'group') {\n          item.layer.parent.parent.visible = true;\n        }\n      }\n    }\n  });\n  addPropertyLabelToggles(item);\n};\nexport const togglePropertyLabels = (event: __esri.LayerListTriggerActionEvent) => {\n  if (event.item.layer.title === 'Property') {\n    if (!(event.item.layer as __esri.FeatureLayer).labelsVisible) {\n      (event.item.layer as __esri.FeatureLayer).labelsVisible = true;\n    }\n    const selected = event.item.actionsSections.getItemAt(0).filter((section) => {\n      return (section as ActionToggle).value;\n    });\n\n    const selectedTitles = selected.map((section) => {\n      return (section as ActionToggle).title;\n    });\n\n    const selectedExpressions = propertyLabelExpressions.filter((expression) => {\n      return selectedTitles.includes(expression.title);\n    });\n    const expressions = selectedExpressions.map((expression) => {\n      return expression.expression;\n    });\n    const expression = expressions.join('+ TextFormatting.NewLine+');\n    (event.item.layer as __esri.FeatureLayer).labelingInfo = [];\n\n    //if ((event.action as ActionToggle).value) {\n    (event.item.layer as __esri.FeatureLayer).labelingInfo = [\n      {\n        // autocasts as new LabelClass()\n        symbol: {\n          type: 'text', // autocasts as new TextSymbol()\n          color: 'black',\n          haloColor: 'white',\n          haloSize: 1,\n          font: {\n            family: 'AvenirNext LT Pro Regular',\n            style: 'normal',\n            weight: 'bold',\n          },\n        },\n        labelExpressionInfo: {\n          expression: expression,\n        },\n        maxScale: 0,\n        minScale: 5000,\n      } as any,\n    ];\n    // }\n    // } else {\n    //   (event.item.layer as __esri.FeatureLayer).labelingInfo = (\n    //     event.item.layer as __esri.FeatureLayer\n    //   ).labelingInfo.filter((info) => {\n    //     return info.labelExpressionInfo.expression != expression.expression;\n    //   });\n    // }\n  }\n};\nconst propertyLabelExpressions: any[] = [\n  {\n    expression: `First(Split($feature['SITE_ADDRESS'], ' '))`,\n    title: 'Address',\n  },\n  {\n    expression: `$feature['PIN_NUM']`,\n    title: 'PIN',\n  },\n  {\n    expression: `$feature['REID']`,\n    title: 'REID',\n  },\n  {\n    expression: `When(IsEmpty($feature[\"SALE_DATE\"]),null, Concatenate(Month($feature[\"SALE_DATE\"])+1, '/',Day($feature[\"SALE_DATE\"]), '/',Year($feature[\"SALE_DATE\"])))`,\n    title: 'Sale Date',\n  },\n  {\n    expression: `Text($feature.TOTSALPRICE,'$#,###')`,\n    title: 'Sale Price',\n  },\n];\n\nconst addPropertyLabelToggles = (item: any) => {\n  if (item.layer.title === 'Property' && item.layer.type != 'group' && item.actionsSections.length === 0) {\n    const toggles: Collection = new Collection();\n    toggles.addMany(\n      propertyLabelExpressions.map((expression) => {\n        return new ActionToggle({\n          active: false,\n          title: expression.title,\n          visible: true,\n        });\n      }),\n    );\n    (item as __esri.ListItem).actionsSections.push(toggles);\n    (item as __esri.ListItem).actionsOpen = true;\n    setTimeout(() => {\n      const title = document.createElement('h4');\n      title.textContent = 'Labels';\n      title.setAttribute('style', 'padding: 0.5em;margin: 0;');\n      const actions = document.querySelector('.esri-layer-list__item-actions');\n      if (actions?.parentElement) {\n        actions.prepend(title);\n      }\n    }, 500);\n  }\n};\nexport const filterLayers = (value: string, layerList: __esri.LayerList): void => {\n  if (!value) {\n    value = '';\n  }\n  layerList.operationalItems.forEach((item: __esri.ListItem) => {\n    if (item.layer.type === 'group') {\n      let open = false;\n      (item.layer as __esri.GroupLayer).layers.forEach((layer) => {\n        if (layer.title.toLowerCase().includes(value.toLowerCase())) {\n          layer.listMode = 'show';\n          open = true;\n        } else {\n          layer.listMode = 'hide';\n        }\n        //handle second level group layers\n        if (layer.type === 'group') {\n          (layer as __esri.GroupLayer).layers.forEach((sublayer) => {\n            if (sublayer.title.toLowerCase().includes(value.toLowerCase())) {\n              layer.listMode = 'show';\n              sublayer.listMode = 'show';\n              open = true;\n            } else {\n              sublayer.listMode = 'hide';\n            }\n          });\n        }\n      });\n      item.open = value.length > 0 && open;\n      if (!value.length || open) {\n        document\n          .getElementById(`${(layerList as any).id}_${(item as any).uid}__title`)\n          ?.parentElement?.parentElement?.parentElement?.removeAttribute('hidden');\n      }\n      if (!open) {\n        document\n          .getElementById(`${(layerList as any).id}_${(item as any).uid}__title`)\n          ?.parentElement?.parentElement?.parentElement?.setAttribute('hidden', '');\n      }\n    }\n  });\n};\n\nexport const resetLayers = (list: __esri.LayerList) => {\n  list?.operationalItems.forEach((item) => {\n    item.visible = item.title === 'Property';\n  });\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef } from 'react';\nimport LayerList from '@arcgis/core/widgets/LayerList';\nimport { filterLayers, layerListItemCreated, resetLayers, togglePropertyLabels } from './utils/layers';\nimport './Layers.scss';\nexport const Layers = (props: any) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const input = useRef<HTMLCalciteInputElement>(null);\n  const list = useRef<__esri.LayerList>();\n\n  useEffect(() => {\n    const layerList = new LayerList({\n      container: ref.current as HTMLDivElement,\n      view: props.view,\n      listItemCreatedFunction: layerListItemCreated,\n      visibleElements: {\n        statusIndicators: true,\n      },\n    });\n    list.current = layerList;\n    layerList.on('trigger-action', (event: __esri.LayerListTriggerActionEvent) => {\n      if (event.item.layer.title === 'Property') {\n        togglePropertyLabels(event);\n      }\n    });\n    input.current?.addEventListener('calciteInputInput', (event: any) => {\n      filterLayers(event.target.value, layerList as LayerList);\n    });\n    input.current?.addEventListener('focusout', (event: any) => {\n      filterLayers(event.target.value, layerList as LayerList);\n    });\n    return () => {\n      input.current?.removeEventListener('calciteInputInput', (event: any) => {\n        filterLayers(event.target.value, layerList as LayerList);\n      });\n      layerList && layerList.destroy();\n    };\n  }, [props.view]); // only after initial render\n  return (\n    <div className=\"panel\">\n      <div className=\"row sticky\">\n        <calcite-input\n          ref={input}\n          clearable\n          placeholder=\"Filter by layer name\"\n          scale=\"m\"\n          id=\"layerSearch\"\n        ></calcite-input>\n        <calcite-action\n          icon=\"viewHide\"\n          scale=\"m\"\n          onClick={() => {\n            resetLayers(list.current as __esri.LayerList);\n          }}\n        ></calcite-action>\n      </div>\n      <div ref={ref}></div>\n    </div>\n  );\n};\n\nexport default Layers;\n"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","layerListItemCreated","event","item","layer","type","undefined","slider","document","createElement","setAttribute","Math","round","opacity","toString","addEventListener","parseInt","target","getAttribute","passive","panel","content","open","visible","watch","parent","addPropertyLabelToggles","propertyLabelExpressions","expression","title","actionsSections","length","toggles","Collection","addMany","map","ActionToggle","active","push","actionsOpen","setTimeout","textContent","actions","querySelector","parentElement","prepend","filterLayers","value","layerList","operationalItems","forEach","layers","toLowerCase","includes","listMode","sublayer","getElementById","uid","removeAttribute","Layers","props","ref","useRef","input","list","useEffect","LayerList","container","current","view","listItemCreatedFunction","visibleElements","statusIndicators","on","labelsVisible","selectedTitles","getItemAt","filter","section","selectedExpressions","expressions","join","labelingInfo","symbol","color","haloColor","haloSize","font","family","style","weight","labelExpressionInfo","maxScale","minScale","togglePropertyLabels","removeEventListener","destroy","className","clearable","placeholder","scale","icon","onClick","resetLayers"],"sourceRoot":""}