{"version":3,"file":"static/js/9381.a135ceb3.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/rest/support/AddressesToLocationsParameters.js","components/Panels/Location/utils/location.ts","components/Panels/Location/utils/tips.ts","components/Panels/Location/utils/useLocation.ts","components/Panels/Location/Location.tsx"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as r}from\"../../chunks/tslib.es6.js\";import\"../../geometry.js\";import{JSONSupport as e}from\"../../core/JSONSupport.js\";import{property as t}from\"../../core/accessorSupport/decorators/property.js\";import{ensureType as o}from\"../../core/accessorSupport/ensureType.js\";import\"../../core/arrayUtils.js\";import{subclass as s}from\"../../core/accessorSupport/decorators/subclass.js\";import a from\"../../geometry/SpatialReference.js\";let p=class extends e{constructor(r){super(r),this.addresses=null,this.categories=null,this.countryCode=null,this.locationType=null,this.outSpatialReference=null}};r([t({type:[Object],json:{read:{reader:r=>r&&r.records?r.records.map((r=>r.attributes)):null},write:{writer:(r,e)=>{const t=[];Array.isArray(r)&&r.forEach((r=>{t.push({attributes:r})})),e.addresses={records:t}}}}})],p.prototype,\"addresses\",void 0),r([t({type:[String],json:{read:{source:\"category\",reader:r=>r?r.split(\",\"):null},write:{target:\"category\",writer:(r,e)=>{e.category=r?r.join(\",\"):null}}}})],p.prototype,\"categories\",void 0),r([t({type:String,json:{read:{source:\"sourceCountry\"},write:{target:\"sourceCountry\"}}})],p.prototype,\"countryCode\",void 0),r([t({type:String,json:{write:!0}})],p.prototype,\"locationType\",void 0),r([t({type:a,json:{read:{source:\"outSR\"},write:{target:\"outSR\"}}})],p.prototype,\"outSpatialReference\",void 0),p=r([s(\"esri.rest.support.AddressesToLocationsParameters\")],p),p.from=o(p);const i=p;export{i as default};\n","import FeatureLayer from '@arcgis/core/layers/FeatureLayer';\nimport PictureMarkerSymbol from '@arcgis/core/symbols/PictureMarkerSymbol';\nimport MapView from '@arcgis/core/views/MapView';\nimport widgetSearch from '@arcgis/core/widgets/Search';\nimport LayerSearchSource from '@arcgis/core/widgets/Search/LayerSearchSource';\nimport LocatorSearchSource from '@arcgis/core/widgets/Search/LocatorSearchSource';\nimport { addressToLocations } from '@arcgis/core/rest/locator';\nimport Graphic from '@arcgis/core/Graphic';\nimport SimpleFillSymbol from '@arcgis/core/symbols/SimpleFillSymbol';\nimport Color from '@arcgis/core/Color';\nimport Feature from '@arcgis/core/widgets/Feature';\n\nexport const intializeLocationSearch = async (view: MapView, container: HTMLDivElement): Promise<widgetSearch> => {\n  const sources: any[] = [];\n  const source = await addLocationSearch();\n  sources.push(source);\n  const intersectionSource = await addIntersectionSource();\n  sources.push(intersectionSource);\n  const search = new widgetSearch({\n    view: view,\n    maxSuggestions: 30,\n    searchAllEnabled: true,\n    popupEnabled: false,\n    container: container,\n    goToOverride: (view, params) => {\n      view.goTo({ target: params.target.target, zoom: 17 }, { duration: 1000, easing: 'ease' as any });\n    },\n  });\n  search.sources.addMany(sources);\n  search.allSources.on('after-add', (event: any) => {\n    if ((event.item as any).layer) {\n      const item: __esri.LayerSearchSource = event.item as __esri.LayerSearchSource;\n      item.name = (event.item as any).layer.title;\n      item.placeholder = (event.item as any).layer.title;\n    }\n    if (event.item.name.includes('World Geocoding')) {\n      search.allSources.remove(event.item);\n    }\n  });\n  return search;\n};\n\nconst addIntersectionSource = async (): Promise<LayerSearchSource> => {\n  const layer = new FeatureLayer({\n    portalItem: {\n      id: 'edb2153e06c2477995f95b27e5c24661',\n    },\n    title: 'Intersection',\n    layerId: 0,\n  });\n  await layer.load();\n  const source = new LayerSearchSource({\n    name: 'Intersection',\n    placeholder: 'Enter first street name',\n    layer: layer,\n    autoNavigate: false,\n    resultGraphicEnabled: false,\n  });\n  return source;\n};\n\nconst addLocationSearch = (): LocatorSearchSource => {\n  const source = new LocatorSearchSource({\n    name: 'Street Address',\n    placeholder: 'Enter an address',\n    url: 'https://maps.raleighnc.gov/arcgis/rest/services/Locators/Locator/GeocodeServer',\n    autoNavigate: true,\n    resultSymbol: new PictureMarkerSymbol({\n      url: 'assets/pin.svg',\n      height: 36,\n      width: 36,\n    }),\n  });\n  return source;\n};\n\nexport const addSearchEvents = (\n  search: widgetSearch,\n  view: MapView,\n  setIsIntersection: Function,\n  setIntersections: Function,\n  setSearchTerm: Function,\n  feature: Feature,\n) => {\n  search.on('search-complete', async (result) => {\n    (feature as any).graphic = null;\n    setSearchTerm(result.searchTerm);\n    setIsIntersection(result.results[0].source.name === 'Intersection');\n    if (result.results[0].source.name === 'Intersection') {\n      const featureSet: __esri.FeatureSet = await result.results[0].source.layer.queryFeatures({\n        geometry: result.results[0].results[0].feature.geometry,\n        returnGeometry: false,\n        outFields: ['CARTONAME'],\n        orderByFields: ['CARTONAME'],\n      });\n      setIntersections(\n        featureSet.features.map((feature) => {\n          return feature.getAttribute('CARTONAME');\n        }),\n      );\n    } else {\n      removeGraphics(search.view as MapView);\n      const graphics: Graphic[] = [];\n      result.results[0].results.forEach((result) => {\n        //feature.graphic = result.feature;\n        addGraphics(search.view as MapView, result.feature.geometry);\n        graphics.push(result.feature);\n        feature.graphic = result.feature;\n      });\n    }\n  });\n}\n\nexport const intersectingStreetSelected = async (intersection: string, searchTerm: string, view: MapView) => {\n  const value = `${intersection} & ${searchTerm}`;\n  const candidates = await addressToLocations(\n    'https://maps.raleighnc.gov/arcgis/rest/services/Locators/Locator/GeocodeServer',\n    {\n      address: {\n        outSpatialReference: view.spatialReference,\n        SingleLine: value,\n      },\n    },\n  );\n  if (candidates.length) {\n    removeGraphics(view);\n    addGraphics(view, candidates[0].location);\n    view.goTo({ target: candidates[0].location, zoom: 17 }, { duration: 1000, easing: 'ease' as any });\n  }\n};\n\nconst addGraphics = (view: __esri.MapView, geometry: __esri.Geometry): void => {\n  if (geometry.type === 'point') {\n    view.graphics.add(\n      new Graphic({\n        geometry: geometry,\n        attributes: { type: 'location' },\n        symbol: new PictureMarkerSymbol({\n          url: 'assets/pin.svg',\n          height: 36,\n          width: 36,\n        }), //new CIMSymbol(pinSymbol as any),\n      }),\n    );\n  } else {\n    view.graphics.add(\n      new Graphic({\n        geometry: geometry,\n        attributes: { type: 'location' },\n        symbol: new SimpleFillSymbol({\n          color: new Color([0, 255, 255, 0.25]),\n          outline: {\n            color: new Color([0, 255, 255, 1]),\n            width: 2,\n          },\n        }),\n      }),\n    );\n  }\n};\nconst removeGraphics = (view: __esri.MapView): void => {\n  view.graphics.removeMany(\n    view.graphics.filter((graphic: __esri.Graphic) => {\n      return graphic.getAttribute('type') === 'location';\n    }),\n  );\n};\n\nexport const intializeLocationFeature = (view: MapView, container: HTMLDivElement) => {\n  return new Feature({ view: view, container: container });\n}\n","export const tips = {\n  title: \"Location Search Tips\",\n  tips: [\n    {\n      title: \"Search By Place\",\n      text: \"Search for places of interest such as schools and parks by typing the name of the school or park you are looking for.\",\n    },\n  ],\n};\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  addSearchEvents,\n  intializeLocationFeature,\n  intializeLocationSearch,\n} from \"./location\";\nimport { PanelProps } from \"../../utils/PanelProps\";\nimport { tips } from \"./tips\";\n\nconst useLocation = (props: PanelProps) => {\n  const searchDiv = useRef(null);\n  const featureDiv = useRef<HTMLDivElement>(null);\n\n  const loaded = useRef(false);\n  const search = useRef<__esri.widgetsSearch>();\n  const feature = useRef<__esri.Feature>();\n\n  const [isIntersection, setIsIntersection] = useState(false);\n  const [intersections, setIntersections] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    if (!loaded.current && searchDiv.current) {\n      loaded.current = true;\n      intializeLocationSearch(props.view, searchDiv.current).then(\n        (searchWidget: __esri.widgetsSearch) => {\n          search.current = searchWidget;\n          addSearchEvents(\n            searchWidget,\n            props.view,\n            setIsIntersection,\n            setIntersections,\n            setSearchTerm,\n            feature.current as __esri.Feature\n          );\n        }\n      );\n      feature.current = intializeLocationFeature(\n        props.view,\n        featureDiv.current as HTMLDivElement\n      );\n    }\n  });\n  useEffect(() => {\n    setIsActive(props.isActive);\n  }, [props.isActive]);\n  const panelDismissed = useCallback((e: any) => {\n    props.panelDismissed();\n  }, []);\n  const tipsClicked = useCallback((e: any) => {\n    props.showTips(tips);\n  }, []);\n  return {\n    searchDiv,\n    featureDiv,\n    search,\n    isIntersection,\n    intersections,\n    searchTerm,\n    isActive,\n    panelDismissed,\n    tipsClicked,\n  };\n};\nexport default useLocation;\n","import {\n  CalciteAction,\n  CalciteCombobox,\n  CalciteComboboxItem,\n  CalciteLabel,\n  CalcitePanel,\n  CalciteTooltip,\n} from \"@esri/calcite-components-react\";\nimport React, {  } from \"react\";\nimport {\n  intersectingStreetSelected,\n} from \"./utils/location\";\nimport \"./Location.css\";\nimport useLocation from \"./utils/useLocation\";\nimport { PanelProps } from \"../utils/PanelProps\";\nfunction Location(props: PanelProps) {\n   \n  const { \n    searchDiv,\n    featureDiv,\n    search,\n    isIntersection,\n    intersections,\n    searchTerm,\n    isActive,\n    panelDismissed,\n    tipsClicked    \n  } = useLocation(props);\n\n  return (\n    <CalcitePanel\n      id=\"location-panel\"\n      heading=\"Location Search\"\n      hidden={!isActive}\n      closed={!isActive ? true : undefined}\n      closable\n      onCalcitePanelClose={panelDismissed}\n    >\n      <CalciteAction id=\"tip\" icon=\"lightbulb\"  text=\"Tips\" slot=\"header-actions-end\" onClick={tipsClicked}></CalciteAction>\n      <CalciteTooltip label=\"Show Tip\" referenceElement=\"tip\" closeOnClick>Show Tip</CalciteTooltip>\n      <div id=\"location-search\">\n        <div ref={searchDiv}></div>\n        {isIntersection && (\n          <div id=\"intersection-search\">\n            <CalciteLabel>\n              Intersections\n              <CalciteCombobox label={\"\"} selectionMode=\"single\" scale=\"l\">\n                {intersections.map((intersection, i) => {\n                  return (\n                    <CalciteComboboxItem\n                      key={i}\n                      textLabel={intersection}\n                      value={intersection}\n                      onCalciteComboboxItemChange={(e: any) => {\n                        if (e.target.selected) {\n                          intersectingStreetSelected(\n                            intersection,\n                            searchTerm,\n                            search?.current?.view as __esri.MapView\n                          );\n                        }\n                      }}\n                    ></CalciteComboboxItem>\n                  );\n                })}\n              </CalciteCombobox>\n            </CalciteLabel>\n          </div>\n        )}\n        <div id=\"location-feature\" ref={featureDiv}></div>\n      </div>\n    </CalcitePanel>\n  );\n}\n\nexport default React.memo(Location);\n"],"names":["p","e","constructor","r","super","this","addresses","categories","countryCode","locationType","outSpatialReference","t","type","Object","json","read","reader","records","map","attributes","write","writer","Array","isArray","forEach","push","prototype","String","source","split","target","category","join","a","s","from","o","addIntersectionSource","async","layer","FeatureLayer","portalItem","id","title","layerId","load","LayerSearchSource","name","placeholder","autoNavigate","resultGraphicEnabled","addLocationSearch","LocatorSearchSource","url","resultSymbol","PictureMarkerSymbol","height","width","addGraphics","view","geometry","graphics","add","Graphic","symbol","SimpleFillSymbol","color","Color","outline","removeGraphics","removeMany","filter","graphic","getAttribute","tips","text","props","searchDiv","useRef","featureDiv","loaded","search","feature","isIntersection","setIsIntersection","useState","intersections","setIntersections","searchTerm","setSearchTerm","isActive","setIsActive","useEffect","container","current","sources","intersectionSource","widgetSearch","maxSuggestions","searchAllEnabled","popupEnabled","goToOverride","params","goTo","zoom","duration","easing","addMany","allSources","on","event","item","includes","remove","intializeLocationSearch","then","searchWidget","result","results","featureSet","queryFeatures","returnGeometry","outFields","orderByFields","features","addSearchEvents","Feature","panelDismissed","useCallback","tipsClicked","showTips","Location","useLocation","heading","hidden","closed","undefined","closable","onCalcitePanelClose","icon","slot","onClick","label","referenceElement","closeOnClick","ref","selectionMode","scale","intersection","i","textLabel","value","onCalciteComboboxItemChange","selected","candidates","addressToLocations","address","spatialReference","SingleLine","length","location","intersectingStreetSelected","React"],"sourceRoot":""}