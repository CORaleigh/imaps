"use strict";(globalThis.webpackChunkimaps=globalThis.webpackChunkimaps||[]).push([[8178],{58178:(e,t,s)=>{s.r(t),s.d(t,{default:()=>d});var r=s(10064),a=s(32718),n=s(92026),i=s(66978),o=s(92975),u=s(83406),h=s(68928),l=s(19995),y=s(14e3),p=s(47615),c=s(68808),g=s(12622),_=s(52410);class d{constructor(){this._queryEngine=null,this._customParameters=null,this._snapshotFeatures=async e=>{const{objectIdField:t}=this._queryEngine,s=await(0,g.Bm)(this._getFeatureUrl,this._featureType.typeName,this._getFeatureOutputFormat,{customParameters:this._customParameters,dateFields:this._queryEngine.fieldsIndex.dateFields.map((e=>e.name)),signal:e});await(0,p.O3)(s),(0,i.k_)(e);const r=(0,p.lG)(s,{geometryType:this._queryEngine.geometryType,hasZ:!1,objectIdField:t});if(!(0,o.fS)(this._queryEngine.spatialReference,o.Zn))for(const i of r)(0,n.pC)(i.geometry)&&(i.geometry=(0,u.GH)((0,l.iV)((0,u.di)(i.geometry,this._queryEngine.geometryType,!1,!1),o.Zn,this._queryEngine.spatialReference)));let a=1;for(const n of r){const e={};(0,c.O0)(this._fieldsIndex,e,n.attributes,!0),n.attributes=e,null==n.attributes[t]&&(n.objectId=n.attributes[t]=a++)}return r}}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(e,t){const{getFeatureUrl:s,getFeatureOutputFormat:r,spatialReference:a,fields:o,geometryType:u,featureType:l,objectIdField:p,customParameters:c}=e;this._featureType=l,this._customParameters=c,this._getFeatureUrl=s,this._getFeatureOutputFormat=r,this._fieldsIndex=new _.Z(o),await this._checkProjection(a),(0,i.k_)(t),this._queryEngine=new y.q({fields:o,geometryType:u,hasM:!1,hasZ:!1,objectIdField:p,spatialReference:a,timeInfo:null,featureStore:new h.Z({geometryType:u,hasM:!1,hasZ:!1})});const g=await this._snapshotFeatures((0,n.Wg)(t.signal));return this._queryEngine.featureStore.addMany(g),{extent:this._queryEngine.fullExtent}}async applyEdits(){throw new r.Z("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){return this._customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=(0,i.vr)(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)}),(e=>{this._queryEngine.featureStore.clear(),(0,i.D_)(e)||a.Z.getLogger("esri.layers.WFSLayer").error(new r.Z("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:e}))})),await this._waitSnapshotComplete(),{extent:this._queryEngine.fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _checkProjection(e){try{await(0,l._W)(o.Zn,e)}catch{throw new r.Z("unsupported-projection","Projection not supported",{spatialReference:e})}}}}}]);
//# sourceMappingURL=8178.e1c29128.chunk.js.map