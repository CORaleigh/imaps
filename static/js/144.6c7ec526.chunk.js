(this.webpackJsonpimaps=this.webpackJsonpimaps||[]).push([[144],{1248:function(e,r,t){"use strict";t.r(r);var a=t(82),s=(t(80),t(81),t(88),t(85)),o=t(84),i=(t(83),t(86),t(87),t(324)),n=t(91),l=t(7),u=t(106),p=t(236),c=t(142),d=t(830),f=t(867),v=t(89),y=t(98),b=t(90),O=t(99),j=t(113),h=t(130),m=t(141),g=t(100),T=(t(101),t(123)),M=t(753);function B(e){return e.features.map((r=>{var t=O.a.fromJSON(e.spatialReference),a=T.a.fromJSON(r);return Object(v.q)(a.geometry).spatialReference=t,a}))}function w(e){return e.features.map((r=>(r.geometry.spatialReference=e.spatialReference,Object(g.a)(r.geometry))))}var S=class extends b.a{constructor(e){super(e),this.facilities=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.serviceAreaPolylines=null,this.serviceAreaPolygons=null}readFacilities(e){return w(e)}readPointBarriers(e,r){return w(r.barriers)}readPolylineBarriers(e){return w(e)}readPolygonBarriers(e){return w(e)}readIncidents(e,r){return B(r.saPolylines)}readServiceAreaPolygons(e,r){return B(r.saPolygons)}};Object(a.a)([Object(s.b)({type:[j.a]})],S.prototype,"facilities",void 0),Object(a.a)([Object(y.a)("facilities")],S.prototype,"readFacilities",null),Object(a.a)([Object(s.b)({type:[M.a]})],S.prototype,"messages",void 0),Object(a.a)([Object(s.b)({type:[j.a]})],S.prototype,"pointBarriers",void 0),Object(a.a)([Object(y.a)("pointBarriers",["barriers"])],S.prototype,"readPointBarriers",null),Object(a.a)([Object(s.b)({type:[m.a]})],S.prototype,"polylineBarriers",void 0),Object(a.a)([Object(y.a)("polylineBarriers")],S.prototype,"readPolylineBarriers",null),Object(a.a)([Object(s.b)({type:[h.a]})],S.prototype,"polygonBarriers",void 0),Object(a.a)([Object(y.a)("polygonBarriers")],S.prototype,"readPolygonBarriers",null),Object(a.a)([Object(s.b)({type:[T.a]})],S.prototype,"serviceAreaPolylines",void 0),Object(a.a)([Object(y.a)("serviceAreaPolylines",["saPolylines"])],S.prototype,"readIncidents",null),Object(a.a)([Object(s.b)({type:[T.a]})],S.prototype,"serviceAreaPolygons",void 0),Object(a.a)([Object(y.a)("serviceAreaPolygons",["saPolygons"])],S.prototype,"readServiceAreaPolygons",null);var N=S=Object(a.a)([Object(o.a)("esri.tasks.support.ServiceAreaSolveResult")],S),k=Object(d.a)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,defaultBreaks:!0,facilities:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},travelMode:!0});function P(){return(P=Object(l.a)((function*(e,r,t){var a=[],s=[],o={},i={},l=Object(c.c)(e);return r.facilities&&r.facilities.features&&Object(f.a)(r.facilities.features,s,"facilities.features",o),r.pointBarriers&&r.pointBarriers.features&&Object(f.a)(r.pointBarriers.features,s,"pointBarriers.features",o),r.polylineBarriers&&r.polylineBarriers.features&&Object(f.a)(r.polylineBarriers.features,s,"polylineBarriers.features",o),r.polygonBarriers&&r.polygonBarriers.features&&Object(f.a)(r.polygonBarriers.features,s,"polygonBarriers.features",o),Object(p.a)(s).then((e=>{for(var r in o){var t=o[r];a.push(r),i[r]=e.slice(t[0],t[1])}return Object(f.e)(i,a)?Object(f.c)(l.path).catch((()=>({dontCheck:!0}))):Promise.resolve({dontCheck:!0})})).then((e=>{("dontCheck"in e?e.dontCheck:e.hasZ)||Object(f.b)(i,a);var s=function(e){i[e].forEach(((t,a)=>{r.get(e)[a].geometry=t}))};for(var o in i)s(o);var p={query:Object(n.a)(Object(n.a)({},l.query),{},{f:"json"},k.toQueryParams(r))};return t&&(p=Object(n.a)(Object(n.a)({},t),p)),Object(u.default)("".concat(l.path,"/solveServiceArea"),p)})).then((e=>N.fromJSON(e.data)))}))).apply(this,arguments)}var R=t(831),A=class extends(Object(R.a)(i.a)){constructor(e){super(e),this.url=null}solve(e,r){return function(e,r,t){return P.apply(this,arguments)}(this.url,e,r)}};Object(a.a)([Object(s.b)()],A.prototype,"url",void 0);var x=A=Object(a.a)([Object(o.a)("esri.tasks.ServiceAreaTask")],A);r.default=x},753:function(e,r,t){"use strict";var a=t(82),s=(t(80),t(81),t(88),t(85)),o=t(95),i=t(84),n=(t(83),t(86),t(87),t(721)),l=new o.a({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"}),u=class extends n.a{constructor(e){super(e),this.type=null}};Object(a.a)([Object(s.b)({type:String,json:{read:l.read,write:l.write}})],u.prototype,"type",void 0);var p=u=Object(a.a)([Object(i.a)("esri.tasks.support.NAMessage")],u);r.a=p},777:function(e,r,t){"use strict";var a=t(82),s=(t(80),t(89)),o=(t(81),t(88),t(85)),i=t(98),n=t(84),l=(t(83),t(86),t(87),t(99)),u=t(113),p=t(103),c=t(141),d=(t(101),t(123)),f=t(146),v=class extends f.default{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,r){(e||[]).forEach((e=>{this._decompressFeatureGeometry(e,r.summary.envelope.spatialReference)}));var t=l.a.fromJSON(r.spatialReference);return e.map((e=>{var r=d.a.fromJSON(e),a=e.geometry&&e.geometry.spatialReference;return r.geometry&&!a&&(Object(s.q)(r.geometry).spatialReference=t),r.strings=e.strings,r.events=(e.events||[]).map((r=>{var t=new d.a({geometry:new u.a({x:r.point.x,y:r.point.y,z:r.point.z,hasZ:void 0!==r.point.z,spatialReference:e.geometry&&e.geometry.spatialReference}),attributes:{ETA:r.ETA,arriveTimeUTC:r.arriveTimeUTC}});return t.strings=r.strings,t})),r}))}get mergedGeometry(){if(!this.features)return null;var e=this.features.map((({geometry:e})=>Object(s.q)(e))),r=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,r)}get strings(){return this.features.map((({strings:e})=>e))}_decompressFeatureGeometry(e,r){e.geometry=this._decompressGeometry(e.compressedGeometry,r)}_decompressGeometry(e,r){var t,a,s,o,i,n,l,u,p=0,c=0,d=0,f=0,v=[],y=0,b=0,O=0;if((i=e.match(/((\+|\-)[^\+\-\|]+|\|)/g))||(i=[]),0===parseInt(i[y],32)){y=2;var j=parseInt(i[y],32);y++,n=parseInt(i[y],32),y++,1&j&&(b=i.indexOf("|")+1,l=parseInt(i[b],32),b++),2&j&&(O=i.indexOf("|",b)+1,u=parseInt(i[O],32),O++)}else n=parseInt(i[y],32),y++;for(;y<i.length&&"|"!==i[y];){t=parseInt(i[y],32)+p,y++,p=t,a=parseInt(i[y],32)+c,y++,c=a;var h=[t/n,a/n];b&&(o=parseInt(i[b],32)+d,b++,d=o,h.push(o/l)),O&&(s=parseInt(i[O],32)+f,O++,f=s,h.push(s/u)),v.push(h)}return{paths:[v],hasZ:b>0,hasM:O>0,spatialReference:r}}_mergePolylinesToSinglePath(e,r){var t=[];(e||[]).forEach((e=>{e.paths.forEach((e=>{t=t.concat(e)}))}));var a=[],s=[0,0];return t.forEach((e=>{e[0]===s[0]&&e[1]===s[1]||(a.push(e),s=e)})),new c.a({paths:[a]},r)}};Object(a.a)([Object(o.b)({type:p.a,json:{read:{source:"summary.envelope"}}})],v.prototype,"extent",void 0),Object(a.a)([Object(o.b)()],v.prototype,"features",void 0),Object(a.a)([Object(i.a)("features")],v.prototype,"readFeatures",null),Object(a.a)([Object(o.b)()],v.prototype,"geometryType",void 0),Object(a.a)([Object(o.b)({readOnly:!0})],v.prototype,"mergedGeometry",null),Object(a.a)([Object(o.b)()],v.prototype,"routeId",void 0),Object(a.a)([Object(o.b)()],v.prototype,"routeName",void 0),Object(a.a)([Object(o.b)({value:null,readOnly:!0})],v.prototype,"strings",null),Object(a.a)([Object(o.b)({json:{read:{source:"summary.totalDriveTime"}}})],v.prototype,"totalDriveTime",void 0),Object(a.a)([Object(o.b)({json:{read:{source:"summary.totalLength"}}})],v.prototype,"totalLength",void 0),Object(a.a)([Object(o.b)({json:{read:{source:"summary.totalTime"}}})],v.prototype,"totalTime",void 0);var y=v=Object(a.a)([Object(n.a)("esri.tasks.support.DirectionsFeatureSet")],v);r.a=y},830:function(e,r,t){"use strict";t.d(r,"a",(function(){return s}));class a{constructor(e={}){this._options=e}toQueryParams(e){if(!e)return null;var r=e.toJSON(),t={};return Object.keys(r).forEach((e=>{var a=this._options[e];if(a){var s="boolean"!=typeof a&&a.name?a.name:e,o="boolean"!=typeof a&&a.getter?a.getter(r):r[e];null!=o&&(t[s]=(e=>{if(!Array.isArray(e))return!1;var[r]=e;return"number"==typeof r||"string"==typeof r})(o)?o.join(","):"object"==typeof o?JSON.stringify(o):o)}else t[e]=r[e]}),this),t}}function s(e){return new a(e)}},831:function(e,r,t){"use strict";t.d(r,"a",(function(){return v}));var a=t(7),s=t(82),o=(t(80),t(124)),i=t(89),n=(t(81),t(88),t(85),t(84)),l=t(93),u=t(83),p=(t(86),t(87),t(106)),c=t(324);function d(){return(d=Object(a.a)((function*(e,r){try{var{data:{supportedTravelModes:t,defaultTravelMode:a}}=yield Object(p.default)(e+("/"===e[e.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json",token:r}});return{supportedTravelModes:t,defaultTravelMode:a}}catch(s){throw new l.a("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:s})}}))).apply(this,arguments)}function f(){return(f=Object(a.a)((function*(e,r){var{data:t}=yield Object(p.default)(e.substring(0,e.indexOf("/rest/")+6)+"info",{query:{f:"json",token:r}});if(!t||!t.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};e=t.owningSystemUrl;var{data:a}=yield Object(p.default)(e+("/"===e[e.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json",token:r}}),s=Object(o.b)("helperServices.routingUtilities.url",a);if(!s)return{supportedTravelModes:[],defaultTravelMode:null};var i=Object(u.J)(e),n=/\/solveClosestFacility$/.test(i.path)?"Route":/\/solveClosestFacility$/.test(i.path)?"ClosestFacility":"ServiceAreas",l=yield Object(p.default)(s+("/"===s[s.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:n,token:r}}),c=[],d=null;if(l&&l.data&&l.data.results&&l.data.results.length){var f=l.data.results;for(var v of f)if("supportedTravelModes"===v.paramName){if(v.value&&v.value.features)for(var{attributes:y}of v.value.features)if(y){var b=JSON.parse(y.TravelMode);c.push(b)}}else"defaultTravelMode"===v.paramName&&(d=v.value)}return{supportedTravelModes:c,defaultTravelMode:d}}))).apply(this,arguments)}var v=e=>{var r=class extends e{getServiceDescription(e){var r=this;return Object(a.a)((function*(){return r._serviceDescriptionPromise||(r._serviceDescriptionPromise=r._fetchServiceDescription(e)),r._serviceDescriptionPromise}))()}_fetchServiceDescription(e){var r=this;return Object(a.a)((function*(){if(!r.url||!r.parsedUrl)throw new l.a("network-service:missing-url","Url to Network service is missing");var t=r.url,{data:a}=yield Object(p.default)(t,{query:{f:"json",token:e}});a.supportedTravelModes||(a.supportedTravelModes=[]);for(var s=0;s<a.supportedTravelModes.length;s++)a.supportedTravelModes[s].id||(a.supportedTravelModes[s].id=a.supportedTravelModes[s].itemId);var o=a.currentVersion>=10.4?function(e,r){return d.apply(this,arguments)}(t,e):function(e,r){return f.apply(this,arguments)}(t,e),{defaultTravelMode:i,supportedTravelModes:n}=yield o;return a.defaultTravelMode=i,a.supportedTravelModes=n,a}))()}_isInputGeometryZAware(e,r){for(var t=0;t<r.length;t++){var a=e[r[t]];if(a&&a.length)for(var s of a)if(Object(i.k)(s)&&s.hasZ)return!0}return!1}_dropZValuesOffInputGeometry(e,r){for(var t=0;t<r.length;t++){var a=e[r[t]];if(a&&a.length)for(var s of a)s.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}};return r=Object(s.a)([Object(n.a)("esri.tasks.mixins.NAServiceDescription")],r)},y=class extends(v(c.a)){};y=Object(s.a)([Object(n.a)("esri.tasks.mixins.NAServiceDescription")],y)},867:function(e,r,t){"use strict";t.d(r,"a",(function(){return M})),t.d(r,"b",(function(){return B})),t.d(r,"c",(function(){return N})),t.d(r,"d",(function(){return w})),t.d(r,"e",(function(){return S}));var a=t(7),s=t(124),o=t(89),i=t(93),n=t(106),l=t(142),u=t(82),p=(t(80),t(81),t(88),t(85)),c=t(98),d=t(84),f=(t(83),t(86),t(87),t(90)),v=t(123),y=t(146),b=t(753),O=t(777),j=class extends f.a{constructor(e){super(e),this.directions=null,this.route=null,this.routeName=null,this.stops=null}};Object(u.a)([Object(p.b)({type:O.a,json:{write:!0}})],j.prototype,"directions",void 0),Object(u.a)([Object(p.b)({type:v.a,json:{write:!0}})],j.prototype,"route",void 0),Object(u.a)([Object(p.b)({type:String,json:{write:!0}})],j.prototype,"routeName",void 0),Object(u.a)([Object(p.b)({type:[v.a],json:{write:!0}})],j.prototype,"stops",void 0);var h=j=Object(u.a)([Object(d.a)("esri.tasks.support.RouteResult")],j);function m(e){return e&&y.default.fromJSON(e).features.map((e=>e))}var g=class extends f.a{constructor(e){super(e),this.barriers=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,r){return m(r.barriers||r.pointBarriers)}readPolylineBarriers(e){return m(e)}readPolygonBarriers(e){return m(e)}};Object(u.a)([Object(p.b)({aliasOf:"pointBarriers"})],g.prototype,"barriers",void 0),Object(u.a)([Object(p.b)({type:[b.a]})],g.prototype,"messages",void 0),Object(u.a)([Object(p.b)({type:[v.a]})],g.prototype,"pointBarriers",void 0),Object(u.a)([Object(c.a)("pointBarriers",["barriers","pointBarriers"])],g.prototype,"readPointBarriers",null),Object(u.a)([Object(p.b)({type:[v.a]})],g.prototype,"polylineBarriers",void 0),Object(u.a)([Object(c.a)("polylineBarriers")],g.prototype,"readPolylineBarriers",null),Object(u.a)([Object(p.b)({type:[v.a]})],g.prototype,"polygonBarriers",void 0),Object(u.a)([Object(c.a)("polygonBarriers")],g.prototype,"readPolygonBarriers",null),Object(u.a)([Object(p.b)({type:[h]})],g.prototype,"routeResults",void 0);var T=g=Object(u.a)([Object(d.a)("esri.tasks.support.RouteResultsContainer")],g);function M(e,r,t,a){a[t]=[r.length,r.length+e.length],e.forEach((e=>{r.push(e.geometry)}))}function B(e,r){for(var t=0;t<r.length;t++){var a=e[r[t]];if(a&&a.length)for(var s of a)s.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function w(e){var r,t,a=[],s=[],{directions:o=[],routes:{features:i=[],spatialReference:n=null}={},stops:{features:l=[],spatialReference:u=null}={},barriers:p,polygonBarriers:c,polylineBarriers:d,messages:f}=e.data,v="esri.tasks.RouteTask.NULL_ROUTE_NAME",y=!0,b=i&&n||l&&u||p&&p.spatialReference||c&&c.spatialReference||d&&d.spatialReference;o.forEach((e=>{a.push(r=e.routeName),s[r]={directions:e}})),i.forEach((e=>{-1===a.indexOf(r=e.attributes.Name)&&(a.push(r),s[r]={}),e.geometry&&(e.geometry.spatialReference=b),s[r].route=e})),l.forEach((e=>{t=e.attributes,-1===a.indexOf(r=t.RouteName||v)&&(a.push(r),s[r]={}),r!==v&&(y=!1),e.geometry&&(e.geometry.spatialReference=b),null==s[r].stops&&(s[r].stops=[]),s[r].stops.push(e)})),l.length>0&&!0===y&&(s[a[0]].stops=s[v].stops,delete s[v],a.splice(a.indexOf(v),1));var O=a.map((e=>(s[e].routeName=e===v?null:e,s[e])));return T.fromJSON({routeResults:O,pointBarriers:p,polygonBarriers:c,polylineBarriers:d,messages:f})}function S(e,r){for(var t=0;t<r.length;t++){var a=e[r[t]];if(a&&a.length)for(var s of a)if(Object(o.k)(s)&&s.hasZ)return!0}return!1}function N(e){return k.apply(this,arguments)}function k(){return(k=Object(a.a)((function*(e){if(!e)throw new i.a("network-service:missing-url","Url to Network service is missing");var{data:r}=yield Object(n.default)(e,{query:{f:"json"}});r.supportedTravelModes||(r.supportedTravelModes=[]);for(var t=0;t<r.supportedTravelModes.length;t++)r.supportedTravelModes[t].id||(r.supportedTravelModes[t].id=r.supportedTravelModes[t].itemId);var a=r.currentVersion>=10.4?A(e):P(e),{defaultTravelMode:s,supportedTravelModes:o}=yield a;return r.defaultTravelMode=s,r.supportedTravelModes=o,r}))).apply(this,arguments)}function P(e){return R.apply(this,arguments)}function R(){return(R=Object(a.a)((function*(e){var{data:r}=yield Object(n.default)(e.substring(0,e.indexOf("/rest/")+6)+"info",{query:{f:"json"}});if(!r||!r.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};e=r.owningSystemUrl;var{data:t}=yield Object(n.default)(e+("/"===e[e.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json"}}),a=Object(s.b)("helperServices.routingUtilities.url",t);if(!a)return{supportedTravelModes:[],defaultTravelMode:null};var o=Object(l.c)(e),i=/\/solve$/.test(o.path)?"Route":/\/solveClosestFacility$/.test(o.path)?"ClosestFacility":"ServiceAreas",u=yield Object(n.default)(a+("/"===a[a.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:i}}),p=[],c=null;if(u&&u.data&&u.data.results&&u.data.results.length){var d=u.data.results;for(var f of d)if("supportedTravelModes"===f.paramName){if(f.value&&f.value.features)for(var{attributes:v}of f.value.features)if(v){var y=JSON.parse(v.TravelMode);p.push(y)}}else"defaultTravelMode"===f.paramName&&(c=f.value)}return{supportedTravelModes:p,defaultTravelMode:c}}))).apply(this,arguments)}function A(e){return x.apply(this,arguments)}function x(){return(x=Object(a.a)((function*(e){try{var{data:{supportedTravelModes:r,defaultTravelMode:t}}=yield Object(n.default)(e+("/"===e[e.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json"}});return{supportedTravelModes:r,defaultTravelMode:t}}catch(a){throw new i.a("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:a})}}))).apply(this,arguments)}}}]);
//# sourceMappingURL=144.6c7ec526.chunk.js.map