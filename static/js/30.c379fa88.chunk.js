(this.webpackJsonpimaps=this.webpackJsonpimaps||[]).push([[30],{1072:function(e,r,t){"use strict";t.r(r),t.d(r,"create",(function(){return o})),t.d(r,"projectGeometry",(function(){return c}));var n=t(138),i=t(89),a=t(182),l=t(541);async function o(e=null,r){if(n.a.geometryServiceUrl)return new(0,(await t.e(26).then(t.bind(null,917))).default)({url:n.a.geometryServiceUrl});if(!e)throw new i.a("internal:geometry-service-url-not-configured");let l;if(l="portal"in e?e.portal||a.a.getDefault():e,await l.load({signal:r}),l.helperServices&&l.helperServices.geometry&&l.helperServices.geometry.url)return new(0,(await t.e(26).then(t.bind(null,917))).default)({url:l.helperServices.geometry.url});throw new i.a("internal:geometry-service-url-not-configured")}async function c(e,r,t=null,n){const a=await o(t,n),c=new l.a;c.geometries=[e],c.outSpatialReference=r;const u=await a.project(c,{signal:n});if(u&&Array.isArray(u)&&1===u.length)return u[0];throw new i.a("internal:geometry-service-projection-failed")}}}]);
//# sourceMappingURL=30.c379fa88.chunk.js.map