(this.webpackJsonpimaps=this.webpackJsonpimaps||[]).push([[143],{1259:function(e,t,r){"use strict";r.r(t);var a=r(82),s=(r(80),r(81),r(88),r(85),r(84)),o=(r(83),r(86),r(87),r(324)),i=r(91),n=r(7),l=r(106),u=r(236),p=r(142),c=r(830),d=r(867),f=Object(c.a)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},stops:!0,travelMode:!0});function v(){return(v=Object(n.a)((function*(e,t,r){var a=[],s=[],o={},n={},c=Object(p.c)(e);return t.stops&&t.stops.features&&Object(d.a)(t.stops.features,s,"stops.features",o),t.pointBarriers&&t.pointBarriers.features&&Object(d.a)(t.pointBarriers.features,s,"pointBarriers.features",o),t.polylineBarriers&&t.polylineBarriers.features&&Object(d.a)(t.polylineBarriers.features,s,"polylineBarriers.features",o),t.polygonBarriers&&t.polygonBarriers.features&&Object(d.a)(t.polygonBarriers.features,s,"polygonBarriers.features",o),Object(u.a)(s).then((e=>{for(var t in o){var r=o[t];a.push(t),n[t]=e.slice(r[0],r[1])}return Object(d.e)(n,a)?Object(d.c)(c.path):Promise.resolve({dontCheck:!0})})).then((e=>{("dontCheck"in e?e.dontCheck:e.hasZ)||Object(d.b)(n,a);var s=function(e){n[e].forEach(((r,a)=>{t.get(e)[a].geometry=r}))};for(var o in n)s(o);var u=Object(i.a)(Object(i.a)({},r),{},{query:Object(i.a)(Object(i.a)(Object(i.a)({},c.query),f.toQueryParams(t)),{},{f:"json"})}),{path:p}=c,v="/solve",y=p.endsWith(v)?p:p+v;return Object(l.default)(y,u)})).then((e=>Object(d.d)(e)))}))).apply(this,arguments)}var y=r(831),b=class extends(Object(y.a)(o.a)){constructor(e){super(e)}solve(e,t){return function(e,t,r){return v.apply(this,arguments)}(this.url,e,t)}},h=b=Object(a.a)([Object(s.a)("esri.tasks.RouteTask")],b);t.default=h},753:function(e,t,r){"use strict";var a=r(82),s=(r(80),r(81),r(88),r(85)),o=r(95),i=r(84),n=(r(83),r(86),r(87),r(721)),l=new o.a({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"}),u=class extends n.a{constructor(e){super(e),this.type=null}};Object(a.a)([Object(s.b)({type:String,json:{read:l.read,write:l.write}})],u.prototype,"type",void 0);var p=u=Object(a.a)([Object(i.a)("esri.tasks.support.NAMessage")],u);t.a=p},777:function(e,t,r){"use strict";var a=r(82),s=(r(80),r(89)),o=(r(81),r(88),r(85)),i=r(98),n=r(84),l=(r(83),r(86),r(87),r(99)),u=r(113),p=r(103),c=r(141),d=(r(101),r(123)),f=r(146),v=class extends f.default{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){(e||[]).forEach((e=>{this._decompressFeatureGeometry(e,t.summary.envelope.spatialReference)}));var r=l.a.fromJSON(t.spatialReference);return e.map((e=>{var t=d.a.fromJSON(e),a=e.geometry&&e.geometry.spatialReference;return t.geometry&&!a&&(Object(s.q)(t.geometry).spatialReference=r),t.strings=e.strings,t.events=(e.events||[]).map((t=>{var r=new d.a({geometry:new u.a({x:t.point.x,y:t.point.y,z:t.point.z,hasZ:void 0!==t.point.z,spatialReference:e.geometry&&e.geometry.spatialReference}),attributes:{ETA:t.ETA,arriveTimeUTC:t.arriveTimeUTC}});return r.strings=t.strings,r})),t}))}get mergedGeometry(){if(!this.features)return null;var e=this.features.map((({geometry:e})=>Object(s.q)(e))),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map((({strings:e})=>e))}_decompressFeatureGeometry(e,t){e.geometry=this._decompressGeometry(e.compressedGeometry,t)}_decompressGeometry(e,t){var r,a,s,o,i,n,l,u,p=0,c=0,d=0,f=0,v=[],y=0,b=0,h=0;if((i=e.match(/((\+|\-)[^\+\-\|]+|\|)/g))||(i=[]),0===parseInt(i[y],32)){y=2;var m=parseInt(i[y],32);y++,n=parseInt(i[y],32),y++,1&m&&(b=i.indexOf("|")+1,l=parseInt(i[b],32),b++),2&m&&(h=i.indexOf("|",b)+1,u=parseInt(i[h],32),h++)}else n=parseInt(i[y],32),y++;for(;y<i.length&&"|"!==i[y];){r=parseInt(i[y],32)+p,y++,p=r,a=parseInt(i[y],32)+c,y++,c=a;var j=[r/n,a/n];b&&(o=parseInt(i[b],32)+d,b++,d=o,j.push(o/l)),h&&(s=parseInt(i[h],32)+f,h++,f=s,j.push(s/u)),v.push(j)}return{paths:[v],hasZ:b>0,hasM:h>0,spatialReference:t}}_mergePolylinesToSinglePath(e,t){var r=[];(e||[]).forEach((e=>{e.paths.forEach((e=>{r=r.concat(e)}))}));var a=[],s=[0,0];return r.forEach((e=>{e[0]===s[0]&&e[1]===s[1]||(a.push(e),s=e)})),new c.a({paths:[a]},t)}};Object(a.a)([Object(o.b)({type:p.a,json:{read:{source:"summary.envelope"}}})],v.prototype,"extent",void 0),Object(a.a)([Object(o.b)()],v.prototype,"features",void 0),Object(a.a)([Object(i.a)("features")],v.prototype,"readFeatures",null),Object(a.a)([Object(o.b)()],v.prototype,"geometryType",void 0),Object(a.a)([Object(o.b)({readOnly:!0})],v.prototype,"mergedGeometry",null),Object(a.a)([Object(o.b)()],v.prototype,"routeId",void 0),Object(a.a)([Object(o.b)()],v.prototype,"routeName",void 0),Object(a.a)([Object(o.b)({value:null,readOnly:!0})],v.prototype,"strings",null),Object(a.a)([Object(o.b)({json:{read:{source:"summary.totalDriveTime"}}})],v.prototype,"totalDriveTime",void 0),Object(a.a)([Object(o.b)({json:{read:{source:"summary.totalLength"}}})],v.prototype,"totalLength",void 0),Object(a.a)([Object(o.b)({json:{read:{source:"summary.totalTime"}}})],v.prototype,"totalTime",void 0);var y=v=Object(a.a)([Object(n.a)("esri.tasks.support.DirectionsFeatureSet")],v);t.a=y},830:function(e,t,r){"use strict";r.d(t,"a",(function(){return s}));class a{constructor(e={}){this._options=e}toQueryParams(e){if(!e)return null;var t=e.toJSON(),r={};return Object.keys(t).forEach((e=>{var a=this._options[e];if(a){var s="boolean"!=typeof a&&a.name?a.name:e,o="boolean"!=typeof a&&a.getter?a.getter(t):t[e];null!=o&&(r[s]=(e=>{if(!Array.isArray(e))return!1;var[t]=e;return"number"==typeof t||"string"==typeof t})(o)?o.join(","):"object"==typeof o?JSON.stringify(o):o)}else r[e]=t[e]}),this),r}}function s(e){return new a(e)}},831:function(e,t,r){"use strict";r.d(t,"a",(function(){return v}));var a=r(7),s=r(82),o=(r(80),r(124)),i=r(89),n=(r(81),r(88),r(85),r(84)),l=r(93),u=r(83),p=(r(86),r(87),r(106)),c=r(324);function d(){return(d=Object(a.a)((function*(e,t){try{var{data:{supportedTravelModes:r,defaultTravelMode:a}}=yield Object(p.default)(e+("/"===e[e.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json",token:t}});return{supportedTravelModes:r,defaultTravelMode:a}}catch(s){throw new l.a("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:s})}}))).apply(this,arguments)}function f(){return(f=Object(a.a)((function*(e,t){var{data:r}=yield Object(p.default)(e.substring(0,e.indexOf("/rest/")+6)+"info",{query:{f:"json",token:t}});if(!r||!r.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};e=r.owningSystemUrl;var{data:a}=yield Object(p.default)(e+("/"===e[e.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json",token:t}}),s=Object(o.b)("helperServices.routingUtilities.url",a);if(!s)return{supportedTravelModes:[],defaultTravelMode:null};var i=Object(u.J)(e),n=/\/solveClosestFacility$/.test(i.path)?"Route":/\/solveClosestFacility$/.test(i.path)?"ClosestFacility":"ServiceAreas",l=yield Object(p.default)(s+("/"===s[s.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:n,token:t}}),c=[],d=null;if(l&&l.data&&l.data.results&&l.data.results.length){var f=l.data.results;for(var v of f)if("supportedTravelModes"===v.paramName){if(v.value&&v.value.features)for(var{attributes:y}of v.value.features)if(y){var b=JSON.parse(y.TravelMode);c.push(b)}}else"defaultTravelMode"===v.paramName&&(d=v.value)}return{supportedTravelModes:c,defaultTravelMode:d}}))).apply(this,arguments)}var v=e=>{var t=class extends e{getServiceDescription(e){var t=this;return Object(a.a)((function*(){return t._serviceDescriptionPromise||(t._serviceDescriptionPromise=t._fetchServiceDescription(e)),t._serviceDescriptionPromise}))()}_fetchServiceDescription(e){var t=this;return Object(a.a)((function*(){if(!t.url||!t.parsedUrl)throw new l.a("network-service:missing-url","Url to Network service is missing");var r=t.url,{data:a}=yield Object(p.default)(r,{query:{f:"json",token:e}});a.supportedTravelModes||(a.supportedTravelModes=[]);for(var s=0;s<a.supportedTravelModes.length;s++)a.supportedTravelModes[s].id||(a.supportedTravelModes[s].id=a.supportedTravelModes[s].itemId);var o=a.currentVersion>=10.4?function(e,t){return d.apply(this,arguments)}(r,e):function(e,t){return f.apply(this,arguments)}(r,e),{defaultTravelMode:i,supportedTravelModes:n}=yield o;return a.defaultTravelMode=i,a.supportedTravelModes=n,a}))()}_isInputGeometryZAware(e,t){for(var r=0;r<t.length;r++){var a=e[t[r]];if(a&&a.length)for(var s of a)if(Object(i.k)(s)&&s.hasZ)return!0}return!1}_dropZValuesOffInputGeometry(e,t){for(var r=0;r<t.length;r++){var a=e[t[r]];if(a&&a.length)for(var s of a)s.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}};return t=Object(s.a)([Object(n.a)("esri.tasks.mixins.NAServiceDescription")],t)},y=class extends(v(c.a)){};y=Object(s.a)([Object(n.a)("esri.tasks.mixins.NAServiceDescription")],y)},867:function(e,t,r){"use strict";r.d(t,"a",(function(){return M})),r.d(t,"b",(function(){return w})),r.d(t,"c",(function(){return k})),r.d(t,"d",(function(){return B})),r.d(t,"e",(function(){return N}));var a=r(7),s=r(124),o=r(89),i=r(93),n=r(106),l=r(142),u=r(82),p=(r(80),r(81),r(88),r(85)),c=r(98),d=r(84),f=(r(83),r(86),r(87),r(90)),v=r(123),y=r(146),b=r(753),h=r(777),m=class extends f.a{constructor(e){super(e),this.directions=null,this.route=null,this.routeName=null,this.stops=null}};Object(u.a)([Object(p.b)({type:h.a,json:{write:!0}})],m.prototype,"directions",void 0),Object(u.a)([Object(p.b)({type:v.a,json:{write:!0}})],m.prototype,"route",void 0),Object(u.a)([Object(p.b)({type:String,json:{write:!0}})],m.prototype,"routeName",void 0),Object(u.a)([Object(p.b)({type:[v.a],json:{write:!0}})],m.prototype,"stops",void 0);var j=m=Object(u.a)([Object(d.a)("esri.tasks.support.RouteResult")],m);function O(e){return e&&y.default.fromJSON(e).features.map((e=>e))}var g=class extends f.a{constructor(e){super(e),this.barriers=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,t){return O(t.barriers||t.pointBarriers)}readPolylineBarriers(e){return O(e)}readPolygonBarriers(e){return O(e)}};Object(u.a)([Object(p.b)({aliasOf:"pointBarriers"})],g.prototype,"barriers",void 0),Object(u.a)([Object(p.b)({type:[b.a]})],g.prototype,"messages",void 0),Object(u.a)([Object(p.b)({type:[v.a]})],g.prototype,"pointBarriers",void 0),Object(u.a)([Object(c.a)("pointBarriers",["barriers","pointBarriers"])],g.prototype,"readPointBarriers",null),Object(u.a)([Object(p.b)({type:[v.a]})],g.prototype,"polylineBarriers",void 0),Object(u.a)([Object(c.a)("polylineBarriers")],g.prototype,"readPolylineBarriers",null),Object(u.a)([Object(p.b)({type:[v.a]})],g.prototype,"polygonBarriers",void 0),Object(u.a)([Object(c.a)("polygonBarriers")],g.prototype,"readPolygonBarriers",null),Object(u.a)([Object(p.b)({type:[j]})],g.prototype,"routeResults",void 0);var T=g=Object(u.a)([Object(d.a)("esri.tasks.support.RouteResultsContainer")],g);function M(e,t,r,a){a[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function w(e,t){for(var r=0;r<t.length;r++){var a=e[t[r]];if(a&&a.length)for(var s of a)s.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function B(e){var t,r,a=[],s=[],{directions:o=[],routes:{features:i=[],spatialReference:n=null}={},stops:{features:l=[],spatialReference:u=null}={},barriers:p,polygonBarriers:c,polylineBarriers:d,messages:f}=e.data,v="esri.tasks.RouteTask.NULL_ROUTE_NAME",y=!0,b=i&&n||l&&u||p&&p.spatialReference||c&&c.spatialReference||d&&d.spatialReference;o.forEach((e=>{a.push(t=e.routeName),s[t]={directions:e}})),i.forEach((e=>{-1===a.indexOf(t=e.attributes.Name)&&(a.push(t),s[t]={}),e.geometry&&(e.geometry.spatialReference=b),s[t].route=e})),l.forEach((e=>{r=e.attributes,-1===a.indexOf(t=r.RouteName||v)&&(a.push(t),s[t]={}),t!==v&&(y=!1),e.geometry&&(e.geometry.spatialReference=b),null==s[t].stops&&(s[t].stops=[]),s[t].stops.push(e)})),l.length>0&&!0===y&&(s[a[0]].stops=s[v].stops,delete s[v],a.splice(a.indexOf(v),1));var h=a.map((e=>(s[e].routeName=e===v?null:e,s[e])));return T.fromJSON({routeResults:h,pointBarriers:p,polygonBarriers:c,polylineBarriers:d,messages:f})}function N(e,t){for(var r=0;r<t.length;r++){var a=e[t[r]];if(a&&a.length)for(var s of a)if(Object(o.k)(s)&&s.hasZ)return!0}return!1}function k(e){return R.apply(this,arguments)}function R(){return(R=Object(a.a)((function*(e){if(!e)throw new i.a("network-service:missing-url","Url to Network service is missing");var{data:t}=yield Object(n.default)(e,{query:{f:"json"}});t.supportedTravelModes||(t.supportedTravelModes=[]);for(var r=0;r<t.supportedTravelModes.length;r++)t.supportedTravelModes[r].id||(t.supportedTravelModes[r].id=t.supportedTravelModes[r].itemId);var a=t.currentVersion>=10.4?A(e):S(e),{defaultTravelMode:s,supportedTravelModes:o}=yield a;return t.defaultTravelMode=s,t.supportedTravelModes=o,t}))).apply(this,arguments)}function S(e){return x.apply(this,arguments)}function x(){return(x=Object(a.a)((function*(e){var{data:t}=yield Object(n.default)(e.substring(0,e.indexOf("/rest/")+6)+"info",{query:{f:"json"}});if(!t||!t.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};e=t.owningSystemUrl;var{data:r}=yield Object(n.default)(e+("/"===e[e.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json"}}),a=Object(s.b)("helperServices.routingUtilities.url",r);if(!a)return{supportedTravelModes:[],defaultTravelMode:null};var o=Object(l.c)(e),i=/\/solve$/.test(o.path)?"Route":/\/solveClosestFacility$/.test(o.path)?"ClosestFacility":"ServiceAreas",u=yield Object(n.default)(a+("/"===a[a.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:i}}),p=[],c=null;if(u&&u.data&&u.data.results&&u.data.results.length){var d=u.data.results;for(var f of d)if("supportedTravelModes"===f.paramName){if(f.value&&f.value.features)for(var{attributes:v}of f.value.features)if(v){var y=JSON.parse(v.TravelMode);p.push(y)}}else"defaultTravelMode"===f.paramName&&(c=f.value)}return{supportedTravelModes:p,defaultTravelMode:c}}))).apply(this,arguments)}function A(e){return P.apply(this,arguments)}function P(){return(P=Object(a.a)((function*(e){try{var{data:{supportedTravelModes:t,defaultTravelMode:r}}=yield Object(n.default)(e+("/"===e[e.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json"}});return{supportedTravelModes:t,defaultTravelMode:r}}catch(a){throw new i.a("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:a})}}))).apply(this,arguments)}}}]);
//# sourceMappingURL=143.b9700bbc.chunk.js.map