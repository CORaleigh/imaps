{"version":3,"file":"static/js/1492.2af67f8b.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/node_modules/@stencil/core/internal/client|lazy|/^/.//.*/.entry/.js.*$/|include: //.entry/.js$/|exclude: //.system/.entry/.js$/|groupOptions: {}|namespace object","Components/MapView/utils/labeling.ts","Components/MapView/utils/map.ts","Components/MapView/MapView.tsx"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 67435;\nmodule.exports = webpackEmptyAsyncContext;","import GraphicsLayer from '@arcgis/core/layers/GraphicsLayer';\nimport Graphic from '@arcgis/core/Graphic';\nimport * as geometryEngine from '@arcgis/core/geometry/geometryEngine';\nimport Collection from '@arcgis/core/core/Collection';\nimport * as reactiveUtils from '@arcgis/core/core/reactiveUtils';\nexport const getAllPolyLayers = (view: __esri.MapView): Collection<__esri.FeatureLayer> => {\n  return view.map.allLayers.filter((layer) => {\n    return (\n      (layer.type === 'feature' && (layer as __esri.FeatureLayer).geometryType === 'polygon') || layer.type === 'group'\n    );\n  }) as Collection<__esri.FeatureLayer>;\n};\nconst addLabels = (layers: Collection<__esri.Layer>, group: __esri.GroupLayer, view: __esri.MapView) => {\n  layers.addMany(\n    group.layers.filter((l: __esri.Layer) => {\n      const labelingInfo = (l as __esri.FeatureLayer).labelingInfo;\n      if (!labelingInfo) {\n        return false;\n      }\n      if (labelingInfo.length) {\n        return (\n          l.visible &&\n          l.type === 'feature' &&\n          (labelingInfo[0].minScale >= view.scale || labelingInfo[0].minScale === 0)\n        );\n      } else {\n        return false;\n      }\n    }) as Collection<__esri.FeatureLayer>,\n  );\n};\nexport const getPolyLayers = (view: __esri.MapView): Collection<__esri.FeatureLayer> => {\n  const polyLayers: Collection<__esri.FeatureLayer> = new Collection<__esri.FeatureLayer>();\n  view.map.layers.forEach((layer) => {\n    if (layer.type === 'group' && layer.visible) {\n      const group: __esri.GroupLayer = layer as __esri.GroupLayer;\n      const groups = group.layers.filter((l) => {\n        return l.type === 'group';\n      }) as Collection<__esri.GroupLayer>;\n      addLabels(polyLayers, group, view);\n      groups.forEach((group: __esri.GroupLayer) => {\n        if (group.visible) {\n          addLabels(polyLayers, group, view);\n        }\n      });\n    }\n  });\n  return polyLayers;\n};\nconst hideLabels = (layer: __esri.FeatureLayer) => {\n  if (layer.labelingInfo) {\n    if (layer.labelingInfo[0]?.labelExpression) {\n      layer.labelsVisible = false;\n    }\n  }\n};\nconst updateLabels = (labels: GraphicsLayer, view: __esri.MapView) => {\n  labels.removeAll();\n\n  getPolyLayers(view).forEach((layer: __esri.Layer) => {\n    hideLabels(layer as __esri.FeatureLayer);\n    view.whenLayerView(layer).then((lv: __esri.LayerView) => {\n      (lv as __esri.FeatureLayerView)\n        .queryFeatures({ geometry: view.extent, returnGeometry: true, outFields: ['*'] })\n        .then((featureSet) => {\n          featureSet.features.forEach((feature: __esri.Graphic) => {\n            if ((layer as __esri.FeatureLayer).labelingInfo) {\n              if ((layer as __esri.FeatureLayer).labelingInfo[0].labelExpression) {\n                const symbol = ((layer as __esri.FeatureLayer).labelingInfo[0].symbol as __esri.TextSymbol).clone();\n                symbol.text = feature.getAttribute(\n                  (layer as __esri.FeatureLayer).labelingInfo[0].labelExpression.replace('[', '').replace(']', ''),\n                );\n                const clipGeom = geometryEngine.clip(feature.geometry, view.extent) as __esri.Polygon;\n                if (clipGeom) {\n                  const dupes = labels.graphics.filter((graphic) => {\n                    return geometryEngine.distance(clipGeom.centroid, graphic.geometry, 9002) < 5;\n                  });\n                  if (dupes.length === 0 && geometryEngine.within(clipGeom.centroid, clipGeom)) {\n                    labels.graphics.add(\n                      new Graphic({\n                        symbol: symbol,\n                        geometry: clipGeom.centroid,\n                      }),\n                    );\n                  }\n                }\n              }\n            }\n          });\n        });\n    });\n  });\n};\nexport const handlePolygonLabels = (view: __esri.MapView): void => {\n  const labels = new GraphicsLayer({ id: 'polygon-labels', listMode: 'hide', title: 'labels' });\n\n  getAllPolyLayers(view).forEach((l) => {\n    l.watch('visible', () => {\n      labels.removeAll();\n\n      setTimeout(() => {\n        updateLabels(labels, view);\n      }, 1000);\n    });\n  });\n\n  view.map.add(labels);\n  reactiveUtils.when(\n    () => view.stationary,\n    () => {\n      updateLabels(labels, view);\n    },\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport WebMap from '@arcgis/core/WebMap';\nimport MapView from '@arcgis/core/views/MapView';\nimport Compass from '@arcgis/core/widgets/Compass';\nimport Track from '@arcgis/core/widgets/Track';\nimport Home from '@arcgis/core/widgets/Home';\nimport ScaleBar from '@arcgis/core/widgets/ScaleBar';\nimport Expand from '@arcgis/core/widgets/Expand';\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\nimport UniqueValueRenderer from '@arcgis/core/renderers/UniqueValueRenderer';\nimport SimpleFillSymbol from '@arcgis/core/symbols/SimpleFillSymbol';\nimport Extent from '@arcgis/core/geometry/Extent';\nimport * as type from '@arcgis/core/smartMapping/symbology/type';\nimport Collection from '@arcgis/core/core/Collection';\n\nimport { handlePolygonLabels } from './labeling';\n\nexport const createSelectionLayer = (view: __esri.MapView) => {\n  const layer = new FeatureLayer({\n    source: [],\n    editingEnabled: true,\n    listMode: 'hide',\n    legendEnabled: false,\n    geometryType: 'polygon',\n    spatialReference: view.spatialReference,\n    id: 'selection-layer',\n    objectIdField: 'OBJECTID',\n    fields: [\n      { name: 'OBJECTID', type: 'oid' },\n      { name: 'selected', type: 'small-integer' },\n      { name: 'PIN_NUM', type: 'string' },\n    ],\n    renderer: new UniqueValueRenderer({\n      field: 'selected',\n      defaultSymbol: new SimpleFillSymbol({\n        style: 'none',\n        outline: {\n          color: [255, 255, 0],\n          width: 2,\n        },\n      }),\n      uniqueValueInfos: [\n        {\n          value: 1,\n          symbol: new SimpleFillSymbol({\n            style: 'none',\n            outline: {\n              color: '#da4246',\n              width: 3,\n            },\n          }),\n          label: 'single',\n        },\n        {\n          value: 0,\n          symbol: new SimpleFillSymbol({\n            style: 'none',\n            outline: {\n              color: '#ffe44b',\n              width: 2,\n            },\n          }),\n          label: 'multiple',\n        },\n      ],\n    }),\n    orderBy: [\n      {\n        order: 'descending',\n        field: 'selected',\n      },\n    ],\n  });\n\n  return layer;\n};\n\nexport const enableStreetHitTest = (view: __esri.MapView, layer: __esri.FeatureLayer): __esri.Handle => {\n  return view.on('click', (e: __esri.ViewClickEvent) => {\n    layer\n      .queryFeatures({\n        geometry: e.mapPoint,\n        outFields: ['*'],\n        returnGeometry: true,\n        outSpatialReference: view.spatialReference,\n        distance: 5,\n        units: 'feet',\n      })\n      .then((featureSet) => {\n        if (featureSet.features.length) {\n          featureSet.features.forEach((feature) => {\n            feature.set('popupTemplate', layer.popupTemplate);\n          });\n\n          view.popup.open({ location: e.mapPoint, features: view.popup.features.concat(featureSet.features) });\n        }\n      });\n    // const opacity = layer.opacity;\n    // const visible = layer.visible;\n    // layer.visible = true;\n    // layer.opacity = 1;\n    // view.hitTest(view.toScreen(e.mapPoint), { include: [layer] }).then(() => {\n    //   setTimeout(() => {\n    //     layer.opacity = opacity;\n    //     layer.visible = visible;\n    //   });\n    // });\n  });\n};\n\nexport const customizePopup = (view: __esri.MapView) => {\n  const propertyLayer = view.map.allLayers.find((layer) => {\n    return layer.type === 'feature' && layer.title.startsWith('Property');\n  }) as __esri.FeatureLayer;\n  view.whenLayerView(propertyLayer).then(() => {\n    if (propertyLayer) {\n      if (propertyLayer.popupTemplate) {\n        propertyLayer.popupTemplate.actions = new Collection([\n          {\n            title: 'Select',\n            id: 'property-select',\n            className: 'esri-icon-search',\n          } as __esri.ActionButton,\n        ]);\n      }\n    }\n  });\n  //check for streets layer and display popup on hit test\n  const streetsLayer = view.map.allLayers.find((layer) => {\n    return layer.type === 'feature' && layer.title === 'Streets';\n  }) as __esri.FeatureLayer;\n  if (streetsLayer) {\n    let clickHandler: __esri.Handle = enableStreetHitTest(view, streetsLayer);\n    view.popup.watch('autoOpenEnabled', (autoOpenEnabled) => {\n      if (autoOpenEnabled) {\n        document.querySelector('.identify-widget')?.classList.add('active');\n        clickHandler = enableStreetHitTest(view, streetsLayer);\n      } else {\n        document.querySelector('.identify-widget')?.classList.remove('active');\n        clickHandler.remove();\n      }\n    });\n  }\n};\n\nexport const checkBasemapScheme = (activeBasemap: __esri.Basemap, view: __esri.MapView) => {\n  const handle = activeBasemap.watch('loaded', (loaded) => {\n    if (loaded) {\n      const scheme = type.getSchemes({ basemap: activeBasemap, geometryType: 'polygon' });\n      const propertyLayer = view.map.allLayers.find((layer) => {\n        return layer.type === 'feature' && layer.title.startsWith('Property');\n      }) as __esri.FeatureLayer;\n      const renderer = (propertyLayer.renderer as __esri.SimpleRenderer).clone();\n      if (scheme.basemapTheme === 'light') {\n        (renderer.symbol as __esri.SimpleFillSymbol).outline.color.r = 0;\n        (renderer.symbol as __esri.SimpleFillSymbol).outline.color.g = 0;\n        (renderer.symbol as __esri.SimpleFillSymbol).outline.color.b = 0;\n      }\n      const isImage =\n        activeBasemap.baseLayers.filter((layer: __esri.Layer) => {\n          return layer.type === 'imagery';\n        }).length > 0;\n      if (scheme.basemapTheme === 'dark' || isImage || activeBasemap.title.toLocaleLowerCase().includes('dark')) {\n        (renderer.symbol as __esri.SimpleFillSymbol).outline.color.r = 255;\n        (renderer.symbol as __esri.SimpleFillSymbol).outline.color.g = 255;\n        (renderer.symbol as __esri.SimpleFillSymbol).outline.color.b = 255;\n      }\n      propertyLayer.renderer = renderer;\n      // propertyLayer.refresh();\n      handle.remove();\n    }\n  });\n};\n\nexport const createMapView = (mapRef: any, mapProperties: any, viewProperties: any): MapView => {\n  const map = new WebMap({ portalItem: mapProperties });\n  //hide login window if map contains layer that is not shared publicly\n\n  viewProperties.map = map;\n  viewProperties.container = mapRef;\n  viewProperties.constraints = {\n    minZoom: 9,\n    maxScale: 0,\n    geometry: {\n      type: 'polygon',\n      rings: [\n        [\n          [-78.757458636999957, 36.070027180000068],\n          [-78.706070661999945, 36.08235327400007],\n          [-78.499343823999936, 36.012638772000059],\n          [-78.412423414999978, 35.970995647000052],\n          [-78.391380921999939, 35.944141155000068],\n          [-78.349012644999959, 35.93119994500006],\n          [-78.339159479999978, 35.913731514000062],\n          [-78.287870576999978, 35.891199952000079],\n          [-78.245326746999979, 35.820179324000037],\n          [-78.465650834999963, 35.70069565700004],\n          [-78.708899327999973, 35.519481978000044],\n          [-78.75843785699999, 35.53222101800003],\n          [-78.995072509999943, 35.610178497000049],\n          [-78.949385179999979, 35.753017484000054],\n          [-78.949267660999965, 35.795162885000025],\n          [-78.934367633999955, 35.834113977000072],\n          [-78.906079037999973, 35.868106451000074],\n          [-78.832520153999951, 35.868333760000041],\n          [-78.811532427999964, 35.929404193000039],\n          [-78.765480039999943, 35.921115857000075],\n          [-78.75440329099996, 35.936258378000048],\n          [-78.720010866999985, 35.962579521000066],\n          [-78.700550740999972, 36.00774804200006],\n          [-78.756361870999967, 36.027280124000072],\n          [-78.757458636999957, 36.070027180000068],\n        ],\n      ],\n    },\n  };\n  const view = new MapView(viewProperties);\n\n  //workaround for bug when popup has multiple features\n  // view.popup.watch('features', (features) => {\n  //   console.log(features);\n  //   requestAnimationFrame(() => {\n  //     document.querySelector('.esri-popup__feature-menu-button')?.dispatchEvent(new MouseEvent('click'));\n  //     requestAnimationFrame(() => {\n  //       document.querySelector('.esri-popup__feature-menu-button')?.dispatchEvent(new MouseEvent('click'));\n  //     });\n  //   });\n  // });\n\n  return view;\n};\n\nexport const checkLocalStorage = (view: MapView): void => {\n  if (window.localStorage.getItem('imaps')) {\n    const webmap: WebMap = WebMap.fromJSON(JSON.parse(window.localStorage.getItem('imaps') as string));\n    webmap.load().then(() => {\n      view.map.allLayers.forEach((layer) => {\n        const lyr = webmap.allLayers.find((l) => {\n          return layer.id === l.id;\n        });\n        layer.visible = lyr?.visible;\n        layer.opacity = lyr?.opacity;\n      });\n    });\n\n    view.map.basemap = webmap.basemap;\n\n    view.extent = webmap.initialViewProperties.viewpoint.targetGeometry.extent;\n  }\n};\nexport const addOverviewMap = (view: __esri.MapView): Expand => {\n  const expand: Expand = new Expand({\n    mode: 'floating',\n    expandIconClass: 'esri-icon-overview-arrow-top-left',\n    collapseIconClass: 'esri-icon-overview-arrow-bottom-right',\n  });\n\n  view.ui.add(expand, 'bottom-right');\n  return expand;\n};\nexport const streetviewClick: IHandle | null = null;\n\nexport const createStreetviewButton = (): any => {\n  const button = document.createElement('div');\n  button.classList.add('streetview-widget');\n  button.classList.add('esri-component');\n  button.classList.add('esri-widget--button');\n  button.classList.add('esri-widget');\n  button.classList.add('map-tool');\n  button.setAttribute('role', 'button');\n  button.setAttribute('aria-label', 'Open streetview');\n  button.setAttribute('title', 'Open streetview');\n  const icon = document.createElement('calcite-icon');\n\n  //icon.classList.add('esri-icon');\n  icon.setAttribute('icon', '360-view');\n  //icon.setAttribute('aria-hidden', 'true');\n\n  const text = document.createElement('span');\n  text.classList.add('esri-icon-font-fallback-text');\n  text.textContent = 'Open streetview';\n  button.appendChild(icon);\n  button.appendChild(text);\n\n  return button;\n};\nexport const createIdentifyButton = (view: MapView): any => {\n  const infoButton = document.createElement('div');\n  infoButton.classList.add('identify-widget');\n  infoButton.classList.add('esri-component');\n  infoButton.classList.add('esri-widget--button');\n  infoButton.classList.add('esri-widget');\n  infoButton.classList.add('active');\n  infoButton.classList.add('map-tool');\n\n  infoButton.setAttribute('role', 'button');\n  infoButton.setAttribute('aria-label', 'Identify features');\n  infoButton.setAttribute('title', 'Identify features');\n  const icon = document.createElement('span');\n  icon.classList.add('esri-icon');\n  icon.classList.add('esri-icon-description');\n  icon.setAttribute('aria-hidden', 'true');\n\n  const text = document.createElement('span');\n  text.classList.add('esri-icon-font-fallback-text');\n  text.textContent = 'Idenfity features';\n  infoButton.appendChild(icon);\n  infoButton.appendChild(text);\n  view.popup.autoOpenEnabled = true;\n  return infoButton;\n};\n\nexport const createAlert = () => {\n  const alert = document.createElement('calcite-alert');\n\n  alert.setAttribute('scale', 'm');\n  alert.setAttribute('color', 'red');\n  alert.setAttribute('icon', 'exclamation-mark-triangle');\n  alert.classList.add(document.body.classList.contains('dark') ? 'calcite-theme-dark' : 'calcite-theme-light');\n  const title = document.createElement('div');\n  title.slot = 'title';\n  title.textContent = 'Required layers missing from web map';\n  const message = document.createElement('div');\n  message.slot = 'message';\n  message.textContent = 'iMAPS cannot load, please contact';\n  const link = document.createElement('a');\n  link.slot = 'link';\n  link.href = 'mailto:gis@wakegov.com';\n  link.textContent = 'Wake County GIS';\n  alert.appendChild(title);\n  alert.appendChild(message);\n  alert.append(link);\n  document.body.appendChild(alert);\n  alert.setAttribute('active', '');\n};\nexport const createMapWidgets = (view: MapView): any[] => {\n  setTimeout(() => {\n    handlePolygonLabels(view);\n  }, 5000);\n  const widgets = [];\n  const identify = createIdentifyButton(view);\n  widgets.push(identify);\n  view.ui.add(identify, 'top-left');\n\n  const streetview = createStreetviewButton();\n  widgets.push(streetview);\n  view.ui.add(streetview, 'top-left');\n\n  const home = new Home({\n    view: view,\n    goToOverride: (view: __esri.MapView | __esri.SceneView) => {\n      view.goTo(\n        new Extent({\n          xmin: -79.65669272952547,\n          xmax: -77.64619468265059,\n          ymin: 35.02761892388883,\n          ymax: 36.52937589457206,\n          spatialReference: { wkid: 4326 },\n        }),\n      );\n    },\n  });\n  view.ui.add(home, 'top-left');\n  widgets.push(home);\n  const compass = new Compass({ view: view });\n  view.ui.add(compass, 'top-left');\n  widgets.push(compass);\n  const track = new Track({ view: view });\n  view.ui.add(track, 'top-left');\n  widgets.push(track);\n  const scalebar = new ScaleBar({ view: view });\n  view.ui.add(scalebar, 'bottom-left');\n  widgets.push(scalebar);\n  return widgets;\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\nimport React, { lazy, Suspense, useEffect, useRef, useState } from 'react';\nimport IdentityManager from '@arcgis/core/identity/IdentityManager';\n\nimport {\n  checkLocalStorage,\n  createMapView,\n  createMapWidgets,\n  createSelectionLayer,\n  addOverviewMap,\n  checkBasemapScheme,\n  customizePopup,\n  createAlert,\n} from './utils/map';\n\nimport './MapView.scss';\nimport * as reactiveUtils from '@arcgis/core/core/reactiveUtils';\nimport ReactDOM from 'react-dom';\nexport const MapView = (props: any) => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [loaded, setLoaded] = useState(false);\n  const [selectionLayer, setSelectionLayer] = useState<FeatureLayer>();\n\n  const [view, setView] = useState<__esri.MapView>();\n  const viewRef = useRef<__esri.MapView>();\n  const widgets = useRef<any[]>([]);\n\n  const saveMap = () => {\n    // if (document.visibilityState === 'hidden' || document.hidden) {\n    viewRef.current?.map.removeMany(\n      viewRef.current?.map.allLayers\n        .filter((layer) => {\n          return layer.type === 'group' && !(layer as __esri.GroupLayer).layers.length;\n        })\n        .toArray(),\n    );\n    const json = (viewRef.current?.map as any).toJSON();\n    json.initialState.viewpoint.targetGeometry = viewRef.current?.extent;\n    window.localStorage.setItem('imaps', JSON.stringify(json));\n    // }\n  };\n  const checkRequiredLayers = (mapView: __esri.MapView): boolean => {\n    const condos = mapView.map.allTables.filter((layer) => {\n      return layer.title.includes('Condo') && layer.type === 'feature';\n    });\n\n    const addresses = mapView.map.allTables.filter((layer) => {\n      return layer.title.includes('Address') && layer.type === 'feature';\n    });\n\n    const property = mapView.map.allLayers.filter((layer) => {\n      return layer.title.includes('Property') && layer.type === 'feature';\n    });\n    return property.length > 0 && condos.length > 0 && addresses.length > 0;\n  };\n  useEffect(() => {\n    // read map and view properties from props\n    const mapProperties = { id: props.id };\n    const viewProperties = {};\n    // create map and view\n\n    IdentityManager.on('dialog-create', () => {\n      const observer: MutationObserver = new MutationObserver((mutations) => {\n        if (mutations.length) {\n          ((mutations[0]?.target as HTMLElement)?.querySelector('.esri-button--secondary') as HTMLElement)?.click();\n          observer.disconnect();\n        } else {\n          observer.disconnect();\n        }\n      });\n\n      const container = IdentityManager.dialog.container;\n\n      observer.observe(container as Node, { childList: true });\n    });\n    if (!loaded) {\n      console.log('creating map view');\n      createMapView(mapRef.current, mapProperties, viewProperties).when((mapView: __esri.MapView) => {\n        if (checkRequiredLayers(mapView)) {\n          setLoaded(true);\n          props.initialized(mapView);\n          widgets.current.push(createMapWidgets(mapView));\n\n          const expand: __esri.Expand = addOverviewMap(mapView);\n          reactiveUtils\n            .whenOnce(() => expand.expanded)\n            .then(() => {\n              const Overview = lazy(() => import('../Overview/Overview'));\n              ReactDOM.render(\n                <Suspense fallback={''}>\n                  <Overview view={mapView} expand={expand} />\n                </Suspense>,\n                document.createElement('div'),\n              );\n            });\n          setView(mapView);\n          customizePopup(mapView);\n          mapView.popup.on('trigger-action', (event) => {\n            if (event.action.title === 'Select') {\n              props.geometryChanged(mapView.popup.location);\n            }\n          });\n          viewRef.current = mapView;\n          const layer = createSelectionLayer(mapView);\n          setSelectionLayer(layer);\n\n          viewRef.current?.map.add(layer);\n\n          viewRef.current?.on('hold', (event: any) => {\n            props.geometryChanged(event.mapPoint);\n          });\n\n          checkLocalStorage(mapView);\n          checkBasemapScheme(mapView.map.basemap, mapView);\n        } else {\n          createAlert();\n          setLoaded(true);\n          props.mapError();\n        }\n      });\n    }\n\n    window.addEventListener('pagehide', saveMap);\n    return () => {\n      window.removeEventListener('pagehide', saveMap);\n      // view && view.destroy();\n      // widgets.current.forEach((widget) => {\n      //   widget && widget.destroy();\n      // });\n    };\n  }, []); // only after initial render\n  useEffect(() => {\n    if (props.selectedProperties) {\n      props.selectedProperties.forEach((feature: __esri.Graphic) => {\n        feature?.setAttribute('selected', 0);\n      });\n      if (props.selectedFeature?.attributes) {\n        props.selectedProperties\n          .find((feature: __esri.Graphic) => {\n            return feature.attributes.PIN_NUM === props.selectedFeature.attributes.PIN_NUM;\n          })\n          ?.setAttribute('selected', 1);\n      }\n      selectionLayer?.queryFeatures({ where: '1=1', returnGeometry: true }).then((featureSet) => {\n        selectionLayer?.applyEdits({ deleteFeatures: featureSet.features }).then((result) => {\n          selectionLayer?.applyEdits({ addFeatures: props.selectedProperties }).then((result) => {\n            console.log(result);\n          });\n        });\n      });\n    }\n  }, [props.selectedProperties]);\n\n  return <div ref={mapRef} />;\n};\nexport default MapView;\n"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","addLabels","layers","group","view","addMany","filter","l","labelingInfo","length","visible","type","minScale","scale","updateLabels","labels","removeAll","polyLayers","Collection","map","forEach","layer","groups","getPolyLayers","labelExpression","labelsVisible","hideLabels","whenLayerView","lv","queryFeatures","geometry","extent","returnGeometry","outFields","featureSet","features","feature","symbol","clone","text","getAttribute","replace","clipGeom","geometryEngine","clip","graphics","graphic","distance","centroid","within","add","Graphic","enableStreetHitTest","on","mapPoint","outSpatialReference","spatialReference","units","set","popupTemplate","popup","open","location","concat","createMapWidgets","setTimeout","GraphicsLayer","listMode","title","allLayers","geometryType","getAllPolyLayers","watch","reactiveUtils","stationary","handlePolygonLabels","widgets","identify","infoButton","document","createElement","classList","setAttribute","icon","textContent","appendChild","autoOpenEnabled","createIdentifyButton","push","ui","streetview","button","createStreetviewButton","home","Home","goToOverride","goTo","Extent","xmin","xmax","ymin","ymax","wkid","compass","Compass","track","Track","scalebar","ScaleBar","MapView","props","mapRef","useRef","loaded","setLoaded","useState","selectionLayer","setSelectionLayer","setView","viewRef","saveMap","current","removeMany","toArray","json","toJSON","initialState","viewpoint","targetGeometry","window","localStorage","setItem","JSON","stringify","useEffect","mapProperties","viewProperties","IdentityManager","observer","MutationObserver","mutations","target","querySelector","click","disconnect","container","observe","childList","console","log","WebMap","portalItem","constraints","minZoom","maxScale","rings","createMapView","when","mapView","condos","allTables","includes","addresses","checkRequiredLayers","initialized","expand","Expand","mode","expandIconClass","collapseIconClass","addOverviewMap","expanded","Overview","lazy","ReactDOM","Suspense","fallback","propertyLayer","find","startsWith","actions","className","streetsLayer","clickHandler","remove","customizePopup","event","action","geometryChanged","FeatureLayer","source","editingEnabled","legendEnabled","objectIdField","fields","name","renderer","UniqueValueRenderer","field","defaultSymbol","SimpleFillSymbol","style","outline","color","width","uniqueValueInfos","value","label","orderBy","order","createSelectionLayer","getItem","webmap","parse","load","lyr","opacity","basemap","initialViewProperties","checkLocalStorage","activeBasemap","handle","scheme","basemapTheme","r","g","b","isImage","baseLayers","toLocaleLowerCase","checkBasemapScheme","alert","body","contains","slot","message","link","href","append","createAlert","mapError","addEventListener","removeEventListener","selectedProperties","selectedFeature","attributes","PIN_NUM","where","applyEdits","deleteFeatures","result","addFeatures","ref"],"sourceRoot":""}