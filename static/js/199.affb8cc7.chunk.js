(this.webpackJsonpimaps=this.webpackJsonpimaps||[]).push([[199],{274:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return r})),n.d(t,"d",(function(){return a})),n.d(t,"e",(function(){return o})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return l})),n.d(t,"h",(function(){return d})),n.d(t,"i",(function(){return c}));const i=[252,146,31,255],s=[153,153,153,255],r={type:"esriSMS",style:"esriSMSCircle",size:6,color:i,outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[153,153,153,255]}},o={type:"esriSLS",style:"esriSLSSolid",width:.75,color:i},a={type:"esriSFS",style:"esriSFSSolid",color:[252,146,31,196],outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[255,255,255,191]}},u={type:"esriTS",color:[255,255,255,255],font:{family:"arial-unicode-ms",size:10,weight:"bold"},horizontalAlignment:"center",kerning:!0,haloColor:[0,0,0,255],haloSize:1,rotated:!1,text:"",xoffset:0,yoffset:0,angle:0},l={type:"esriSMS",style:"esriSMSCircle",color:[0,0,0,255],outline:null,size:10.5},c={type:"esriSLS",style:"esriSLSSolid",color:[0,0,0,255],width:1.5},d={type:"esriSFS",style:"esriSFSSolid",color:[0,0,0,255],outline:null}},523:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return _}));var i=n(102),s=n(88),r=n(87),o=n(85),a=n(91),u=n(98),l=n(110),c=n(180),d=n(768),p=n(477),y=n(870),f=n(735),h=n(618),g=n(1099),m=n(244),b=n(268),j=n(105);const S={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class _{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){var e;null==(e=this._queryEngine)||e.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(e,t={}){this.loadOptions={url:e.url,customParameters:e.customParameters};const n=[];await this._checkProjection(e.spatialReference);let i=null;e.url&&(i=await this._fetch(null==t?void 0:t.signal));const r=Object(f.c)(i,{geometryType:e.geometryType}),o=e.fields||r.fields||[],a=null!=e.hasZ?e.hasZ:r.hasZ,u=r.geometryType,c=e.objectIdField||r.objectIdFieldName||"__OBJECTID",p=e.spatialReference||l.b;let g=e.timeInfo;o===r.fields&&r.unknownFields.length>0&&n.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:r.unknownFields}});let _=o.find((e=>e.name===c));_?("esriFieldTypeString"!==_.type&&(_.type="esriFieldTypeOID"),_.editable=!1,_.nullable=!1):(_={alias:c,name:c,type:"string"===r.objectIdFieldType?"esriFieldTypeString":"esriFieldTypeOID",editable:!1,nullable:!1},o.unshift(_));const F={};for(const l of o){if(null==l.name&&(l.name=l.alias),null==l.alias&&(l.alias=l.name),!l.name)throw new s.a("geojson-layer:invalid-field-name","field name is missing",{field:l});if(!b.a.jsonValues.includes(l.type))throw new s.a("geojson-layer:invalid-field-type",`invalid type for field "${l.name}"`,{field:l});if(l.name!==_.name){const e=Object(j.r)(l);void 0!==e&&(F[l.name]=e)}}this._fieldsIndex=new m.a(o);const I=this._fieldsIndex.requiredFields.indexOf(_);if(I>-1&&this._fieldsIndex.requiredFields.splice(I,1),g){if(g.startTimeField){const e=this._fieldsIndex.get(g.startTimeField);e?(g.startTimeField=e.name,e.type="esriFieldTypeDate"):g.startTimeField=null}if(g.endTimeField){const e=this._fieldsIndex.get(g.endTimeField);e?(g.endTimeField=e.name,e.type="esriFieldTypeDate"):g.endTimeField=null}if(g.trackIdField){const e=this._fieldsIndex.get(g.trackIdField);e?g.trackIdField=e.name:(g.trackIdField=null,n.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:g}}))}g.startTimeField||g.endTimeField||(n.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:g}}),g=null)}const w=u?Object(h.d)(u):null,O={warnings:n,featureErrors:[],layerDefinition:{...S,drawingInfo:w,templates:Object(h.c)(F),extent:null,geometryType:u,objectIdField:c,fields:o,hasZ:!!a,timeInfo:g}};this._queryEngine=new y.a({fields:o,geometryType:u,hasM:!1,hasZ:a,objectIdField:c,spatialReference:p,timeInfo:g,featureStore:new d.a({geometryType:u,hasM:!1,hasZ:a}),cacheSpatialQueries:!0}),this._createDefaultAttributes=Object(h.b)(F,c);const E=await this._createFeatures(i);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,E);const T=this._normalizeFeatures(E,O.warnings,O.featureErrors);if(this._queryEngine.featureStore.addMany(T),O.layerDefinition.extent=this._queryEngine.fullExtent,O.layerDefinition.timeInfo){const{start:e,end:t}=this._queryEngine.timeExtent;O.layerDefinition.timeInfo.timeExtent=[e,t]}return O}async applyEdits(e){const{spatialReference:t,geometryType:n}=this._queryEngine;return await Promise.all([Object(g.c)(t,n),Object(p.a)(e.adds,t),Object(p.a)(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){var t;return this.loadOptions.customParameters=e,null==(t=this._snapshotTask)||t.abort(),this._snapshotTask=Object(a.g)(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);const t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t)}),(e=>{this._queryEngine.featureStore.clear(),Object(a.l)(e)||r.a.getLogger("esri.layers.GeoJSONLayer").error(new s.a("geojson-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete(),{extent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent}}async _createFeatures(e){const{geometryType:t,hasZ:n,objectIdField:i}=this._queryEngine,s=Object(f.a)(e,{geometryType:t,hasZ:n,objectIdField:i});if(!Object(l.d)(this._queryEngine.spatialReference,l.b))for(const r of s)Object(o.l)(r.geometry)&&(r.geometry=Object(c.d)(Object(p.b)(Object(c.k)(r.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),l.b,this._queryEngine.spatialReference)));return s}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(e){const{url:t,customParameters:n}=this.loadOptions,s=(await Object(i.default)(t,{responseType:"json",query:{...n},signal:e})).data;return await Object(f.d)(s),s}_normalizeFeatures(e,t,n){const{objectIdField:i}=this._queryEngine,s=[];for(const r of e){const e=this._createDefaultAttributes(),o=Object(g.d)(this._fieldsIndex,e,r.attributes,!0,t);o?null==n||n.push(o):(this._assignObjectId(e,r.attributes,!0),r.attributes=e,r.objectId=e[i],s.push(r))}return s}_applyEdits(e){const{adds:t,updates:n,deletes:i}=e,s={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(s,t),n&&n.length&&this._applyUpdateEdits(s,n),i&&i.length){for(const e of i)s.deleteResults.push(Object(g.b)(e));this._queryEngine.featureStore.removeManyById(i)}return{extent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent,featureEditResults:s}}_applyAddEdits(e,t){const{addResults:n}=e,{geometryType:i,hasM:s,hasZ:r,objectIdField:a,spatialReference:l,featureStore:d}=this._queryEngine,y=[];for(const c of t){if(c.geometry&&i!==Object(u.c)(c.geometry)){n.push(Object(g.a)("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),s=Object(g.d)(this._fieldsIndex,t,c.attributes);if(s)n.push(s);else{if(this._assignObjectId(t,c.attributes),c.attributes=t,null!=c.uid){const t=c.attributes[a];e.uidToObjectId[c.uid]=t}Object(o.l)(c.geometry)&&(c.geometry=Object(p.b)(Object(g.e)(c.geometry,l),c.geometry.spatialReference,l)),y.push(c),n.push(Object(g.b)(c.attributes[a]))}}d.addMany(Object(c.c)([],y,i,r,s,a))}_applyUpdateEdits({updateResults:e},t){const{geometryType:n,hasM:i,hasZ:s,objectIdField:r,spatialReference:a,featureStore:l}=this._queryEngine;for(const d of t){const{attributes:t,geometry:y}=d,f=t&&t[r];if(null==f){e.push(Object(g.a)(`Identifier field ${r} missing`));continue}if(!l.has(f)){e.push(Object(g.a)(`Feature with object id ${f} missing`));continue}const h=Object(c.i)(l.getFeature(f),n,s,i);if(Object(o.l)(y)){if(n!==Object(u.c)(y)){e.push(Object(g.a)("Incorrect geometry type."));continue}h.geometry=Object(p.b)(Object(g.e)(y,a),y.spatialReference,a)}if(t){const n=Object(g.d)(this._fieldsIndex,h.attributes,t);if(n){e.push(n);continue}}l.add(Object(c.a)(h,n,s,i,r)),e.push(Object(g.b)(f))}}_createObjectIdGenerator(e,t){const n=e.fieldsIndex.get(e.objectIdField);if("esriFieldTypeString"===n.type)return()=>n.name+"-"+Date.now().toString(16);let i=Number.NEGATIVE_INFINITY;for(const s of t)s.objectId&&(i=Math.max(i,s.objectId));return i=Math.max(0,i)+1,()=>i++}_assignObjectId(e,t,n=!1){const i=this._queryEngine.objectIdField;e[i]=n&&i in t?t[i]:this._objectIdGenerator()}async _checkProjection(e){try{await Object(p.a)(l.b,e)}catch{throw new s.a("geojson-layer","Projection not supported")}}}},618:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return u})),n.d(t,"c",(function(){return l})),n.d(t,"d",(function(){return a}));var i=n(82),s=n(89),r=n(647),o=n(274);function a(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?o.c:"esriGeometryPolyline"===e?o.e:o.d}}}function u(e,t){if(Object(i.a)("esri-csp-restrictions"))return()=>({[t]:null,...e});try{let n=`this.${t} = null;`;for(const t in e)n+=`this${t.includes(".")?`["${t}"]`:`.${t}`} = ${JSON.stringify(e[t])};`;const i=new Function(n);return()=>new i}catch(n){return()=>({[t]:null,...e})}}function l(e={}){return[{name:"New Feature",description:"",prototype:{attributes:Object(s.a)(e)}}]}function c(e,t){return{attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0},query:r.a,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0},editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1}}}},735:function(e,t,n){"use strict";n.d(t,"a",(function(){return I})),n.d(t,"b",(function(){return u})),n.d(t,"c",(function(){return F})),n.d(t,"d",(function(){return _}));var i=n(88),s=n(261),r=n(188),o=n(105);const a={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function u(e){return a[e]}function*l(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*c(e){if(!e)return null;switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function d(e){for(const t of e)if(t.length>2)return!0;return!1}function p(e){let t=0;for(let n=0;n<e.length;n++){const i=e[n],s=e[(n+1)%e.length];t+=i[0]*s[1]-s[0]*i[1]}return t<=0}function y(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]||e.push(t),e}function f(e,t,n){switch(t.type){case"LineString":case"MultiPoint":return function(e,t,n){return m(e,t.coordinates,n),e}(e,t,n);case"MultiLineString":return function(e,t,n){for(const i of t.coordinates)m(e,i,n);return e}(e,t,n);case"MultiPolygon":return function(e,t,n){for(const i of t.coordinates){h(e,i[0],n);for(let t=1;t<i.length;t++)g(e,i[t],n)}return e}(e,t,n);case"Point":return function(e,t,n){return j(e,t.coordinates,n),e}(e,t,n);case"Polygon":return function(e,t,n){const i=t.coordinates;h(e,i[0],n);for(let s=1;s<i.length;s++)g(e,i[s],n);return e}(e,t,n)}}function h(e,t,n){const i=y(t);!function(e){return!p(e)}(i)?m(e,i,n):b(e,i,n)}function g(e,t,n){const i=y(t);!function(e){return p(e)}(i)?m(e,i,n):b(e,i,n)}function m(e,t,n){for(const i of t)j(e,i,n);e.lengths.push(t.length)}function b(e,t,n){for(let i=t.length-1;i>=0;i--)j(e,t[i],n);e.lengths.push(t.length)}function j(e,t,n){const[i,s,r]=t;e.coords.push(i,s),n.hasZ&&e.coords.push(r||0)}function S(e){switch(typeof e){case"string":return"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}function _(e){if(!e)throw new i.a("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==e.type&&"FeatureCollection"!==e.type)throw new i.a("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:e});const{crs:t}=e;if(!t)return;const n="string"==typeof t?t:"name"===t.type?t.properties.name:"EPSG"===t.type?t.properties.code:null,s=new RegExp(".*(CRS84H?|4326)$","i");if(!n||!s.test(n))throw new i.a("geojson-layer:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:t})}function F(e,t={}){const n=[],i=new Set,s=new Set;let r,a=!1,p=null,y=!1,{geometryType:f=null}=t,h=!1;for(const o of l(e)){const{geometry:e,properties:t,id:l}=o;if((!e||(f||(f=u(e.type)),u(e.type)===f))&&(a||(a=d(c(e))),y||(y=null!=l,y&&(r=typeof l,p=Object.keys(t).filter((e=>t[e]===l)))),y&&null!=l&&(p.length>1?p=p.filter((e=>t[e]===l)):1===p.length&&(p=t[p[0]]===l?p:[])),!h&&t)){let e=!0;for(const r in t){if(i.has(r))continue;const o=t[r];if(null==o){e=!1,s.add(r);continue}const a=S(o);"unknown"!==a?(s.delete(r),i.add(r),n.push({name:r,alias:r,type:a})):s.add(r)}h=e}}const g=p&&1===p.length&&p[0]||null;if(g)for(const u of n)if(u.name===g&&Object(o.u)(u)){u.type="esriFieldTypeOID";break}return{fields:n,geometryType:f,hasZ:a,objectIdFieldName:g,objectIdFieldType:r,unknownFields:Array.from(s)}}function I(e,t){return Array.from(function*(e,t={}){const{geometryType:n,objectIdField:i}=t;for(const a of e){var o;const{geometry:e,properties:l,id:c}=a;if(e&&u(e.type)!==n)continue;const d=l||{};let p=null!=(o=d[i])?o:null;i&&null!=c&&!d[i]&&(d[i]=p=c);const y=new s.b(e?f(new r.a,e,t):null,d,null,p);yield y}}(l(e),t))}}}]);
//# sourceMappingURL=199.affb8cc7.chunk.js.map