(this.webpackJsonpimaps=this.webpackJsonpimaps||[]).push([[35],{1213:function(e,r,t){"use strict";t.r(r),t.d(r,"getGeometryServiceURL",(function(){return c})),t.d(r,"projectGeometry",(function(){return u}));var n=t(153),i=t(88),a=t(181),o=t(718),l=t(643);async function c(e=null,r){var t,o;if(n.a.geometryServiceUrl)return n.a.geometryServiceUrl;if(!e)throw new i.a("internal:geometry-service-url-not-configured");let l;l="portal"in e?e.portal||a.a.getDefault():e,await l.load({signal:r});const c=null==(t=l.helperServices)||null==(o=t.geometry)?void 0:o.url;if(!c)throw new i.a("internal:geometry-service-url-not-configured");return c}async function u(e,r,t=null,n){const a=await c(t,n),u=new l.a;u.geometries=[e],u.outSpatialReference=r;const s=await Object(o.a)(a,u,{signal:n});if(s&&Array.isArray(s)&&1===s.length)return s[0];throw new i.a("internal:geometry-service-projection-failed")}}}]);
//# sourceMappingURL=35.183307cf.chunk.js.map