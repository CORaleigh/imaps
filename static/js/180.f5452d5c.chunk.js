(this.webpackJsonpimaps=this.webpackJsonpimaps||[]).push([[180],{1063:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return E}));var s=i(79),r=(i(111),i(131)),o=i(122),a=i(89),n=i(85),c=i(112),h=i(81),l=(i(83),i(80)),p=i(485),d=i(597),v=i(790);class y{constructor(e,t,i,s,r){this.graphic=e,this.index=t,this.x=i,this.y=s,this.viewEvent=r,this.type="graphic-click"}}class b{constructor(e,t,i,s,r){this.graphic=e,this.index=t,this.x=i,this.y=s,this.viewEvent=r,this.type="graphic-double-click"}}class u{constructor(e,t,i,s,r,o,a,n,c,h){this.graphic=e,this.allGraphics=t,this.index=i,this.x=s,this.y=r,this.dx=o,this.dy=a,this.totalDx=n,this.totalDy=c,this.viewEvent=h,this.defaultPrevented=!1,this.type="graphic-move-start"}preventDefault(){this.defaultPrevented=!0}}class g{constructor(e,t,i,s,r,o,a,n,c,h){this.graphic=e,this.allGraphics=t,this.index=i,this.x=s,this.y=r,this.dx=o,this.dy=a,this.totalDx=n,this.totalDy=c,this.viewEvent=h,this.defaultPrevented=!1,this.type="graphic-move"}preventDefault(){this.defaultPrevented=!0}}class m{constructor(e,t,i,s,r,o,a,n,c,h){this.graphic=e,this.allGraphics=t,this.index=i,this.x=s,this.y=r,this.dx=o,this.dy=a,this.totalDx=n,this.totalDy=c,this.viewEvent=h,this.defaultPrevented=!1,this.type="graphic-move-stop"}preventDefault(){this.defaultPrevented=!0}}class _{constructor(e,t,i,s,r){this.graphic=e,this.index=t,this.x=i,this.y=s,this.viewEvent=r,this.type="graphic-pointer-over"}}class f{constructor(e,t,i,s,r){this.graphic=e,this.index=t,this.x=i,this.y=s,this.viewEvent=r,this.type="graphic-pointer-out"}}class O{constructor(e,t,i,s,r){this.graphic=e,this.index=t,this.x=i,this.y=s,this.viewEvent=r,this.type="graphic-pointer-down"}}class x{constructor(e,t,i,s,r){this.graphic=e,this.index=t,this.x=i,this.y=s,this.viewEvent=r,this.type="graphic-pointer-up"}}var G=i(426),w=i(707),j=i(484),S=i(240),k=i(190),M=i(183);let V=class extends r.a.EventedAccessor{constructor(e){super(e),this._activeGraphic=null,this._indicators=[],this._dragEvent=null,this._handles=new o.a,this._hoverGraphic=null,this._initialDragGeometry=null,this._viewHandles=new o.a,this._manipulators=[],this._layerViews=null,this.type="graphic-mover",this.callbacks={onGraphicClick(){},onGraphicDoubleClick(){},onGraphicMoveStart(){},onGraphicMove(){},onGraphicMoveStop(){},onGraphicPointerOver(){},onGraphicPointerOut(){},onGraphicPointerDown(){},onGraphicPointerUp(){}},this.enableMoveAllGraphics=!1,this.graphics=[],this.indicatorsEnabled=!0,this.layer=new p.a({listMode:"hide",internal:!0,title:"GraphicMover highlight layer"}),this.view=null}initialize(){Object(v.a)(this.view,this.layer),this.refresh(),this._handles.add([Object(c.d)(this,["graphics","graphics.length"],(()=>this.refresh())),Object(c.j)(this,"view.ready",(()=>{this._viewHandles.add([this.view.on("immediate-click",(e=>this._clickHandler(e)),G.b.TOOL),this.view.on("double-click",(e=>this._doubleClickHandler(e)),G.b.TOOL),this.view.on("pointer-down",(e=>this._pointerDownHandler(e)),G.b.TOOL),this.view.on("pointer-move",(e=>this._pointerMoveHandler(e)),G.b.TOOL),this.view.on("pointer-up",(e=>this._pointerUpHandler(e)),G.b.TOOL),this.view.on("drag",(e=>this._dragHandler(e)),G.b.TOOL),this.view.on("key-down",(e=>this._keyDownHandler(e)),G.b.TOOL)])}))])}destroy(){var e;this._removeIndicators(),null==(e=this.view.map)||e.remove(this.layer),this.layer.destroy(),this.reset(),this._manipulators.forEach((e=>e.destroy())),this._manipulators=null,this._handles=Object(n.e)(this._handles),this._viewHandles=Object(n.e)(this._viewHandles)}get state(){const e=!!this.get("view.ready"),t=!!this.get("graphics.length"),i=this._activeGraphic;return e&&t?i?"moving":"active":e?"ready":"disabled"}refresh(){this._setUpIndicators(),this._setUpManipulators(),this._syncLayerViews()}reset(){this._activeGraphic=null,this._hoverGraphic=null,this._dragEvent=null}updateGeometry(e,t){const i=this.graphics[e];i&&(i.set("geometry",t),this._setUpIndicators())}_clickHandler(e){const t=this._findTargetGraphic(Object(j.a)(e));if(t){const i=new y(t,this.graphics.indexOf(t),e.x,e.y,e);this.emit("graphic-click",i),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(i)}}_doubleClickHandler(e){const t=this._findTargetGraphic(Object(j.a)(e));if(t){const i=new b(t,this.graphics.indexOf(t),e.x,e.y,e);this.emit("graphic-double-click",i),this.callbacks.onGraphicDoubleClick&&this.callbacks.onGraphicDoubleClick(i)}}_pointerDownHandler(e){const t=this._findTargetGraphic(Object(j.a)(e));if(t){this._activeGraphic=t;const{x:i,y:s}=e,r=new O(t,this.graphics.indexOf(t),i,s,e);this.emit("graphic-pointer-down",r),this.callbacks.onGraphicPointerDown&&this.callbacks.onGraphicPointerDown(r)}else this._activeGraphic=null}_pointerUpHandler(e){if(this._activeGraphic){const{x:t,y:i}=e,s=this.graphics.indexOf(this._activeGraphic),r=new x(this._activeGraphic,s,t,i,e);this.emit("graphic-pointer-up",r),this.callbacks.onGraphicPointerUp&&this.callbacks.onGraphicPointerUp(r)}}_pointerMoveHandler(e){if(this._dragEvent)return;const t=this._findTargetGraphic(Object(j.a)(e));if(t){const{x:i,y:s}=e;if(this._hoverGraphic){if(this._hoverGraphic===t)return;const r=this.graphics.indexOf(this._hoverGraphic),o=new f(this.graphics[r],r,i,s,e);this._hoverGraphic=null,this.emit("graphic-pointer-out",o),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(o)}const r=this.graphics.indexOf(t),o=new _(t,r,i,s,e);return this._hoverGraphic=t,this.emit("graphic-pointer-over",o),void(this.callbacks.onGraphicPointerOver&&this.callbacks.onGraphicPointerOver(o))}if(this._hoverGraphic){const{x:t,y:i}=e,s=this.graphics.indexOf(this._hoverGraphic),r=new f(this.graphics[s],s,t,i,e);this._hoverGraphic=null,this.emit("graphic-pointer-out",r),this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(r)}}_dragHandler(e){if("start"!==e.action&&!this._dragEvent||!this._activeGraphic||!this._activeGraphic.geometry)return;"start"===e.action&&this._removeIndicators(),e.stopPropagation();const{action:t,x:i,y:s}=e,r=this.graphics.indexOf(this._activeGraphic),o=this._dragEvent?i-this._dragEvent.x:0,n=this._dragEvent?s-this._dragEvent.y:0,c=i-e.origin.x,h=s-e.origin.y,l="start"===t?this._activeGraphic.geometry:this._initialDragGeometry,p=Object(d.a)(l,c,h,this.view);if(this._activeGraphic.geometry=p,this.enableMoveAllGraphics&&this.graphics.forEach((e=>{e!==this._activeGraphic&&(e.geometry=Object(d.a)(e.geometry,o,n,this.view))})),this._dragEvent=e,"start"===t){this._initialDragGeometry=Object(a.a)(l);const t=new u(this._activeGraphic,this.graphics,r,i,s,o,n,c,h,e);this.emit("graphic-move-start",t),this.callbacks.onGraphicMoveStart&&this.callbacks.onGraphicMoveStart(t),t.defaultPrevented&&this._activeGraphic.set("geometry",l)}else if("update"===t){const t=new g(this._activeGraphic,this.graphics,r,i,s,o,n,c,h,e);this.emit("graphic-move",t),this.callbacks.onGraphicMove&&this.callbacks.onGraphicMove(t),t.defaultPrevented&&(this._activeGraphic.geometry=l)}else{const t=new m(this._activeGraphic,this.graphics,r,i,s,o,n,c,h,e);this._dragEvent=null,this._activeGraphic=null,this._setUpIndicators(),this.emit("graphic-move-stop",t),this.callbacks.onGraphicMoveStop&&this.callbacks.onGraphicMoveStop(t),t.defaultPrevented&&(this.graphics[r].set("geometry",this._initialDragGeometry),this._setUpIndicators()),this._initialDragGeometry=null}}_keyDownHandler(e){"a"!==e.key&&"d"!==e.key&&"n"!==e.key||"moving"!==this.state||e.stopPropagation()}_findTargetGraphic(e){const t=this.view.toMap(e);let i=null,s=Number.MAX_VALUE;this._syncLayerViews();const r=this._layerViews.flatMap((e=>"graphicsViews"in e?Array.from(e.graphicsViews(),(e=>e.hitTest(t))).flat():e.graphicsView.hitTest(t))).filter((e=>this.graphics.indexOf(e)>-1));return r.length?r[0]:(this._manipulators.forEach((t=>{const r=t.intersectionDistance(e);Object(n.l)(r)&&r<s&&(s=r,i=t.graphic)})),i)}_syncLayerViews(){this._layerViews=[];const e=new Set;for(const t of this.graphics){const i=this.view.allLayerViews.find((e=>{const i=e.layer;return"sublayers"in i&&Object(n.l)(i.sublayers)&&!!i.sublayers.find((e=>e===t.layer))||i===t.layer}));i&&e.add(i)}this._layerViews=[...e]}_setUpManipulators(){const{graphics:e,view:t}=this;this._manipulators.forEach((e=>e.destroy())),this._manipulators=null!=e&&e.length?e.map((e=>new w.a({graphic:e,view:t}))):[]}_setUpIndicators(){var e;this._removeIndicators(),this.indicatorsEnabled&&(this._indicators=(null==(e=this.graphics)?void 0:e.map((e=>{const t=e.clone();return t.symbol=this._getSymbolForIndicator(e),t})))||[],this.layer.addMany(this._indicators))}_removeIndicators(){this._indicators.length&&(this.layer.removeMany(this._indicators),this._indicators.forEach((e=>e.destroy())),this._indicators=[])}_getSymbolForIndicator(e){if(Object(n.k)(e.symbol))return null;switch(e.symbol.type){case"cim":return new S.a({style:"circle",size:12,color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}});case"picture-marker":{const{xoffset:t,yoffset:i,height:s,width:r}=e.symbol,o=s===r?r:Math.max(s,r);return new S.a({xoffset:t,yoffset:i,size:o,style:"square",color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}})}case"simple-marker":{const{xoffset:t,yoffset:i,size:s,style:r}=e.symbol;return new S.a({xoffset:t,yoffset:i,style:"circle"===r?"circle":"square",size:s+2,color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}})}case"simple-fill":return new M.a({color:[0,0,0,0],outline:{style:"dash",color:[255,127,0,1],width:1}});case"simple-line":return new k.a({color:[255,127,0,1],style:"dash",width:1});case"text":{const{xoffset:t,yoffset:i}=e.symbol;return new S.a({xoffset:t,yoffset:i,size:12,color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}})}default:return null}}};Object(s.a)([Object(h.b)()],V.prototype,"_activeGraphic",void 0),Object(s.a)([Object(h.b)({readOnly:!0})],V.prototype,"type",void 0),Object(s.a)([Object(h.b)()],V.prototype,"callbacks",void 0),Object(s.a)([Object(h.b)()],V.prototype,"enableMoveAllGraphics",void 0),Object(s.a)([Object(h.b)()],V.prototype,"graphics",void 0),Object(s.a)([Object(h.b)()],V.prototype,"indicatorsEnabled",void 0),Object(s.a)([Object(h.b)()],V.prototype,"layer",void 0),Object(s.a)([Object(h.b)({readOnly:!0})],V.prototype,"state",null),Object(s.a)([Object(h.b)()],V.prototype,"view",void 0),V=Object(s.a)([Object(l.a)("esri.views.draw.support.GraphicMover")],V);const E=V},1264:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return N}));var s=i(79),r=(i(98),i(121)),o=i(107),a=i(88),n=i(131),c=i(122),h=i(87),l=i(85),p=i(91),d=i(112),v=i(81),y=(i(84),i(82),i(83),i(80)),b=i(245),u=i(485),g=i(240),m=i(898),_=i(597),f=i(1063),O=i(790),x=i(800),G=i(426),w=i(629),j=i(636),S=i(621),k=i(133),M=i(109);class V{constructor(e,t,i){this.graphic=e,this.mover=t,this.selected=i,this.type="reshape-start"}}class E{constructor(e,t,i){this.graphic=e,this.mover=t,this.selected=i,this.type="reshape"}}class C{constructor(e,t,i){this.graphic=e,this.mover=t,this.selected=i,this.type="reshape-stop"}}class I{constructor(e,t,i){this.mover=e,this.dx=t,this.dy=i,this.type="move-start"}}class D{constructor(e,t,i){this.mover=e,this.dx=t,this.dy=i,this.type="move"}}class H{constructor(e,t,i){this.mover=e,this.dx=t,this.dy=i,this.type="move-stop"}}class R{constructor(e){this.added=e,this.type="vertex-select"}}class P{constructor(e){this.removed=e,this.type="vertex-deselect"}}class T{constructor(e,t,i,s){this.added=e,this.graphic=t,this.oldGraphic=i,this.vertices=s,this.type="vertex-add"}}class A{constructor(e,t,i,s){this.removed=e,this.graphic=t,this.oldGraphic=i,this.vertices=s,this.type="vertex-remove"}}const U=x.b.reshapeGraphics,z={vertices:{default:new g.a({style:"circle",size:U.vertex.size,color:U.vertex.color,outline:{color:U.vertex.outlineColor,width:1}}),hover:new g.a({style:"circle",size:U.vertex.hoverSize,color:U.vertex.hoverColor,outline:{color:U.vertex.hoverOutlineColor,width:1}}),selected:new g.a({style:"circle",size:U.selected.size,color:U.selected.color,outline:{color:U.selected.outlineColor,width:1}})},midpoints:{default:new g.a({style:"circle",size:U.midpoint.size,color:U.midpoint.color,outline:{color:U.midpoint.outlineColor,width:1}}),hover:new g.a({style:"circle",size:U.midpoint.size,color:U.midpoint.color,outline:{color:U.midpoint.outlineColor,width:1}})}},L="esri.views.draw.support.Reshape",F=h.a.getLogger(L);let q=class extends n.a.EventedAccessor{constructor(e){super(e),this._activeOperationInfo=null,this._editGeometryOperations=null,this._handles=new c.a,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingTask=null,this._stagedVertex=null,this._viewHandles=new c.a,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.vertexGraphics=new o.a,this.layer=null,this.midpointGraphics=new o.a,this.midpointSymbol=new g.a({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=[],this.snappingManager=null,this.type="reshape",this.view=null}initialize(){this._setup(),this._handles.add([Object(d.j)(this,"view.ready",(()=>{const{layer:e,view:t}=this;Object(O.a)(t,e),this._viewHandles.add([t.on("key-down",(e=>this._keyDownHandler(e)),G.b.TOOL)])})),Object(d.c)(this,"graphic",(()=>this.refresh())),Object(d.c)(this,"layer",((e,t)=>{t&&(this._clearSelection(),this._resetGraphics(t)),this.refresh()})),Object(d.c)(this,"enableMidpoints",(()=>{this.refresh()}))])}destroy(){var e;this._reset(),null==(e=this._mover)||e.destroy(),this._mover=null,this._handles=Object(l.e)(this._handles),this._viewHandles=Object(l.e)(this._viewHandles)}get state(){const e=!!this.get("view.ready"),t=!(!this.get("graphic")||!this.get("layer"));return e&&t?"active":e?"ready":"disabled"}set symbols(e){const{midpoints:t=z.midpoints,vertices:i=z.vertices}=e||{};this._set("symbols",{midpoints:t,vertices:i})}isUIGraphic(e){const t=[];return this.graphic&&t.push(this.graphic),t.concat(this.vertexGraphics.items,this.midpointGraphics.items),t.length&&t.includes(e)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_setup(){const{graphic:e,layer:t}=this;if(!t||!e||Object(l.k)(e.geometry))return;const i=e.geometry;"mesh"!==i.type&&"extent"!==i.type?(this._setupGraphics(),this._setupMover()):this._logGeometryTypeError()}_setUpGeometryHelper(){const e=this.graphic.geometry;if(Object(l.k)(e)||"mesh"===e.type||"extent"===e.type)return void this._logGeometryTypeError();const t="multipoint"===e.type?new k.a({paths:e.points,spatialReference:e.spatialReference}):e;this._editGeometryOperations=j.a.fromGeometry(t,2)}_saveSnappingContextForHandle(e,t){var i;this._snappingGraphicsLayer=new u.a({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer),this._snappingContext=new S.a({editGeometryOperations:this._editGeometryOperations,elevationInfo:{mode:"on-the-ground",offset:0},pointer:(null==(i=t.viewEvent)?void 0:i.pointerType)||"mouse",excludeFeature:this.graphic,visualizer:new m.a(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(e)})}_reset(){this._clearSelection(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){Object(l.l)(this.snappingManager)&&this.snappingManager.doneSnapping(),Object(l.l)(this._snappingGraphicsLayer)&&(this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=Object(l.e)(this._editGeometryOperations),this._snappingTask=Object(l.a)(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(e){this._removeMidpointGraphics(e),this._removeVertexGraphics(e),this._set("selectedVertices",[])}_removeMidpointGraphics(e){const t=e||this.layer;t&&t.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach((e=>e.destroy())),this.midpointGraphics.removeAll()}_removeVertexGraphics(e){const t=e||this.layer;t&&t.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach((e=>e.destroy())),this.vertexGraphics.removeAll()}_getCoordinatesForUI(e){const t=Object(b.b)(e.clone());if("polygon"===e.type)for(const i of t){const e=i[i.length-1];i[0][0]===e[0]&&i[0][1]===e[1]&&i.length>2&&i.pop()}return t}_setupGraphics(){const e=this.graphic.geometry;if(Object(l.l)(e)&&("polyline"===e.type||"polygon"===e.type)){const t=this._getCoordinatesForUI(e);this.enableMidpoints&&this._setUpMidpointGraphics(t),this.enableVertices&&this._setUpVertexGraphics(t)}}_setUpMidpointGraphics(e){this._removeMidpointGraphics();const t=this._createMidpointGraphics(e);this.midpointGraphics.addMany(t),this.layer.addMany(t)}_setUpVertexGraphics(e){this._removeVertexGraphics();const t=this._createVertexGraphics(e);this.vertexGraphics.addMany(t),this._storeRelatedVertexIndices(),this.layer.addMany(t)}_createVertexGraphics(e){const{_graphicAttributes:t,symbols:i,view:{spatialReference:s}}=this,o=[];return null==e||e.forEach(((e,a)=>{e.forEach(((e,n)=>{var c;const[h,l]=e;o.push(new r.a({geometry:new M.a({x:h,y:l,spatialReference:s}),symbol:null==i||null==(c=i.vertices)?void 0:c.default,attributes:{...t,pathIndex:a,pointIndex:n}}))}))})),o}_createMidpointGraphics(e){const{_graphicAttributes:t,symbols:i,view:{spatialReference:s}}=this,o=[];return null==e||e.forEach(((e,a)=>{e.forEach(((n,c)=>{const[h,p]=n,d=e[c+1]?c+1:0;if("polygon"===Object(l.j)(this.graphic.geometry,"type")||0!==d){const[n,l]=e[d],[v,y]=Object(b.d)([h,p],[n,l]);o.push(new r.a({geometry:new M.a({x:v,y:y,spatialReference:s}),symbol:i.midpoints.default,attributes:{...t,pathIndex:a,pointIndexStart:c,pointIndexEnd:d}}))}}))})),o}_storeRelatedVertexIndices(){const e=this.vertexGraphics.items;if(!e)return;const t=e.map((({geometry:e})=>({x:e.x,y:e.y})));for(let i=0;i<t.length;i++){const s=[];for(let e=0;e<t.length;e++){if(i===e)continue;const r=t[i],o=t[e];r.x===o.x&&r.y===o.y&&s.push(e)}e[i].attributes.relatedGraphicIndices=s}}_setupMover(){const{enableMovement:e,graphic:t,midpointGraphics:i,vertexGraphics:s,view:r}=this,o=Object(l.j)(t.geometry,"type"),a="point"===o||"multipoint"===o,n=s.concat(i).items;e&&n.push(t),this._mover=new f.default({enableMoveAllGraphics:!1,indicatorsEnabled:a,graphics:n,view:r,callbacks:{onGraphicClick:e=>this._onGraphicClickCallback(e),onGraphicMoveStart:e=>this._onGraphicMoveStartCallback(e),onGraphicMove:e=>this._onGraphicMoveCallback(e),onGraphicMoveStop:e=>this._onGraphicMoveStopCallback(e),onGraphicPointerOver:e=>this._onGraphicPointerOverCallback(e),onGraphicPointerOut:e=>this._onGraphicPointerOutCallback(e)}})}_onGraphicClickCallback(e){e.viewEvent.stopPropagation();const t=e.graphic;if(t===this.graphic)this.clearSelection(),this.emit("graphic-click",e),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(e);else if(this._isMidpoint(t)){if(2===e.viewEvent.button)return;const i=this.graphic.clone(),s=this._createVertexFromMidpoint(t);this.refresh(),this._emitVertexAddEvent([t],i,s)}else this._isVertex(t)&&(e.viewEvent.stopPropagation(),2===e.viewEvent.button?this._removeVertices(t):(e.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(t)?this._removeFromSelection(t,!0):this._addToSelection(t)))}_setUpOperation(e){const{graphic:t,dx:i,dy:s}=e,r=t===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(t,e),this._activeOperationInfo={target:this.graphic,mover:t,operationType:r?"move":"reshape",totalDx:i,totalDy:s}}_onGraphicMoveStartCallback(e){const t=e.graphic,{dx:i,dy:s}=e;if(t===this.graphic)return this._clearSelection(),this._resetGraphics(),this._setUpOperation(e),this._emitMoveStartEvent(i,s),void("point"===this._editGeometryOperations.data.type&&this._onHandleMove(t,i,s,e,(()=>this._emitMoveEvent(i,s))));if(!this.selectedVertices.includes(t)){if(this._clearSelection(),this._isMidpoint(t)){const e=this.graphic.clone(),i=this._createVertexFromMidpoint(t);this._emitVertexAddEvent([t],e,i)}this._addToSelection(t)}this._setUpOperation(e),this._emitReshapeStartEvent(t),this._onHandleMove(t,i,s,e,(()=>this._emitReshapeEvent(t)))}_onGraphicMoveCallback(e){const{graphic:t,dx:i,dy:s}=e;this._activeOperationInfo.totalDx+=i,this._activeOperationInfo.totalDy+=s;const{operationType:r}=this._activeOperationInfo;"move"===r?"point"===this._editGeometryOperations.data.type?this._onHandleMove(t,i,s,e,(()=>this._emitMoveEvent(i,s))):this._emitMoveEvent(i,s):this._onHandleMove(t,i,s,e,(()=>this._emitReshapeEvent(t)))}_onGraphicMoveStopCallback(e){const{graphic:t,dx:i,dy:s}=e;this._activeOperationInfo.totalDx+=i,this._activeOperationInfo.totalDy+=s,t===this.graphic?(this._emitMoveStopEvent(),this.refresh()):(this._onHandleMove(t,i,s,e,(()=>this._emitReshapeStopEvent(t))),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._isMidpoint(t)&&this.refresh())}_updateMidpointGraphicLocations(e){for(const t of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:r}=t.attributes,[o,a]=e[i][s],[n,c]=e[i][r],[h,l]=Object(b.d)([o,a],[n,c]);t.geometry=new M.a({x:h,y:l,spatialReference:this.view.spatialReference})}}_getIndicesForVertexGraphic({attributes:e}){return[(null==e?void 0:e.pathIndex)||0,(null==e?void 0:e.pointIndex)||0]}_getVertexFromEditGeometry(e){const[t,i]=this._getIndicesForVertexGraphic(e);return this._editGeometryOperations.data.components[t].vertices[i]}_onHandleMove(e,t,i,s,r){if(Object(l.a)(this._snappingTask),!this._snappingContext)return;const o=e.geometry,a="graphic-move-stop"===s.type;if(Object(l.l)(this.snappingManager)&&this.selectedVertices.length<2&&!a){const s=this.snappingManager;this._stagedVertex=s.update(o,this._snappingContext),this._syncGeometryAfterVertexMove(e,new M.a(this._stagedVertex),t,i,a),r(),this._snappingTask=Object(p.g)((async n=>{const c=await s.snap(o,this._snappingContext,n);c.valid&&(this._stagedVertex=c.apply(),this._syncGeometryAfterVertexMove(e,new M.a(this._stagedVertex),t,i,a),r())}))}else{const s=Object(l.l)(this._stagedVertex)?new M.a(this._stagedVertex):o;this._syncGeometryAfterVertexMove(e,s,t,i,a),r()}}async _syncGeometryAfterVertexMove(e,t,i,s,r=!1){const o=this._editGeometryOperations.data.geometry;if("point"===o.type)e.geometry=t;else{const{x:a,y:n}=t,[c,h]=this._getIndicesForVertexGraphic(e);let l=Object(b.b)(o);const p=l[c].length-1;l[c][h]=[a,n],"polygon"===o.type&&(0===h?l[c][p]=[a,n]:h===p&&(l[c][0]=[a,n])),this._isVertex(e)&&(l=this._moveRelatedCoordinates(l,e,a,n),l=this._moveSelectedHandleCoordinates(l,e,i,s,"polygon"===o.type),this._updateMidpointGraphicLocations(l)),this.graphic.geometry=o.clone();const d=this._getVertexFromEditGeometry(e),v=a-d.pos[0],y=n-d.pos[1];this._editGeometryOperations.moveVertices([d],v,y,0),r&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(e),t):e.geometry=t)}}_moveRelatedCoordinates(e,t,i,s){const{relatedGraphicIndices:r}=t.attributes;for(const o of r){const r=this.vertexGraphics.getItemAt(o),{pathIndex:a,pointIndex:n}=r.attributes;e[a][n]=[i,s],r.geometry=t.geometry}return e}_moveSelectedHandleCoordinates(e,t,i,s,r){for(const o of this.selectedVertices)if(o!==t){const{pathIndex:t,pointIndex:a,relatedGraphicIndices:n}=o.attributes,c=Object(_.a)(o.geometry,i,s,this.view),h=e[t].length-1;e[t][a]=[c.x,c.y],o.geometry=c,r&&(0===a?e[t][h]=[c.x,c.y]:a===h&&(e[t][0]=[c.x,c.y]));for(const i of n){const t=this.vertexGraphics.getItemAt(i),{pathIndex:s,pointIndex:r}=t.attributes;e[s][r]=[c.x,c.y],t.geometry=c}}return e}_onGraphicPointerOverCallback(e){const t=e.graphic;this._isVertex(t)&&!this._isSelected(t)&&(t.symbol=this.symbols.vertices.hover),this._updateHoverCursor(t)}_onGraphicPointerOutCallback(e){const t=e.graphic;this._isVertex(t)&&!this._isSelected(t)&&(t.symbol=this.symbols.vertices.default),this.view.cursor="default"}_createVertexFromMidpoint(e){const{_graphicAttributes:t,graphic:i}=this,s=i.geometry;if(Object(l.k)(s)||"polygon"!==s.type&&"polyline"!==s.type)return[];const r=s.clone(),o=[],{pathIndex:a,pointIndexStart:n,pointIndexEnd:c}=e.attributes,{x:h,y:p}=e.geometry,d=0===c?n+1:c,v=Object(b.b)(r);return v[a].splice(d,0,[h,p]),e.attributes={...t,pathIndex:a,pointIndex:d,relatedGraphicIndices:[]},o.push({coordinates:v[a][d],componentIndex:a,vertexIndex:d}),this.graphic.geometry=r,o}_addToSelection(e){e instanceof r.a&&(e=[e]);for(const t of e)t.symbol=this.symbols.vertices.selected;this._set("selectedVertices",this.selectedVertices.concat(e)),this._emitSelectEvent(e)}_removeFromSelection(e,t){const{vertices:i}=this.symbols,s=t?i.hover:i.default;e instanceof r.a&&(e=[e]);for(const r of e)this.selectedVertices.splice(this.selectedVertices.indexOf(r),1),this._set("selectedVertices",this.selectedVertices),r.set("symbol",s);this._emitDeselectEvent(e)}_clearSelection(){if(this.selectedVertices.length){const e=this.selectedVertices;for(const t of this.selectedVertices)t.set("symbol",this.symbols.vertices.default);this._set("selectedVertices",[]),this._emitDeselectEvent(e)}}_keyDownHandler(e){w.a.delete.includes(e.key)&&!e.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(e){const t=this.graphic.geometry;if(Object(l.k)(t)||"polygon"!==t.type&&"polyline"!==t.type)return;if("polygon"===t.type&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;e instanceof r.a&&(e=[e]);const i=this.graphic.clone(),s=t.clone();let o=Object(b.b)(s);const a=[];e instanceof r.a&&(e=[e]);for(const r of e){const{x:e,y:t}=r.geometry;for(let i=0;i<o.length;i++){const s=o[i];for(let r=0;r<s.length;r++){const[n,c]=s[r];e===n&&t===c&&(a.push({coordinates:o[i][r],componentIndex:i,vertexIndex:r}),o[i].splice(Number(r),1))}}}if("polygon"===s.type)o=o.filter((e=>{if(e.length<2)return!1;const[t,i]=e[0],[s,r]=e[e.length-1];return(2!==e.length||t!==s||i!==r)&&(t===s&&i===r||e.push(e[0]),!0)})),s.rings=o;else{for(const e of o)1===e.length&&o.splice(o.indexOf(e),1);s.paths=o}this.graphic.geometry=s,this.refresh(),this._emitVertexRemoveEvent(e,i,a)}_isVertex(e){return this.vertexGraphics.includes(e)}_isSelected(e){return this._isVertex(e)&&this.selectedVertices.includes(e)}_isMidpoint(e){return this.midpointGraphics.includes(e)}_updateHoverCursor(e){this.view.cursor=this._isMidpoint(e)?"copy":"move"}_emitMoveStartEvent(e,t){const i=new I(this.graphic,e,t);this.emit("move-start",i),this.callbacks.onMoveStart&&this.callbacks.onMoveStart(i)}_emitMoveEvent(e,t){const i=new D(this.graphic,e,t);this.emit("move",i),this.callbacks.onMove&&this.callbacks.onMove(i)}_emitMoveStopEvent(){const{totalDx:e,totalDy:t}=this._activeOperationInfo,i=new H(this.graphic,e,t);this.emit("move-stop",i),this.callbacks.onMoveStop&&this.callbacks.onMoveStop(i)}_emitReshapeStartEvent(e){const t=new V(this.graphic,e,this.selectedVertices);this.emit("reshape-start",t),this.callbacks.onReshapeStart&&this.callbacks.onReshapeStart(t)}_emitReshapeEvent(e){const t=new E(this.graphic,e,this.selectedVertices);this.emit("reshape",t),this.callbacks.onReshape&&this.callbacks.onReshape(t)}_emitReshapeStopEvent(e){const t=new C(this.graphic,e,this.selectedVertices);this.emit("reshape-stop",t),this.callbacks.onReshapeStop&&this.callbacks.onReshapeStop(t)}_emitSelectEvent(e){const t=new R(e);this.emit("select",t),this.callbacks.onVertexSelect&&this.callbacks.onVertexSelect(t)}_emitDeselectEvent(e){const t=new P(e);this.emit("deselect",t),this.callbacks.onVertexDeselect&&this.callbacks.onVertexDeselect(t)}_emitVertexAddEvent(e,t,i){const s=new T(e,this.graphic,t,i);this.emit("vertex-add",s),this.callbacks.onVertexAdd&&this.callbacks.onVertexAdd(s)}_emitVertexRemoveEvent(e,t,i){const s=new A(e,this.graphic,t,i);this.emit("vertex-remove",s),this.callbacks.onVertexRemove&&this.callbacks.onVertexRemove(s)}_logGeometryTypeError(){F.error(new a.a("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};Object(s.a)([Object(v.b)()],q.prototype,"callbacks",void 0),Object(s.a)([Object(v.b)()],q.prototype,"enableMidpoints",void 0),Object(s.a)([Object(v.b)()],q.prototype,"enableMovement",void 0),Object(s.a)([Object(v.b)()],q.prototype,"enableVertices",void 0),Object(s.a)([Object(v.b)()],q.prototype,"graphic",void 0),Object(s.a)([Object(v.b)({readOnly:!0})],q.prototype,"vertexGraphics",void 0),Object(s.a)([Object(v.b)()],q.prototype,"layer",void 0),Object(s.a)([Object(v.b)({readOnly:!0})],q.prototype,"midpointGraphics",void 0),Object(s.a)([Object(v.b)()],q.prototype,"midpointSymbol",void 0),Object(s.a)([Object(v.b)({readOnly:!0})],q.prototype,"selectedVertices",void 0),Object(s.a)([Object(v.b)()],q.prototype,"snappingManager",void 0),Object(s.a)([Object(v.b)({readOnly:!0})],q.prototype,"state",null),Object(s.a)([Object(v.b)({value:z})],q.prototype,"symbols",null),Object(s.a)([Object(v.b)({readOnly:!0})],q.prototype,"type",void 0),Object(s.a)([Object(v.b)()],q.prototype,"view",void 0),q=Object(s.a)([Object(y.a)(L)],q);const N=q},569:function(e,t,i){"use strict";function s(e,t){return t?"xoffset"in t&&t.xoffset?Math.max(e,Math.abs(t.xoffset)):"yoffset"in t&&t.yoffset?Math.max(e,Math.abs(t.yoffset||0)):e:e}function r(e,t){return"number"==typeof e?e:e&&e.stops&&e.stops.length?function(e){let t=0,i=0;for(let s=0;s<e.length;s++){const r=e[s].size;"number"==typeof r&&(t+=r,i++)}return t/i}(e.stops):t}function o(e,t){if(!t)return e;const i=t.filter((e=>"size"===e.type)).map((t=>{const{maxSize:i,minSize:s}=t;return(r(i,e)+r(s,e))/2}));let s=0;const o=i.length;if(0===o)return e;for(let r=0;r<o;r++)s+=i[r];const a=Math.floor(s/o);return Math.max(a,e)}function a(e){const t=e&&e.renderer,i="touch"===(e&&e.event&&e.event.pointerType)?9:6;if(!t)return i;const r="visualVariables"in t?o(i,t.visualVariables):i;if("simple"===t.type)return s(r,t.symbol);if("unique-value"===t.type){let e=r;return t.uniqueValueInfos.forEach((t=>{e=s(e,t.symbol)})),e}if("class-breaks"===t.type){let e=r;return t.classBreakInfos.forEach((t=>{e=s(e,t.symbol)})),e}return t.type,r}i.d(t,"a",(function(){return a}))},619:function(e,t,i){"use strict";i.d(t,"a",(function(){return n})),i.d(t,"b",(function(){return c}));i(98);var s=i(85),r=i(114),o=i(569),a=i(96);function n(e,t,i,o=new a.a){let n;if("2d"===i.type)n=t*i.resolution;else if("3d"===i.type){const o=i.overlayPixelSizeInMapUnits(e),a=i.basemapSpatialReference;n=Object(s.l)(a)&&!a.equals(i.spatialReference)?Object(r.e)(a)/Object(r.e)(i.spatialReference):t*o}const c=e.x-n,h=e.y-n,l=e.x+n,p=e.y+n,{spatialReference:d}=i;return o.xmin=Math.min(c,l),o.ymin=Math.min(h,p),o.xmax=Math.max(c,l),o.ymax=Math.max(h,p),o.spatialReference=d,o}function c(e,t,i){const r=i.toMap(e);return!Object(s.k)(r)&&n(r,Object(o.a)(),i,h).intersects(t)}const h=new a.a},707:function(e,t,i){"use strict";i.d(t,"a",(function(){return m}));var s=i(79),r=i(99),o=i(131),a=i(85),n=i(101),c=i(81),h=(i(84),i(82),i(83),i(80)),l=i(148),p=i(116),d=i(106),v=i(207),y=i(384),b=i(296),u=i(312),g=i(619);let m=class extends r.a{constructor(e){super(e),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.events=new o.a.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null}set graphic(e){this._circleCollisionCache=null,this._originalSymbol=e.symbol,this._set("graphic",e),this.attachSymbolChanged()}get elevationInfo(){const e="elevationInfo"in this.graphic.layer&&this.graphic.layer.elevationInfo,t=Object(y.f)(this.graphic),i=e?e.offset:0;return new u.a({mode:t,offset:i})}set focusedSymbol(e){e!==this._get("focusedSymbol")&&(this._set("focusedSymbol",e),this._updateGraphicSymbol(),this._circleCollisionCache=null)}grabbableForEvent(){return!0}set grabbing(e){e!==this._get("grabbing")&&(this._set("grabbing",e),this._updateGraphicSymbol())}set hovering(e){e!==this._get("hovering")&&(this._set("hovering",e),this._updateGraphicSymbol())}set selected(e){e!==this._get("selected")&&(this._set("selected",e),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:e?"select":"deselect"}))}get _focused(){return this._get("hovering")||this._get("grabbing")}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null)}intersectionDistance(e){const t=this.graphic;if(!1===t.visible)return null;const i=t.geometry;if(Object(a.k)(i))return null;const s=this._get("focusedSymbol"),r=Object(a.l)(s)?s:t.symbol;return"2d"===this.view.type?this._intersectDistance2D(this.view,e,i,r):this._intersectDistance3D(this.view,e,t)}attach(){this.attachSymbolChanged(),Object(a.l)(this.layer)&&this.layer.add(this.graphic)}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),Object(a.l)(this.layer)&&this.layer.remove(this.graphic)}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=this.graphic.watch("symbol",(e=>{Object(a.l)(e)&&e!==this.focusedSymbol&&e!==this._originalSymbol&&(this._originalSymbol=e,this._focused&&Object(a.l)(this.focusedSymbol)&&(this.graphic.symbol=this.focusedSymbol))}),!0)}detachSymbolChanged(){Object(a.l)(this._graphicSymbolChangedHandle)&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null)}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&Object(a.l)(this.focusedSymbol)?this.focusedSymbol:this._originalSymbol}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol}_intersectDistance2D(e,t,i,s){if(s=s||Object(b.h)(i),Object(a.k)(s))return null;let r=this._circleCollisionCache;if("point"!==i.type||"simple-marker"!==s.type)return Object(g.b)(t,i,e)?1:null;if(Object(a.k)(r)||!r.originalPoint.equals(i)){const t=i,o=e.spatialReference;if(Object(v.b)(t.spatialReference,o)){const e=Object(v.j)(t,o);r={originalPoint:t.clone(),mapPoint:e,radiusPx:Object(n.g)(s.size)},this._circleCollisionCache=r}}if(Object(a.l)(r)){const i=Object(n.i)(t,f),o=e.toScreen(r.mapPoint),a=r.radiusPx,c=o.x+Object(n.g)(s.xoffset),h=o.y-Object(n.g)(s.yoffset);return Object(l.a)(i,[c,h])<a*a?1:null}return null}_intersectDistance3D(e,t,i){const s=e.toMap(t,{include:[i]});return s&&Object(v.o)(s,_,e.renderSpatialReference)?Object(p.m)(_,e.state.camera.eye):null}};Object(s.a)([Object(c.b)({constructOnly:!0,nonNullable:!0})],m.prototype,"graphic",null),Object(s.a)([Object(c.b)({readOnly:!0})],m.prototype,"elevationInfo",null),Object(s.a)([Object(c.b)({constructOnly:!0,nonNullable:!0})],m.prototype,"view",void 0),Object(s.a)([Object(c.b)({value:null})],m.prototype,"focusedSymbol",null),Object(s.a)([Object(c.b)({constructOnly:!0})],m.prototype,"layer",void 0),Object(s.a)([Object(c.b)()],m.prototype,"interactive",void 0),Object(s.a)([Object(c.b)()],m.prototype,"selectable",void 0),Object(s.a)([Object(c.b)()],m.prototype,"grabbable",void 0),Object(s.a)([Object(c.b)({value:!1})],m.prototype,"grabbing",null),Object(s.a)([Object(c.b)()],m.prototype,"dragging",void 0),Object(s.a)([Object(c.b)()],m.prototype,"hovering",null),Object(s.a)([Object(c.b)({value:!1})],m.prototype,"selected",null),Object(s.a)([Object(c.b)()],m.prototype,"cursor",void 0),m=Object(s.a)([Object(h.a)("esri.views.interactive.GraphicManipulator")],m);const _=Object(d.f)(),f=Object(n.f)()}}]);
//# sourceMappingURL=180.f5452d5c.chunk.js.map