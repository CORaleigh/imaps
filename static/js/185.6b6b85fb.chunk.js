(this.webpackJsonpimaps=this.webpackJsonpimaps||[]).push([[185],{297:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return r})),n.d(t,"d",(function(){return u})),n.d(t,"e",(function(){return o})),n.d(t,"f",(function(){return l})),n.d(t,"g",(function(){return a})),n.d(t,"h",(function(){return d})),n.d(t,"i",(function(){return c}));const i=[252,146,31,255],s=[153,153,153,255],r={type:"esriSMS",style:"esriSMSCircle",size:6,color:i,outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[153,153,153,255]}},o={type:"esriSLS",style:"esriSLSSolid",width:.75,color:i},u={type:"esriSFS",style:"esriSFSSolid",color:[252,146,31,196],outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[255,255,255,191]}},l={type:"esriTS",color:[255,255,255,255],font:{family:"arial-unicode-ms",size:10,weight:"bold"},horizontalAlignment:"center",kerning:!0,haloColor:[0,0,0,255],haloSize:1,rotated:!1,text:"",xoffset:0,yoffset:0,angle:0},a={type:"esriSMS",style:"esriSMSCircle",color:[0,0,0,255],outline:null,size:10.5},c={type:"esriSLS",style:"esriSLSSolid",color:[0,0,0,255],width:1.5},d={type:"esriSFS",style:"esriSFSSolid",color:[0,0,0,255],outline:null}},524:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return j}));var i=n(101),s=n(88),r=n(85),o=n(95),u=n(113),l=n(166),a=n(756),c=n(458),d=n(860),p=n(720),y=n(635),f=n(1072),h=n(243),g=n(267),m=n(107);const b={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class j{constructor(){this._queryEngine=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._requiredFields=this._fieldsIndex=this._createDefaultAttributes=null}async load(e){const t=[];await this._checkProjection(e.spatialReference);let n=null;e.url&&(n=(await Object(i.default)(e.url,{responseType:"json"})).data,await Object(p.d)(n));const o=Object(p.c)(n,{geometryType:e.geometryType}),f=e.fields||o.fields||[],j=null!=e.hasZ?e.hasZ:o.hasZ,F=o.geometryType,S=e.objectIdField||("number"===o.objectIdFieldType?o.objectIdFieldName:"OBJECTID")||"OBJECTID",I=e.spatialReference||u.b;let O=e.timeInfo;if("string"===o.objectIdFieldType&&t.push({name:"geojson-layer:unsupported-id-type",message:"Feature ids are of type string and can't be honored."}),f===o.fields&&o.unknownFields.length>0&&t.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:o.unknownFields}}),S){let e=null;f.some((t=>t.name===S&&(e=t,!0)))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):f.unshift({alias:S,name:S,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const i of f){if(null==i.name&&(i.name=i.alias),null==i.alias&&(i.alias=i.name),!i.name)throw new s.a("geojson-layer:invalid-field-name","field name is missing",{field:i});if(i.name===S&&(i.type="esriFieldTypeOID"),-1===g.a.jsonValues.indexOf(i.type))throw new s.a("geojson-layer:invalid-field-type",`invalid type for field "${i.name}"`,{field:i})}const _={};this._requiredFields=[];for(const i of f)if("esriFieldTypeOID"!==i.type&&"esriFieldTypeGlobalID"!==i.type){i.editable=null==i.editable||!!i.editable,i.nullable=null==i.nullable||!!i.nullable;const e=Object(m.r)(i);i.nullable||void 0!==e?_[i.name]=e:this._requiredFields.push(i)}if(this._fieldsIndex=new h.a(f),O){if(O.startTimeField){const e=this._fieldsIndex.get(O.startTimeField);e?(O.startTimeField=e.name,e.type="esriFieldTypeDate"):O.startTimeField=null}if(O.endTimeField){const e=this._fieldsIndex.get(O.endTimeField);e?(O.endTimeField=e.name,e.type="esriFieldTypeDate"):O.endTimeField=null}if(O.trackIdField){const e=this._fieldsIndex.get(O.trackIdField);e?O.trackIdField=e.name:(O.trackIdField=null,t.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:O}}))}O.startTimeField||O.endTimeField||(t.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:O}}),O=null)}const w=F?Object(y.d)(F):null,E={warnings:t,featureErrors:[],layerDefinition:{...b,drawingInfo:w,templates:Object(y.c)(_),extent:null,geometryType:F,objectIdField:S,fields:f,hasZ:!!j,timeInfo:O}};this._queryEngine=new d.a({fields:f,geometryType:F,hasM:!1,hasZ:j,objectIdField:S,spatialReference:I,timeInfo:O,featureStore:new a.a({geometryType:F,hasM:!1,hasZ:j}),cacheSpatialQueries:!0}),this._createDefaultAttributes=Object(y.b)(_,S),this._nextObjectId=o.maxObjectId+1;const T=Object(p.a)(n,{geometryType:F,hasZ:j,objectIdField:"number"===o.objectIdFieldType?S:null});if(!Object(u.d)(I,u.b))for(const i of T)Object(r.k)(i.geometry)&&(i.geometry=Object(l.d)(Object(c.b)(Object(l.k)(i.geometry,F,j,!1),u.b,I)));return this._loadInitialFeatures(E,T),E}async applyEdits(e){const{spatialReference:t,geometryType:n}=this._queryEngine;return await Promise.all([Object(f.c)(t,n),Object(c.a)(e.adds,t),Object(c.a)(e.updates,t)]),this._applyEdits(e)}queryFeatures(e={},t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e={},t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e={},t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e={},t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}_loadInitialFeatures(e,t){const{featureStore:n,objectIdField:i}=this._queryEngine,s=[];for(const r of t){const t=this._createDefaultAttributes(),n=Object(f.d)(this._fieldsIndex,t,r.attributes,this._requiredFields,!0,e.warnings);n?e.featureErrors.push(n):(this._assignObjectId(t,r.attributes,!0),r.attributes=t,r.objectId=t[i],s.push(r))}if(n.addMany(s),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:t,end:n}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[t,n]}return e}_applyEdits(e){const{adds:t,updates:n,deletes:i}=e,s={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(s,t),n&&n.length&&this._applyUpdateEdits(s,n),i&&i.length){for(const e of i)s.deleteResults.push(Object(f.b)(e));this._queryEngine.featureStore.removeManyById(i)}return{fullExtent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent,featureEditResults:s}}_applyAddEdits(e,t){const{addResults:n}=e,{geometryType:i,hasM:s,hasZ:u,objectIdField:a,spatialReference:d,featureStore:p}=this._queryEngine,y=[];for(const l of t){if(l.geometry&&i!==Object(o.c)(l.geometry)){n.push(Object(f.a)("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),s=Object(f.d)(this._fieldsIndex,t,l.attributes,this._requiredFields);if(s)n.push(s);else{if(this._assignObjectId(t,l.attributes),l.attributes=t,null!=l.uid){const t=l.attributes[a];e.uidToObjectId[l.uid]=t}Object(r.k)(l.geometry)&&(l.geometry=Object(c.b)(Object(f.e)(l.geometry,d),l.geometry.spatialReference,d)),y.push(l),n.push(Object(f.b)(l.attributes[a]))}}p.addMany(Object(l.c)([],y,i,u,s,a))}_applyUpdateEdits({updateResults:e},t){const{geometryType:n,hasM:i,hasZ:s,objectIdField:u,spatialReference:a,featureStore:d}=this._queryEngine;for(const p of t){const{attributes:t,geometry:y}=p,h=t&&t[u];if(null==h){e.push(Object(f.a)(`Identifier field ${u} missing`));continue}if(!d.has(h)){e.push(Object(f.a)(`Feature with object id ${h} missing`));continue}const g=Object(l.i)(d.getFeature(h),n,s,i);if(Object(r.k)(y)){if(n!==Object(o.c)(y)){e.push(Object(f.a)("Incorrect geometry type."));continue}g.geometry=Object(c.b)(Object(f.e)(y,a),y.spatialReference,a)}if(t){const n=Object(f.d)(this._fieldsIndex,g.attributes,t,this._requiredFields);if(n){e.push(n);continue}}d.add(Object(l.a)(g,n,s,i,u)),e.push(Object(f.b)(h))}}_assignObjectId(e,t,n=!1){const i=this._queryEngine.objectIdField;n&&isFinite(t[i])?e[i]=t[i]:e[i]=this._nextObjectId++}async _checkProjection(e){try{await Object(c.a)(u.b,e)}catch{throw new s.a("geojson-layer","Projection not supported")}}}},635:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return a})),n.d(t,"d",(function(){return u}));var i=n(79),s=n(87),r=n(660),o=n(297);function u(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?o.c:"esriGeometryPolyline"===e?o.e:o.d}}}function l(e,t){if(Object(i.a)("csp-restrictions"))return()=>({[t]:null,...e});try{let n=`this.${t} = null;`;for(const t in e)n+=`this${t.indexOf(".")?`["${t}"]`:`.${t}`} = ${JSON.stringify(e[t])};`;const i=new Function(n);return()=>new i}catch(n){return()=>({[t]:null,...e})}}function a(e={}){return[{name:"New Feature",description:"",prototype:{attributes:Object(s.a)(e)}}]}function c(e,t){return{attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0},query:r.a,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0},editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1}}}},720:function(e,t,n){"use strict";n.d(t,"a",(function(){return I})),n.d(t,"b",(function(){return u})),n.d(t,"c",(function(){return S})),n.d(t,"d",(function(){return F}));var i=n(88),s=n(258),r=n(185);const o={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function u(e){return o[e]}function*l(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*a(e){if(!e)return null;switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function c(e){for(const t of e)if(t.length>2)return!0;return!1}function d(e){let t=0;for(let n=0;n<e.length;n++){const i=e[n],s=e[(n+1)%e.length];t+=i[0]*s[1]-s[0]*i[1]}return t<=0}function p(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]||e.push(t),e}function y(e,t,n){switch(t.type){case"LineString":case"MultiPoint":return function(e,t,n){return g(e,t.coordinates,n),e}(e,t,n);case"MultiLineString":return function(e,t,n){for(const i of t.coordinates)g(e,i,n);return e}(e,t,n);case"MultiPolygon":return function(e,t,n){for(const i of t.coordinates){f(e,i[0],n);for(let t=1;t<i.length;t++)h(e,i[t],n)}return e}(e,t,n);case"Point":return function(e,t,n){return b(e,t.coordinates,n),e}(e,t,n);case"Polygon":return function(e,t,n){const i=t.coordinates;f(e,i[0],n);for(let s=1;s<i.length;s++)h(e,i[s],n);return e}(e,t,n)}}function f(e,t,n){const i=p(t);!function(e){return!d(e)}(i)?g(e,i,n):m(e,i,n)}function h(e,t,n){const i=p(t);!function(e){return d(e)}(i)?g(e,i,n):m(e,i,n)}function g(e,t,n){for(const i of t)b(e,i,n);e.lengths.push(t.length)}function m(e,t,n){for(let i=t.length-1;i>=0;i--)b(e,t[i],n);e.lengths.push(t.length)}function b(e,t,n){const[i,s,r]=t;e.coords.push(i,s),n.hasZ&&e.coords.push(r||0)}function j(e){switch(typeof e){case"string":return"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}function F(e){if(!e)throw new i.a("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==e.type&&"FeatureCollection"!==e.type)throw new i.a("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:e});const{crs:t}=e;if(!t)return;const n="string"==typeof t?t:"name"===t.type?t.properties.name:"EPSG"===t.type?t.properties.code:null,s=new RegExp(".*(CRS84H?|4326)$","i");if(!n||!s.test(n))throw new i.a("geojson-layer:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:t})}function S(e,t={}){const n=[],i=new Set,s=new Set;let r,o=!1,d=Number.NEGATIVE_INFINITY,p=null,y=!1,{geometryType:f=null}=t,h=!1;for(const m of l(e)){const{geometry:e,properties:t,id:l}=m;if((!e||(f||(f=u(e.type)),u(e.type)===f))&&(o||(o=c(a(e))),y||(y=null!=l,y&&(r=typeof l,"number"===r&&(p=Object.keys(t).filter((e=>t[e]===l))))),y&&"number"===r&&null!=l&&(d=Math.max(d,l),p.length>1?p=p.filter((e=>t[e]===l)):1===p.length&&(p=t[p[0]]===l?p:[])),!h&&t)){let e=!0;for(const r in t){if(i.has(r))continue;const o=t[r];if(null==o){e=!1,s.add(r);continue}const u=j(o);"unknown"!==u?(s.delete(r),i.add(r),n.push({name:r,alias:r,type:u})):s.add(r)}h=e}}const g=p&&1===p.length&&p[0]||null;if(g)for(const u of n)u.name===g&&(u.type="esriFieldTypeOID");return{fields:n,geometryType:f,hasZ:o,maxObjectId:Math.max(0,d),objectIdFieldName:g,objectIdFieldType:r,unknownFields:Array.from(s)}}function I(e,t){return Array.from(function*(e,t={}){const{geometryType:n,objectIdField:i}=t;for(const l of e){var o;const{geometry:e,properties:a,id:c}=l;if(e&&u(e.type)!==n)continue;const d=a||{};let p=null!=(o=d[i])?o:null;i&&null!=c&&!d[i]&&(d[i]=p=c);const f=new s.b(e?y(new r.a,e,t):null,d,null,p);yield f}}(l(e),t))}}}]);
//# sourceMappingURL=185.6b6b85fb.chunk.js.map