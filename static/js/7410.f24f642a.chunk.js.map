{"version":3,"file":"static/js/7410.f24f642a.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/node_modules/@stencil/core/internal/client|lazy|/^/.//.*/.entry/.js.*$/|include: //.entry/.js$/|exclude: //.system/.entry/.js$/|groupOptions: {}|namespace object","Components/PropertyPanel/PropertySearch/utils/search.ts","Components/PropertyPanel/PropertySearch/PropertySearch.tsx","../node_modules/@arcgis/core/rest/utils.js"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 67435;\nmodule.exports = webpackEmptyAsyncContext;","import Collection from '@arcgis/core/core/Collection';\nimport LayerSearchSource from '@arcgis/core/widgets/Search/LayerSearchSource';\n\nimport widgetsSearch from '@arcgis/core/widgets/Search';\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\nlet condos: FeatureLayer;\nlet addresses: FeatureLayer;\nlet search: widgetsSearch;\nlet properties: FeatureLayer;\n\n//put suggestions that start with text first, contains last\nconst sortSuggestions = (input: string, field: string, data: __esri.Graphic[]): __esri.Graphic[] => {\n  const first = [];\n  const others = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].attributes[field].indexOf(input) === 0) {\n      first.push(data[i]);\n    } else {\n      others.push(data[i]);\n    }\n  }\n  first.sort();\n  others.sort();\n  return first.concat(others);\n};\nconst getSuggestions = (\n  params: any,\n  name: string,\n  layer: FeatureLayer,\n  outFields: string[],\n  orderByFields: string[],\n  searchFields: string[],\n  startsWith: boolean,\n  searchWidget: widgetsSearch,\n) => {\n  const whereArray: string[] = [];\n  const term: string = params.suggestTerm\n    .toUpperCase()\n    .replace(/'/g, \"''\")\n    .replace(/[\\u2018\\u2019]/g, \"''\");\n  searchFields.forEach((field) => {\n    if (startsWith) {\n      whereArray.push(`${field} LIKE '${term}%'`);\n    } else {\n      whereArray.push(`${field} LIKE '%${term}%'`);\n    }\n  });\n  return layer\n    .queryFeatures({\n      returnDistinctValues: true,\n      outFields: outFields,\n      returnGeometry: false,\n      orderByFields: orderByFields,\n      num: searchWidget.activeSource ? 50 : 6,\n      where: whereArray.join(' OR '),\n    })\n    .then((results) => {\n      const features = sortSuggestions(params.suggestTerm.toUpperCase(), searchFields[0], results.features);\n      return features.map((feature) => {\n        return {\n          key: name,\n          text: feature.getAttribute(outFields[0]),\n          sourceIndex: params.sourceIndex,\n        };\n      });\n    });\n};\n\nconst getLayerSource = (\n  placeholder: string,\n  name: string,\n  table: FeatureLayer,\n  outFields: string[],\n  orderByFields: string[],\n  searchFields: string[],\n  startsWith: boolean,\n  resultFields: string[],\n  searchWidget: widgetsSearch,\n) => {\n  return new LayerSearchSource({\n    placeholder: placeholder,\n    name: name,\n    maxSuggestions: 6,\n    getSuggestions: (params: any) => {\n      return getSuggestions(params, name, table, outFields, orderByFields, searchFields, startsWith, searchWidget);\n    },\n    getResults: (params: any) => {\n      const term: string = params.suggestResult.text\n        .toUpperCase()\n        .replace(/'/g, \"''\")\n        .replace(/[\\u2018\\u2019]/g, \"''\");\n      return table\n        .queryFeatures({\n          where: `${orderByFields[0]} = '${term}'`,\n          outFields: resultFields,\n        })\n        .then((results) => {\n          return results.features.map((feature: __esri.Graphic) => {\n            return {\n              feature: feature,\n              name: name,\n            };\n          });\n        }) as any;\n    },\n  });\n};\n\nconst getProperty = (oids: number[]): Promise<__esri.Graphic[]> => {\n  return new Promise((resolve) => {\n    const relationship = condos.relationships.find((r) => {\n      return r.name === 'CONDO_PROPERTY';\n    });\n    condos\n      .queryRelatedFeatures({\n        relationshipId: relationship?.id,\n        objectIds: oids,\n        outFields: ['OBJECTID', 'REID'],\n        returnGeometry: false,\n      })\n      .then((result) => {\n        const oids: number[] = [];\n        for (const key in result) {\n          result[key].features.forEach((feature: __esri.Graphic) => {\n            oids.push(feature.getAttribute('OBJECTID'));\n          });\n        }\n        properties\n          .queryFeatures({\n            objectIds: oids,\n            outFields: ['*'],\n            returnGeometry: true,\n            outSpatialReference: { wkid: 102100 },\n          })\n          .then((result) => {\n            search.view.goTo({ target: result.features });\n            resolve(result.features);\n          });\n      });\n  });\n};\nconst searchRelatedCondos = (oids: number[], layer: __esri.FeatureLayer) => {\n  return new Promise((resolve) => {\n    const relationship = layer.relationships.find((r) => {\n      return r.name === 'ADDRESSES_CONDO';\n    });\n    const params: any = { outFields: ['*'], objectIds: oids, relationshipId: relationship?.id };\n\n    layer.queryRelatedFeatures(params).then((result) => {\n      const oids: number[] = [];\n      const features: __esri.Graphic[] = [];\n      for (const key in result) {\n        result[key].features.forEach((feature: __esri.Graphic) => {\n          oids.push(feature.getAttribute('OBJECTID'));\n          features.push(feature);\n        });\n      }\n      getProperty(oids).then((properties: __esri.Graphic[]) => {\n        if (features.length > 1) {\n          //this.emit('features-selected', result.features);\n          resolve({ properties: properties, features: features });\n        }\n        if (features.length === 1) {\n          const feature = features[0];\n          feature.geometry = properties[0].geometry;\n          feature.layer = condos;\n          resolve({ properties: properties, features: features, feature: feature });\n          //this.emit('feature-selected', feature);\n        }\n\n        // this.emit('properties-selected', properties);\n      });\n    });\n  });\n};\n// const whereDefined = (where: string) => {\n//     searchCondos(where, []);\n// };\nexport const searchCondos = (where: string, oids: number[]): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const params: any = { outFields: ['*'] };\n    if (where != '') {\n      params.where = where;\n    } else {\n      params.objectIds = oids;\n    }\n    condos.queryFeatures(params).then((result) => {\n      const oids: number[] = [];\n      result.features.forEach((feature: __esri.Graphic) => {\n        oids.push(feature.getAttribute('OBJECTID'));\n      });\n      getProperty(oids).then((properties: __esri.Graphic[]) => {\n        if (result.features.length > 1) {\n          //this.emit('features-selected', result.features);\n          resolve({ properties: properties, features: result.features });\n        }\n        if (result.features.length === 1) {\n          const feature = result.features[0];\n          feature.geometry = properties[0].geometry;\n          feature.layer = condos;\n          resolve({ properties: properties, features: result.features, feature: feature });\n          //this.emit('feature-selected', feature);\n        }\n        reject('no results');\n        // this.emit('properties-selected', properties);\n      });\n    });\n  });\n};\nconst searchResultSelected = (layer: FeatureLayer, source: string, results: any, term: string) => {\n  return new Promise((resolve) => {\n    if (!layer && source === 'Owner') {\n      layer = condos;\n    }\n    if (!layer && ['Site Address', 'Street Name'].includes(source)) {\n      layer = addresses;\n    }\n    const oids: number[] = [];\n    results.forEach((r: any) => {\n      oids.push(r.feature.getAttribute('OBJECTID'));\n    });\n    let where = '';\n\n    if (layer?.layerId === 4) {\n      where = `${source === 'Street Name' ? 'FULL_STREET_NAME' : 'SITE_ADDRESS'} = '${term}'`;\n      searchRelatedCondos(oids, layer).then((result) => {\n        if (result) {\n          resolve(result);\n        } else {\n          searchCondos(where, oids).then((result) => {\n            resolve(result);\n          });\n        }\n      });\n    } else {\n      searchCondos(where, oids).then((result) => {\n        resolve(result);\n      });\n    }\n  });\n};\nconst wildcardSearch = (where: string, condoTable: FeatureLayer): Promise<any> => {\n  return new Promise((resolve) => {\n    document.querySelector('.esri-search__warning-menu')?.setAttribute('style', 'visibility: hidden');\n\n    const oids: number[] = [];\n    condoTable.queryFeatures({ where: where, outFields: ['*'] }).then((result) => {\n      result.features.forEach((f) => {\n        oids.push(f.getAttribute('OBJECTID'));\n      });\n      if (oids.length) {\n        getProperty(oids).then((properties) => {\n          resolve({ features: result.features, properties: properties });\n        });\n      }\n    });\n  });\n};\nconst getWildcardSearchWhere = (searchFields: string[], term: string): string => {\n  let where = '';\n  if (!searchFields.length) {\n    where = `SITE_ADDRESS like '%${term}%' OR FULL_STREET_NAME like '%${term}%' OR OWNER like '%${term}%' OR REID like '${term}%' OR PIN_NUM like '${term}%'`;\n  } else {\n    if (searchFields.includes('OWNER')) {\n      where = `OWNER like '_%${term}%'`;\n    }\n    if (searchFields.includes('PIN_NUM')) {\n      where = `PIN_NUM like '%${term}%'`;\n    }\n    if (searchFields.includes('REID')) {\n      where = `REID like '%${term}%'`;\n    }\n  }\n  return where;\n};\n\nexport const searchComplete = (event: __esri.SearchSearchCompleteEvent): Promise<any> => {\n  return new Promise((resolve) => {\n    if (!search.viewModel.selectedSuggestion) {\n      let searchFields: string[] = [];\n      if (search.activeSource) {\n        searchFields = (search.activeSource as LayerSearchSource)?.searchFields;\n      }\n      const term: string = event.searchTerm\n        .toUpperCase()\n        .replace(/'/g, \"''\")\n        .replace(/[\\u2018\\u2019]/g, \"''\");\n      const where = getWildcardSearchWhere(searchFields, term);\n      resolve(wildcardSearch(where, condos));\n    }\n    if (event.numResults) {\n      searchResultSelected(\n        (event.results[0].source as LayerSearchSource).layer as FeatureLayer,\n        event.results[0].source.name,\n        event.results[0].results,\n        event.searchTerm,\n      ).then((result) => {\n        resolve(result);\n      });\n    }\n  });\n};\nexport const checkPin = (searchTerm: string): string => {\n  const matches =\n    searchTerm.length === 19 &&\n    searchTerm[4] === '.' &&\n    [searchTerm[7], searchTerm[10], searchTerm[15]].every((p) => p === ' ');\n  if (matches) {\n    searchTerm = searchTerm.substring(0, 4) + searchTerm.substring(8, 10) + searchTerm.substring(11, 15);\n  }\n  return searchTerm;\n};\nexport const setSearchSources = (\n  addressTable: FeatureLayer,\n  condoTable: FeatureLayer,\n  propertyLayer: FeatureLayer,\n  searchWidget: widgetsSearch,\n): Collection<LayerSearchSource> => {\n  condos = condoTable;\n  addresses = addressTable;\n  properties = propertyLayer;\n  search = searchWidget;\n  return new Collection([\n    getLayerSource(\n      'example: 222 W HARGETT ST',\n      'Site Address',\n      addressTable,\n      ['ADDRESS'],\n      ['ADDRESS'],\n      ['ADDRESS'],\n      true,\n      ['ADDRESS', 'REA_REID', 'OBJECTID'],\n      searchWidget,\n    ),\n    getLayerSource(\n      'example: SMITH, JOHN',\n      'Owner',\n      condoTable,\n      ['OWNER'],\n      ['OWNER'],\n      ['OWNER'],\n      true,\n      ['OWNER', 'OBJECTID'],\n      searchWidget,\n    ),\n    getLayerSource(\n      'PIN',\n      'PIN',\n      condoTable,\n      ['PIN_NUM'],\n      ['PIN_NUM'],\n      ['PIN_NUM'],\n      true,\n      ['PIN_NUM', 'OBJECTID'],\n      searchWidget,\n    ),\n    getLayerSource('REID', 'REID', condoTable, ['REID'], ['REID'], ['REID'], true, ['REID', 'OBJECTID'], searchWidget),\n    getLayerSource(\n      'example: W HARGETT ST',\n      'Street Name',\n      addressTable,\n      ['STREET', 'ADDR_LIST'],\n      ['STREET'],\n      ['STREET'],\n      true,\n      ['STREET', 'REA_REID', 'OBJECTID'],\n      searchWidget,\n    ),\n  ]);\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef, useState } from 'react';\nimport SearchWidget from '@arcgis/core/widgets/Search';\nimport './PropertySearch.scss';\nimport { checkPin, searchComplete, searchCondos, setSearchSources } from './utils/search';\nimport widgetsSearch from '@arcgis/core/widgets/Search';\nexport const PropertySearch = (props: any) => {\n  const searchRef = useRef<HTMLDivElement>(null);\n  const widgetRef = useRef<widgetsSearch>();\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    if (!loaded) {\n      //fix for Safari issue\n      //document.querySelector('calcite-shell-panel[slot=contextual-panel')?.append(searchRef.current as HTMLDivElement);\n      searchRef.current as HTMLDivElement;\n      const search = new SearchWidget({\n        container: searchRef.current as HTMLDivElement,\n        view: props.view,\n        allPlaceholder: 'Address, owner, PIN, or REID',\n        includeDefaultSources: false,\n        popupEnabled: false,\n      });\n      widgetRef.current = search;\n\n      search.sources = setSearchSources(props.addressTable, props.condosTable, props.propertyLayer, search);\n      search.on('search-complete', (event) => {\n        searchComplete(event).then((result: any) => {\n          props.searchComplete(result);\n        });\n      });\n      search.watch('searchTerm', (searchTerm) => {\n        if (searchTerm != checkPin(searchTerm)) {\n          search.searchTerm = checkPin(searchTerm);\n        }\n      });\n      setLoaded(true);\n    }\n  }, [props.view, props.addressTable, props.condosTable, props.propertyLayer, props.searchComplete]); // only after initial render\n  useEffect(() => {\n    if (props.where != 'OBJECTID IS NULL') {\n      searchCondos(props.where, [])\n        .then((result) => {\n          props.searchComplete(result);\n        })\n        .catch((reason: any) => {\n          console.log(reason);\n        });\n    }\n  }, [props.where]);\n  return (\n    <div className=\"flex\">\n      <div ref={searchRef}></div>\n      <calcite-tooltip-manager>\n        <calcite-action\n          id=\"propertyClear\"\n          icon=\"trash\"\n          scale=\"s\"\n          onClick={() => {\n            widgetRef.current?.clear();\n            props.clear();\n          }}\n        ></calcite-action>\n        <calcite-tooltip label=\"Tooltip label\" reference-element=\"propertyClear\" placement=\"bottom\">\n          Clear selected properties\n        </calcite-tooltip>\n      </calcite-tooltip-manager>\n    </div>\n  );\n};\nexport default PropertySearch;\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{clone as r}from\"../core/lang.js\";import{urlToObject as t}from\"../core/urlUtils.js\";function e(r,t){return t?{...t,query:{...r,...t.query}}:{query:r}}function n(e){return\"string\"==typeof e?t(e):r(e)}function o(r,t,e){const n={};for(const i in r){if(\"declaredClass\"===i)continue;const f=r[i];if(null!=f&&\"function\"!=typeof f)if(Array.isArray(f)){n[i]=[];for(let r=0;r<f.length;r++)n[i][r]=o(f[r])}else if(\"object\"==typeof f)if(f.toJSON){const r=f.toJSON(e&&e[i]);n[i]=t?r:JSON.stringify(r)}else n[i]=t?f:JSON.stringify(f);else n[i]=f}return n}export{e as asValidOptions,o as encode,n as parseUrl};\n"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","condos","addresses","search","properties","getLayerSource","placeholder","name","table","outFields","orderByFields","searchFields","startsWith","resultFields","searchWidget","LayerSearchSource","maxSuggestions","getSuggestions","params","layer","whereArray","term","suggestTerm","toUpperCase","replace","forEach","field","push","queryFeatures","returnDistinctValues","returnGeometry","num","activeSource","where","join","results","input","data","first","others","i","length","attributes","indexOf","sort","concat","sortSuggestions","features","map","feature","key","text","getAttribute","sourceIndex","getResults","suggestResult","getProperty","oids","relationship","relationships","find","r","queryRelatedFeatures","relationshipId","objectIds","result","outSpatialReference","wkid","view","goTo","target","searchCondos","reject","geometry","searchResultSelected","source","includes","layerId","searchRelatedCondos","searchComplete","event","viewModel","selectedSuggestion","getWildcardSearchWhere","searchTerm","condoTable","document","querySelector","setAttribute","f","wildcardSearch","numResults","checkPin","every","p","substring","setSearchSources","addressTable","propertyLayer","Collection","PropertySearch","props","searchRef","useRef","widgetRef","loaded","setLoaded","useState","useEffect","current","SearchWidget","container","allPlaceholder","includeDefaultSources","popupEnabled","sources","condosTable","on","watch","catch","reason","console","log","className","ref","icon","scale","onClick","clear","label","placement","t","query","n","o","Array","isArray","toJSON","JSON","stringify"],"sourceRoot":""}