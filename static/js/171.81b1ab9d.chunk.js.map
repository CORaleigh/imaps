{"version":3,"sources":["Components/Shell/utils/shell.ts","Components/Shell/Shell.tsx"],"names":["panelDismissedChange","e","target","parentElement","collapsed","dismissed","actionClicked","action","actions","isTool","innerWidth","forEach","a","isActive","deactivateActions","shellPanel","panel","querySelector","removeAttribute","setAttribute","MapView","lazy","Header","TipManager","Shell","props","tips","setTips","useState","tipsTitle","setTipsTitle","width","setWidth","window","view","setView","viewCreated","setViewCreated","selectedProperties","setSelectedProperties","theme","setTheme","useContext","ThemeContext","setActions","ActionContext","propertiesSelected","properties","active","find","search","title","windowResize","setWidget","container","document","getElementById","hasChildNodes","PropertyPanel","ReactDOM","render","fallback","LocationSearch","Layers","Basemaps","Legend","PropertySelect","geometrySet","g","geometry","Measure","Sketch","Bookmarks","Print","useEffect","querySelectorAll","addEventListener","matchMedia","matches","require","removeEventListener","className","slot","position","width-scale","map","name","text","icon","onClick","dismissible","label","text-enabled","id","hidden","async","length","appearance","scale","calcite-hydrated","showTips","links","zoom","initialized","mapView","geometryChanged","point","closed","tipsDismissed"],"mappings":"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","file":"static/js/171.81b1ab9d.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst panelDismissedChange = (e: Event) => {\n    const shellPanel = (e.target as HTMLElement)?.parentElement;\n    (shellPanel as HTMLCalciteShellPanelElement).collapsed = (e.target as HTMLCalcitePanelElement)?.dismissed;\n};\n\nexport const initialized = (): void => {\n    const panels = document.querySelectorAll('calcite-panel');\n    panels.forEach((panel) => {\n        panel?.addEventListener('calcitePanelDismissedChange', panelDismissedChange);\n    });\n};\n\nexport const deactivate = (): void => {\n    const panels = document.querySelectorAll('calcite-panel');\n    panels.forEach((panel) => {\n        panel?.removeEventListener('calcitePanelDismissedChange', panelDismissedChange);\n    });\n};\nconst deactivateActions = (actions: any[], isTool: boolean): void => {\n    if (innerWidth < 1000) {\n        actions.forEach((a) => {\n            a.isActive = false;\n        });\n    } else {\n        if (isTool) {\n            actions.forEach((a) => {\n                a.isActive = a.isActive && !a.isTool;\n            });\n        } else {\n            actions.forEach((a) => {\n                a.isActive = a.isActive && a.isTool;\n            });\n        }\n    }\n};\nexport const actionClicked = (e: any, action: any, actions: any[]): any[] => {\n    deactivateActions(actions, action.isTool);\n    action.isActive = true;\n    const shellPanel = (e.target as HTMLElement)?.parentElement?.parentElement;\n    const panel = shellPanel?.querySelector('calcite-panel');\n    debugger;\n    if (!action.isActive) {\n        shellPanel?.setAttribute('collapsed', '');\n        panel?.setAttribute('dismissed', '');\n    } else {\n        shellPanel?.removeAttribute('collapsed');\n        panel?.removeAttribute('dismissed');\n    }\n\n    return actions;\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useContext, useEffect, useState, lazy, Suspense } from 'react';\nconst MapView = lazy(() => import('../MapView/MapView'));\nconst Header = lazy(() => import('../Header/Header'));\nconst TipManager = lazy(() => import('../TipManager/TipManager'));\n\n//import { PropertyPanel } from '../PropertyPanel/PropertyPanel';\n\nimport './Shell.scss';\nimport { actionClicked, deactivate, initialized } from './utils/shell';\n\nimport ReactDOM from 'react-dom';\nimport ThemeContext from '../ThemeContext';\nimport { links } from '../../config/config';\nimport ActionContext from '../ActionContext';\n\nexport const Shell = (props: any) => {\n  //const [actions, setActions] = useState(props.actions);\n  const [tips, setTips] = useState<any>([]);\n  const [tipsTitle, setTipsTitle] = useState<string>();\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const [view, setView] = useState<__esri.MapView | null>(null);\n  const [viewCreated, setViewCreated] = useState(false);\n  const [selectedProperties, setSelectedProperties] = useState<__esri.Graphic[]>([]);\n\n  const { theme, setTheme } = useContext(ThemeContext);\n  const { actions, setActions } = useContext(ActionContext);\n  const propertiesSelected = (properties: __esri.Graphic[]) => {\n    setSelectedProperties([...[], ...properties]);\n    const active = actions.find((action) => {\n      return action.isActive;\n    });\n    if (active) {\n      active.isActive = false;\n    }\n    const search = actions.find((action) => {\n      return action.title === 'Property Search';\n    });\n    if (search) {\n      search.isActive = true;\n    }\n    setActions([...[], ...actions]);\n  };\n  const windowResize = () => {\n    setWidth(window.innerWidth);\n  };\n  const setWidget = (action: any) => {\n    if (action) {\n      const container = document.getElementById(action.container);\n      if (!container?.hasChildNodes()) {\n        if (action.title === 'Property Search') {\n          const PropertyPanel = lazy(() => import('../PropertyPanel/PropertyPanel'));\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <PropertyPanel view={view} propertiesSelected={propertiesSelected} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Location Search') {\n          const LocationSearch = lazy(() => import('../LocationSearch/LocationSearch'));\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <LocationSearch view={view} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Layers') {\n          const Layers = lazy(() => import('../Layers/Layers'));\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Layers view={view} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Basemaps') {\n          const Basemaps = lazy(() => import('../Basemaps/Basemaps'));\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Basemaps view={view} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Legend') {\n          const Legend = lazy(() => import('../Legend/Legend'));\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Legend view={view} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Property Select') {\n          const PropertySelect = lazy(() => import('../PropertySelect/PropertySelect'));\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <PropertySelect\n                view={view}\n                geometrySet={(g: any) => {\n                  const container = document.getElementById('propertySearch');\n                  const PropertyPanel = lazy(() => import('../PropertyPanel/PropertyPanel'));\n                  ReactDOM.render(\n                    <Suspense fallback={''}>\n                      <PropertyPanel geometry={g} propertiesSelected={propertiesSelected} />\n                    </Suspense>,\n                    container,\n                  );\n                }}\n              />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Measure') {\n          const Measure = lazy(() => import('../Measure/Measure'));\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Measure view={view} />{' '}\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Sketch') {\n          const Sketch = lazy(() => import('../Sketch/Sketch'));\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Sketch view={view} />{' '}\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Bookmarks') {\n          const Bookmarks = lazy(() => import('../Bookmarks/Bookmarks'));\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Bookmarks view={view} />{' '}\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Print') {\n          const Print = lazy(() => import('../Print/Print'));\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Print view={view} />{' '}\n            </Suspense>,\n            container,\n          );\n        }\n      }\n    }\n  };\n  const tipsDismissed = () => {\n    setTips([]);\n    setTipsTitle('');\n  };\n  const showTips = () => {\n    const action = actions.find((action: any) => {\n      return action.isActive;\n    });\n    return action?.tips?.length ? (\n      <calcite-action\n        text=\"Action\"\n        label=\"Action\"\n        slot=\"header-actions-end\"\n        icon=\"lightbulb\"\n        appearance=\"solid\"\n        scale=\"m\"\n        calcite-hydrated=\"\"\n        onClick={() => {\n          setTips([...tips, ...action.tips]);\n          setTipsTitle(action.title);\n        }}\n      ></calcite-action>\n    ) : (\n      ''\n    );\n  };\n\n  const mapInitialized = async (mapView: __esri.MapView) => {\n    if (!viewCreated) {\n      setView(mapView);\n      setViewCreated(true);\n\n      const container = document.getElementById('propertySearch');\n      if (mapView.map) {\n        const PropertyPanel = lazy(() => import('../PropertyPanel/PropertyPanel'));\n\n        ReactDOM.render(\n          <Suspense fallback={''}>\n            <PropertyPanel view={mapView} propertiesSelected={propertiesSelected} />\n          </Suspense>,\n          container,\n        );\n      }\n    }\n  };\n\n  const geometryChanged = (point: __esri.Point) => {\n    const container = document.getElementById('propertySearch');\n    const PropertyPanel = lazy(() => import('../PropertyPanel/PropertyPanel'));\n\n    ReactDOM.render(\n      <Suspense fallback={''}>\n        <PropertyPanel geometry={point} propertiesSelected={propertiesSelected} />\n      </Suspense>,\n      container,\n    );\n  };\n\n  const updateTheme = () => {\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      setTheme('dark');\n      require(`@arcgis/core/assets/esri/themes/light/main.css`);\n\n      require(`@arcgis/core/assets/esri/themes/dark/main.css`);\n    } else {\n      setTheme('light');\n      require(`@arcgis/core/assets/esri/themes/dark/main.css`);\n\n      require(`@arcgis/core/assets/esri/themes/light/main.css`);\n    }\n    // if (window.matchMedia != undefined) {\n    //     window.matchMedia('(prefers-color-scheme: dark)')?.addEventListener('change', (e) => {\n    //         const newTheme = e.matches ? 'dark' : 'light';\n    //         setTheme(newTheme);\n    //         const styles = document.querySelectorAll('style');\n    //         const styleArray = Array.from(styles);\n    //         styleArray.forEach((style: any) => {\n    //             if (style.innerHTML.includes(`--esri-calcite-theme-name: \"${newTheme}\"`)) {\n    //                 document.head.appendChild(style);\n    //             }\n    //         });\n    //     });\n    // }\n  };\n\n  useEffect(() => {\n    initialized();\n    updateTheme();\n\n    window.addEventListener('resize', windowResize);\n\n    return () => {\n      window.removeEventListener('resize', windowResize);\n      deactivate();\n    };\n  }, [props.actions]);\n  return (\n    <div>\n      <calcite-shell theme={theme} className=\"shell\">\n        {width >= 1000 ? (\n          <calcite-shell-panel slot=\"primary-panel\" position=\"start\" width-scale=\"l\" collapsed>\n            <calcite-action-bar slot=\"action-bar\">\n              {actions.map((action: any) => {\n                if (action.isTool) {\n                  return (\n                    <calcite-action\n                      key={action.icon}\n                      name={action.container}\n                      text={action.title}\n                      icon={action.icon}\n                      onClick={(e: any) => {\n                        setActions([...actionClicked(e, action, props.actions)]);\n                        setWidget(action);\n                      }}\n                      active={action.isActive === true ? '' : null}\n                    ></calcite-action>\n                  );\n                }\n              })}\n            </calcite-action-bar>\n            <calcite-panel dismissible dismissed>\n              <div slot=\"header-content\">\n                {\n                  actions.find((action: any) => {\n                    return action.isActive && action.isTool;\n                  })?.title\n                }\n              </div>\n              <div slot=\"header-trailing-content\">\n                <calcite-action\n                  label=\"Performs another custom action\"\n                  text=\"Perform Another Action!\"\n                  text-enabled\n                  icon=\"blog\"\n                ></calcite-action>\n              </div>\n              {actions.map((action: any) => {\n                if (action.isTool) {\n                  return <div id={action.container} key={action.container} hidden={!action.isActive}></div>;\n                }\n              })}\n            </calcite-panel>\n          </calcite-shell-panel>\n        ) : (\n          ''\n        )}\n\n        <calcite-shell-panel slot=\"contextual-panel\" position=\"end\" width-scale=\"l\">\n          <calcite-action-bar slot=\"action-bar\">\n            {actions.map((action: any) => {\n              if (!action.isTool || width < 1000) {\n                return (\n                  <calcite-action\n                    key={action.icon}\n                    text={action.title}\n                    name={action.container}\n                    icon={action.icon}\n                    onClick={async (e: any) => {\n                      setActions([...actionClicked(e, action, props.actions)]);\n                      setWidget(action);\n                    }}\n                    active={action.isActive === true ? '' : null}\n                  ></calcite-action>\n                );\n              }\n            })}\n          </calcite-action-bar>\n          <calcite-panel dismissible>\n            <div slot=\"header-content\">\n              {\n                actions.find((action: any) => {\n                  return action.isActive;\n                })?.title\n              }\n            </div>\n            {showTips()}\n\n            {actions.map((action: any) => {\n              if (!action.isTool || width < 1000) {\n                return <div id={action.container} key={action.container} hidden={!action.isActive}></div>;\n              }\n            })}\n          </calcite-panel>\n        </calcite-shell-panel>\n\n        <div slot=\"shell-header\">\n          <Suspense fallback={''}>\n            <Header links={links} />\n          </Suspense>\n        </div>\n        <Suspense fallback={''}>\n          <MapView\n            id=\"95092428774c4b1fb6a3b6f5fed9fbc4\"\n            zoom=\"10\"\n            initialized={mapInitialized}\n            geometryChanged={geometryChanged}\n            selectedProperties={selectedProperties}\n          />\n        </Suspense>\n      </calcite-shell>\n      <Suspense fallback={''}>\n        <TipManager tips={tips} title={tipsTitle} closed tipsDismissed={tipsDismissed} />\n      </Suspense>\n    </div>\n  );\n};\nexport default Shell;\n"],"sourceRoot":""}