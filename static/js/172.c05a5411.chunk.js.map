{"version":3,"sources":["Components/Layers/utils/layers.ts","Components/Layers/Layers.tsx","../node_modules/@stencil/core/internal/client lazy /^/.//.*/.entry/.js.*$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["layerListItemCreated","event","item","layer","type","undefined","slider","document","createElement","setAttribute","Math","round","opacity","toString","id","addEventListener","parseInt","target","getAttribute","passive","panel","content","open","visible","watch","parent","addPropertyLabelToggles","propertyLabelExpressions","expression","title","actionsSections","length","console","log","toggles","Collection","addMany","map","ActionToggle","active","push","actionsOpen","setTimeout","textContent","actions","querySelector","parentElement","prepend","filterLayers","value","layerList","operationalItems","forEach","layers","toLowerCase","includes","listMode","sublayer","uid","removeAttribute","Layers","props","ref","useRef","input","list","useEffect","LayerList","container","current","view","listItemCreatedFunction","visibleElements","statusIndicators","on","labelsVisible","selectedTitles","getItemAt","filter","section","expressions","join","labelingInfo","symbol","color","haloColor","haloSize","font","family","style","weight","labelExpressionInfo","maxScale","minScale","togglePropertyLabels","removeEventListener","destroy","className","clearable","placeholder","scale","icon","onClick","resetLayers","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"static/js/172.c05a5411.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Collection from '@arcgis/core/core/Collection';\nimport ActionToggle from '@arcgis/core/support/actions/ActionToggle';\nexport const layerListItemCreated = (event: any): void => {\n  const item = event.item;\n  if (item.layer.type != 'group' && item.layer.type != undefined) {\n    const slider = document.createElement('calcite-slider');\n    slider.setAttribute('min', '0');\n    slider.setAttribute('max', '100');\n    slider.setAttribute('step', '1');\n    slider.setAttribute('snap', '');\n    slider.setAttribute('min-label', '0%');\n    slider.setAttribute('max-label', '100%');\n    slider.setAttribute('label-handles', '');\n    slider.setAttribute('value', Math.round(item?.layer.opacity * 100).toString());\n    slider.setAttribute('data', item.layer.id);\n    slider.addEventListener(\n      'calciteSliderUpdate',\n      (event) => {\n        item.layer.opacity = Math.round(parseInt((event?.target as any)?.getAttribute('value'))) / 100;\n      },\n      { passive: true },\n    );\n    item.panel = {\n      content: [slider, 'legend'],\n      open: item.layer.visible,\n    };\n    item.layer.watch('visible', (visible: boolean) => {\n      item.panel.open = visible;\n      if (visible) {\n        if (item.layer.parent) {\n          if (item.layer.parent.type === 'group') {\n            item.layer.parent.visible = true;\n          }\n        }\n        if (item.layer.parent.parent) {\n          if (item.layer.parent.parent.type === 'group') {\n            item.layer.parent.parent.visible = true;\n          }\n        }\n      }\n    });\n  }\n  addPropertyLabelToggles(item);\n};\nexport const togglePropertyLabels = (event: __esri.LayerListTriggerActionEvent) => {\n  if (event.item.layer.title === 'Property') {\n    if (!(event.item.layer as __esri.FeatureLayer).labelsVisible) {\n      (event.item.layer as __esri.FeatureLayer).labelsVisible = true;\n    }\n    const selected = event.item.actionsSections.getItemAt(0).filter((section) => {\n      return (section as ActionToggle).value;\n    });\n\n    const selectedTitles = selected.map((section) => {\n      return (section as ActionToggle).title;\n    });\n\n    const selectedExpressions = propertyLabelExpressions.filter((expression) => {\n      return selectedTitles.includes(expression.title);\n    });\n    const expressions = selectedExpressions.map((expression) => {\n      return expression.expression;\n    });\n    console.log(expressions);\n    const expression = expressions.join('+ TextFormatting.NewLine+');\n    (event.item.layer as __esri.FeatureLayer).labelingInfo = [];\n\n    //if ((event.action as ActionToggle).value) {\n    (event.item.layer as __esri.FeatureLayer).labelingInfo = [\n      {\n        // autocasts as new LabelClass()\n        symbol: {\n          type: 'text', // autocasts as new TextSymbol()\n          color: 'black',\n          haloColor: 'white',\n          haloSize: 1,\n          font: {\n            family: 'AvenirNext LT Pro Regular',\n            style: 'normal',\n            weight: 'bold',\n          },\n        },\n        labelExpressionInfo: {\n          expression: expression,\n        },\n        maxScale: 0,\n        minScale: 5000,\n      } as any,\n    ];\n    // }\n    // } else {\n    //   (event.item.layer as __esri.FeatureLayer).labelingInfo = (\n    //     event.item.layer as __esri.FeatureLayer\n    //   ).labelingInfo.filter((info) => {\n    //     return info.labelExpressionInfo.expression != expression.expression;\n    //   });\n    // }\n  }\n};\nconst propertyLabelExpressions: any[] = [\n  {\n    expression: `First(Split($feature['SITE_ADDRESS'], ' '))`,\n    title: 'Address',\n  },\n  {\n    expression: `$feature['PIN_NUM']`,\n    title: 'PIN',\n  },\n  {\n    expression: `$feature['REID']`,\n    title: 'REID',\n  },\n  {\n    expression: `When(IsEmpty($feature[\"SALE_DATE\"]),null, Concatenate(Month($feature[\"SALE_DATE\"])+1, '/',Day($feature[\"SALE_DATE\"]), '/',Year($feature[\"SALE_DATE\"])))`,\n    title: 'Sale Date',\n  },\n  {\n    expression: `Text($feature.TOTSALPRICE,'$#,###')`,\n    title: 'Sale Price',\n  },\n];\n\nconst addPropertyLabelToggles = (item: any) => {\n  if (item.layer.title === 'Property' && item.layer.type != 'group' && item.actionsSections.length === 0) {\n    console.log(item.layer.title);\n    const toggles: Collection = new Collection();\n    toggles.addMany(\n      propertyLabelExpressions.map((expression) => {\n        return new ActionToggle({\n          active: false,\n          title: expression.title,\n          visible: true,\n        });\n      }),\n    );\n    (item as __esri.ListItem).actionsSections.push(toggles);\n    (item as __esri.ListItem).actionsOpen = true;\n    setTimeout(() => {\n      const title = document.createElement('h4');\n      title.textContent = 'Labels';\n      title.setAttribute('style', 'padding: 0.5em;margin: 0;');\n      const actions = document.querySelector('.esri-layer-list__item-actions');\n      if (actions?.parentElement) {\n        actions.prepend(title);\n      }\n    }, 500);\n  }\n};\nexport const filterLayers = (value: string, layerList: __esri.LayerList): void => {\n  if (!value) {\n    value = '';\n  }\n  layerList.operationalItems.forEach((item: __esri.ListItem) => {\n    if (item.layer.type === 'group') {\n      let open = false;\n      (item.layer as __esri.GroupLayer).layers.forEach((layer) => {\n        if (layer.title.toLowerCase().includes(value.toLowerCase())) {\n          layer.listMode = 'show';\n          open = true;\n        } else {\n          layer.listMode = 'hide';\n        }\n        //handle second level group layers\n        if (layer.type === 'group') {\n          (layer as __esri.GroupLayer).layers.forEach((sublayer) => {\n            if (sublayer.title.toLowerCase().includes(value.toLowerCase())) {\n              layer.listMode = 'show';\n              sublayer.listMode = 'show';\n              open = true;\n            } else {\n              sublayer.listMode = 'hide';\n            }\n          });\n        }\n      });\n      if (!value.length) {\n        item.open = false;\n        document\n          .querySelector(`#layerListDiv_${(item as any).uid}__title`)\n          ?.parentElement?.parentElement?.parentElement?.removeAttribute('hidden');\n      } else if (!open) {\n        item.open = false;\n        document\n          .querySelector(`#layerListDiv_${(item as any).uid}__title`)\n          ?.parentElement?.parentElement?.parentElement?.setAttribute('hidden', '');\n      } else {\n        item.open = true;\n        document\n          .querySelector(`#layerListDiv_${(item as any).uid}__title`)\n          ?.parentElement?.parentElement?.parentElement?.removeAttribute('hidden');\n      }\n    }\n  });\n};\n\nexport const resetLayers = (list: __esri.LayerList) => {\n  list?.operationalItems.forEach((item) => {\n    item.visible = item.title === 'Property';\n  });\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef } from 'react';\nimport LayerList from '@arcgis/core/widgets/LayerList';\nimport { filterLayers, layerListItemCreated, resetLayers, togglePropertyLabels } from './utils/layers';\nimport './Layers.scss';\nexport const Layers = (props: any) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const input = useRef<HTMLCalciteInputElement>(null);\n  const list = useRef<__esri.LayerList>();\n  useEffect(() => {\n    console.log(props.active);\n  }, [props.active]);\n  useEffect(() => {\n    console.log('test');\n    const layerList = new LayerList({\n      container: ref.current as HTMLDivElement,\n      view: props.view,\n      listItemCreatedFunction: layerListItemCreated,\n      visibleElements: {\n        statusIndicators: true,\n      },\n    });\n    list.current = layerList;\n    layerList.on('trigger-action', (event: __esri.LayerListTriggerActionEvent) => {\n      if (event.item.layer.title === 'Property') {\n        togglePropertyLabels(event);\n      }\n    });\n    input.current?.addEventListener('calciteInputInput', (event: any) => {\n      filterLayers(event.target.value, layerList as LayerList);\n    });\n    input.current?.addEventListener('focusout', (event: any) => {\n      filterLayers(event.target.value, layerList as LayerList);\n    });\n    return () => {\n      input.current?.removeEventListener('calciteInputInput', (event: any) => {\n        filterLayers(event.target.value, layerList as LayerList);\n      });\n      layerList && layerList.destroy();\n    };\n  }, [props.view]); // only after initial render\n  return (\n    <div className=\"panel\">\n      <div className=\"row sticky\">\n        <calcite-input\n          ref={input}\n          clearable\n          placeholder=\"Filter by layer name\"\n          scale=\"m\"\n          id=\"layerSearch\"\n        ></calcite-input>\n        <calcite-action\n          icon=\"viewHide\"\n          scale=\"m\"\n          onClick={() => {\n            resetLayers(list.current as __esri.LayerList);\n          }}\n        ></calcite-action>\n      </div>\n      <div ref={ref}></div>\n    </div>\n  );\n};\n\nexport default Layers;\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 527;"],"sourceRoot":""}