{"version":3,"file":"static/js/8534.011ac5da.chunk.js","mappings":"+KAIA,MAAMA,EAAwBC,IAAc,IAAD,KACzB,UAAIA,EAAEC,cAAN,aAAG,EAA2BC,eACDC,UAA7C,UAA0DH,EAAEC,cAA5D,aAAyD,EAAuCG,WAiCrFC,EAAgB,CAACL,EAAQM,EAAaC,KAC7CD,EAAOE,SACTF,EAAOE,UAAW,GAnBI,EAACD,EAAgBE,KACrCC,WAAa,IACfH,EAAQI,SAASC,IACfA,EAAEJ,UAAW,KAGXC,EACFF,EAAQI,SAASC,IACfA,EAAEJ,SAAWI,EAAEJ,WAAaI,EAAEH,UAGhCF,EAAQI,SAASC,IACfA,EAAEJ,SAAWI,EAAEJ,UAAYI,EAAEH,WASjCI,CAAkBN,EAASD,EAAOG,QAClCH,EAAOE,UAAW,GAEpB,MAAMM,EAAad,EAAEC,OAAOc,QAAQ,uBAOpC,OALKT,EAAOE,SAGA,OAAVM,QAAU,IAAVA,GAAAA,EAAYE,gBAAgB,aAFlB,OAAVF,QAAU,IAAVA,GAAAA,EAAYG,aAAa,YAAa,IAIjCV,GAgDIW,EAAe,CAC1BX,EACAY,EACAC,EACAC,KAEsBC,SAASC,iBAAiB,0BAClCZ,SAASa,IACrB,MAAMlB,EAASC,EAAQkB,MAAMnB,GACpBA,EAAOoB,QAAUF,EAAOG,aAAa,UAGxB,IAAD,EASA,EAKZ,EAfLC,OAAOlB,YAAc,KAArB,OAA6BJ,QAA7B,IAA6BA,GAAAA,EAAQE,UAAYW,EAAQ,MACvDb,EAAOG,SACT,QAAC,EAAAa,SAASO,cAAc,qDAAxB,SAAuFZ,aACrF,YACA,IAEFX,EAAOE,UAAW,IAGlBoB,OAAOlB,WAAa,KAApB,OAA4BJ,QAA5B,IAA4BA,GAAAA,EAAQE,UAAYW,GAAS,MACvDb,EAAOG,QACT,QAAC,EAAAa,SAASO,cAAc,kDAAxB,SAAoFb,gBAClF,aAEFV,EAAOE,UAAW,GAElB,QAAC,EAAAc,SAASO,cAAc,qDAAxB,SAAuFb,gBACrF,cAKNM,SAASC,iBAAiB,sBAAsBZ,SAASmB,IACnDA,IACFA,EAAIC,eAAiBH,OAAOlB,YAAc,WAIhDU,EAASQ,OAAOlB,YAChBW,EAAW,IAAId,KA2EJyB,EAA0BzB,IACrC,MAAM0B,EAAS1B,EAAQkB,MAAMnB,GACpBA,EAAOE,WAEZyB,IACEL,OAAOlB,WAAa,MAASuB,EAAOxB,UACtCwB,EAAOzB,UAAW,GAGtB,MAAM0B,EAAS3B,EAAQkB,MAAMnB,GACH,oBAAjBA,EAAOoB,QAGZQ,IACFA,EAAO1B,UAAW,GAEpB,MAAM2B,EAAYb,SAASc,eAAT,OAAwBF,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAQC,WAClD,GAAIA,EAAW,EACc,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAWpB,QAAQ,kBAC3CsB,QAAS,EACf,MAAMC,EAAK,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAWpB,QAAQ,uBAC5B,OAALuB,QAAK,IAALA,GAAAA,EAAOtB,gBAAgB,aAEzB,OAAOmB,GA+BII,EAAiBC,IAKvB,IAAD,EAJAA,IAE4C,cAA5CA,EAAQC,UAAUC,gBAAgBC,OACU,UAA5CH,EAAQC,UAAUC,gBAAgBC,OAElC,UAAAH,EAAQC,UAAUC,uBAAlB,SAAmCE,U,2DC9QzC,MAAMC,GAAUC,EAAAA,EAAAA,OAAK,IACZ,0XAEHC,GAASD,EAAAA,EAAAA,OAAK,IACX,kCAEHE,GAAaF,EAAAA,EAAAA,OAAK,IACf,kCAEHG,GAAgBH,EAAAA,EAAAA,OAAK,IAAM,iCAC3BI,GAAiBJ,EAAAA,EAAAA,OAAK,IAAM,8TAC5BK,GAASL,EAAAA,EAAAA,OAAK,IAAM,yFACpBM,GAAWN,EAAAA,EAAAA,OAAK,IAAM,qJACtBO,GAASP,EAAAA,EAAAA,OAAK,IAAM,6LACpBQ,GAAiBR,EAAAA,EAAAA,OAAK,IAAM,gXAC5BS,GAAUT,EAAAA,EAAAA,OAAK,IAAM,2IACrBU,GAASV,EAAAA,EAAAA,OAAK,IAAM,8WACpBW,GAAYX,EAAAA,EAAAA,OAAK,IAAM,4TACvBY,GAAQZ,EAAAA,EAAAA,OAAK,IAAM,0IAmBZa,EAAQ,KACnB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,aACnBC,EAAMC,IAAWF,EAAAA,EAAAA,UAAc,KAC/BG,EAAWC,IAAgBJ,EAAAA,EAAAA,aAE3B3C,EAAOC,IAAY0C,EAAAA,EAAAA,UAASlC,OAAOlB,YACpCyD,GAAOC,EAAAA,EAAAA,WACNC,EAAaC,IAAkBR,EAAAA,EAAAA,WAAS,IACxCS,EAAYC,IAAiBV,EAAAA,EAAAA,WAAS,IAEtCW,EAAoBC,IAAyBZ,EAAAA,EAAAA,UAA2B,KACxEa,EAAiBC,IAAsBd,EAAAA,EAAAA,aACxC,MAAEe,EAAF,SAASC,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,IAChCC,EAAUC,IAAepB,EAAAA,EAAAA,WAAS,GAEnCqB,GAAWf,EAAAA,EAAAA,UACXgB,GAAWhB,EAAAA,EAAAA,UACXiB,GAAcjB,EAAAA,EAAAA,UACdkB,GAAclB,EAAAA,EAAAA,UACdmB,GAAWnB,EAAAA,EAAAA,UACXoB,GAAkBpB,EAAAA,EAAAA,WAEjBqB,EAAYC,IAAiB5B,EAAAA,EAAAA,aAC9B,QAAEvD,GAAF,WAAWc,KAAe0D,EAAAA,EAAAA,YAAWY,EAAAA,GACrCC,IAAQxB,EAAAA,EAAAA,UAIRyB,GAAmBC,IACvBlB,EAAmB,IAAKD,EAAsBoB,WAAU,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAASC,WAAYC,SAAQ,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAASE,WAElG,MAAM1F,EAASC,GAAQkB,MAAMnB,GACH,oBAAjBA,EAAOoB,QAEhB,GAAIpB,GAAU6D,EAAK8B,QAAS,CAC1B,MAAM9D,EAAYb,SAASc,eAAT,OAAwB9B,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAQ6B,WAC9CA,GACF+D,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAAC9C,EAAD,CACEa,KAAMA,EAAK8B,QACXtB,gBAAiBmB,EACjBO,YAAaC,GACbC,cAAeC,GACf5D,MAAO6D,OAGXtE,GAKN,MAAMuE,EAAcnG,GAAQkB,MAAMnB,GACR,UAAjBA,EAAOoB,QAEhB,GAAIgF,EAAa,CACf,MAAMvE,EAAYb,SAASc,eAAT,OAAwBsE,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAavE,WACvD+D,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAAC1C,EAAD,CACES,KAAMA,EAAK8B,QACXU,UAAU,8FACVC,YAAY,mHACZjC,gBAAiBmB,MAGrB3D,KAKA0E,GAAsBC,IAC1BpC,EAAsB,IAAID,KAAuBqC,IAC7CA,EAAWC,OAAS,GACtBnC,EAAmB,IAAKD,EAAsBoB,WAAY,OAE5D,MAAM5D,EAAYH,EAAuBzB,IACzC2F,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAACnD,EAAD,CACE4D,mBAAoBA,GACpBhB,gBAAiBA,GACjBpB,mBAAoBqC,MAGxB3E,GAEFd,GAAW,IAAWd,MAElByG,GAAmB,KAAO,IAAD,IAC7B,UAAA5B,EAASa,eAAT,SAAkBgB,SAClB1E,EAAc8C,EAAYY,SACtBX,EAAYW,UACdX,EAAYW,QAAQxD,UAAUyE,KAAO,QAEvC,UAAA/B,EAASc,eAAT,SAAkBgB,SAElBvB,EAAc,WAEVyB,GAAmB,KAAO,IAAD,MAC7B,UAAA7F,SAASO,cAAc,2BAAvB,SAA4CuF,UAAUC,OAAO,UAC7D,UAAIlD,EAAK8B,eAAT,OAAI,EAAcqB,QAChBnD,EAAK8B,QAAQqB,MAAMC,iBAAkB,GAEvC,UAAA/B,EAAgBS,eAAhB,SAAyBoB,UAGrBG,GAAuBC,IAA6C,IAAD,EACvEtC,EAASc,QAAUwB,EACnB,UAAArC,EAASa,eAAT,SAAkBgB,SAClB1E,EAAc8C,EAAYY,SACtBX,EAAYW,UACdX,EAAYW,QAAQxD,UAAUyE,KAAO,QAEvCxB,EAAc,UACdyB,MAEIO,GAAuB,CAACC,EAAqCC,KAAkD,IAAD,IAClHvC,EAAYY,QAAU0B,EACtBrC,EAAYW,QAAU2B,EACtB,UAAAzC,EAASc,eAAT,SAAkBgB,SAClB,UAAA7B,EAASa,eAAT,SAAkBgB,SAClBvB,EAAc,WACdyB,MAEIX,GAAmBiB,IAA6C,IAAD,EACnErC,EAASa,QAAUwB,EACnB,UAAAtC,EAASc,eAAT,SAAkBgB,SAClB1E,EAAc8C,EAAYY,SACtBX,EAAYW,UACdX,EAAYW,QAAQxD,UAAUyE,KAAO,QAEvCxB,EAAc,UACdyB,MASIU,GAAYpH,IAAqB,IAAD,IACpC,IAAIH,EAUJ,OAREA,EADEG,EACOF,GAAQkB,MAAMnB,GACdA,EAAOE,UAAYF,EAAOG,SAG1BF,GAAQkB,MAAMnB,GACdA,EAAOE,YAGL,QAAN,EAAAF,SAAA,mBAAQyD,YAAR,eAAcgD,QAAS,GAC5B,2BACEe,GAAK,aAAWrH,EAAS,QAAU,IACnCsH,KAAK,SACLC,MAAM,SACNC,KAAK,qBACLC,KAAK,YACLC,WAAW,QACXC,MAAM,IACN,mBAAiB,GACjBC,QAAS,KACPrE,EAAQ,IAAW1D,EAAOyD,OAC1BG,EAAa5D,EAAOoB,UAIxB,IAyFE4E,GAAmBN,IACvB,MAAM7D,EAAYH,EAAuBzB,IACzC2F,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAACnD,EAAD,CACE+C,SAAUA,EACVa,mBAAoBA,GACpBpC,mBAAoBA,EACpBoB,gBAAiBA,GACjBlB,gBAAiBA,MAGrBxC,IAIEsE,GAAiB,KACrB,MAAMtE,EAAYH,EAAuBzB,IACzC2F,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAACnD,EAAD,CACE+C,cAAUsC,EACVzB,mBAAoBA,GACpBpC,mBAAoBA,EACpBoB,gBAAiBA,GACjBlB,gBAAiBA,MAGrBxC,IASEoG,GAAgBjI,IACpB,GAAIA,EAAQ,CAAC,IAAD,MACV,MAAM6B,EAAYb,SAASc,eAAe9B,EAAO6B,WAEjD,UAAAb,SACGO,cAAc,qDADjB,mBAEI2G,kBAFJ,mBAEgB3G,cAAc,mBAF9B,SAGIZ,aACA,QACC,4FAEDsE,EAASU,UACXV,EAASU,QAAQiC,KAAO,aAEtB,OAAC/F,QAAD,IAACA,GAAAA,EAAWsG,kBACO,oBAAjBnI,EAAOoB,OACTwE,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAACnD,EAAD,CACEkB,KAAMA,EAAK8B,QACXY,mBAAoBA,GACpBhB,gBAAiBA,GACjBpB,mBAAoBA,MAGxBtC,GAGiB,oBAAjB7B,EAAOoB,OACTwE,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAAClD,EAAD,CAAgBiB,KAAMA,EAAK8B,YAE7B9D,GAGiB,WAAjB7B,EAAOoB,OACTwE,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAACjD,EAAD,CAAQgB,KAAMA,EAAK8B,YAErB9D,GAGiB,aAAjB7B,EAAOoB,OACTwE,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAAChD,EAAD,CAAUe,KAAMA,EAAK8B,QAASyC,QAASC,EAAAA,GAAAA,QAAAA,GAAqBC,QAASD,EAAAA,GAAAA,QAAAA,OAEvExG,GAGiB,WAAjB7B,EAAOoB,OACTwE,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAAC/C,EAAD,CAAQc,KAAMA,EAAK8B,YAErB9D,GAGiB,oBAAjB7B,EAAOoB,OACTwE,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAAC9C,EAAD,CACEa,KAAMA,EAAK8B,QACXI,YAAaC,GACb3B,gBAAiBA,EACjB4B,cAAeC,GACff,WAAYA,EACZ7C,MAAO6D,OAGXtE,GAGiB,YAAjB7B,EAAOoB,OACTwE,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAAC7C,EAAD,CAASY,KAAMA,EAAK8B,QAASyB,qBAAsBA,GAAsBjC,WAAYA,MAEvFtD,GAGiB,WAAjB7B,EAAOoB,OACTwE,EAAAA,QACE,UAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,WACE,SAAC5C,EAAD,CAAQW,KAAMA,EAAK8B,QAASM,cAAeiB,GAAqB/B,WAAYA,IAAe,OAE7FtD,GAGiB,cAAjB7B,EAAOoB,OACTwE,EAAAA,QACE,UAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,WACE,SAAC3C,EAAD,CAAWU,KAAMA,EAAK8B,UAAY,OAEpC9D,GAGiB,UAAjB7B,EAAOoB,OACTwE,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAAC1C,EAAD,CACES,KAAMA,EAAK8B,QACXU,UAAU,8FACVC,YAAY,uHAGhBzE,MAmEV,OA7DA0G,EAAAA,EAAAA,YAAU,KACRjD,GAAMK,QAAU,IAAI6C,KAWpB,MAAMjE,EAAQjD,OAAOmH,aAAaC,QAAQ,eAEpClB,EADM,IAAImB,IAAI3H,SAAS2H,KACdC,aAAaC,IAAI,MAE9BtF,EADEiE,GAGOsB,EAAAA,ID9ZY,EAACvE,EAAeC,KACrCD,GACY,SAAVA,GACFC,EAAS,QAEG,UAAVD,GACFC,EAAS,UAGPlD,OAAOyH,YAAczH,OAAOyH,WAAW,gCAAgCC,SACzEzE,EAAQ,OACRC,EAAS,UAETD,EAAQ,QACRC,EAAS,UAGbxD,SAASiI,KAAKnC,UAAUC,OAAiB,UAAVxC,EAAoB,OAAS,SAC5DvD,SAASiI,KAAKnC,UAAUoC,IAAc,UAAV3E,EAAoB,QAAU,QAC1D,MAAM4E,EAAOC,MAAMC,KAAKrI,SAASsI,KAAKrI,iBAAiB,SAASE,MAAMgI,GAC7DA,EAAKI,KAAKC,SAAU,GAAEjF,gBAOa,IAAD,EALvC4E,GACFnI,SAASsI,KAAKG,YAAYN,QAEHnB,GAArB1G,OAAOyH,iBAEqBf,GADhB1G,OAAOyH,WAAW,gCACtBW,mBACR,UAAApI,OAAOyH,WAAW,uCAAlB,SAAmDW,iBAAiB,UAAWhK,IAC7E,MAAMiK,EAAWjK,EAAEsJ,QAAU,OAAS,QACtCxE,EAASmF,GACTrI,OAAOmH,aAAamB,QAAQ,cAAeD,GAC3C3I,SAASiI,KAAKnC,UAAUC,OAAoB,UAAb4C,EAAuB,OAAS,SAC/D3I,SAASiI,KAAKnC,UAAUoC,IAAiB,UAAbS,EAAuB,QAAU,QAC7D,MAAMR,EAAOC,MAAMC,KAAKrI,SAASsI,KAAKrI,iBAAiB,SAASE,MAAMgI,GAC7DA,EAAKI,KAAKC,SAAU,GAAEG,gBAE3BR,GACFnI,SAASsI,KAAKG,YAAYN,QC2XhCU,CAAYtF,EAAOC,KAClB,KACH+D,EAAAA,EAAAA,YAAU,KAIR,IAAIuB,EA2BJ,ODhfa9I,SAASC,iBAAiB,iBAClCZ,SAAS0J,IACT,OAALA,QAAK,IAALA,GAAAA,EAAOL,iBAAiB,8BAA+BjK,MCodvD6B,OAAOoI,iBAAiB,UAAU,KAChCM,aAAaF,GACbA,EAAcG,YAAW,MAClB3I,OAAOlB,WAAa,KAAQS,GAAS,KAAUS,OAAOlB,YAAc,KAAQS,EAAQ,MACvFD,EAAaX,GAASY,EAAOC,EAAUC,MAExC,KACHC,SAASC,iBAAiB,uBAAuBZ,SAAS0J,IAAW,IAAD,IAClE,IAAIlJ,EAAQ,QACRoE,EAASU,UACXV,EAASU,QAAQiC,KAAO,aAE1B,MAAMpG,EAAMuI,EAAMxI,cAAc,sBAC5BD,OAAOlB,YAAc,MACvBS,EAAS,eAAD,OAAeW,QAAf,IAAeA,OAAf,EAAeA,EAAK0I,kBAEzB,OAALH,QAAK,IAALA,GAAA,UAAAA,EAAO7B,kBAAP,mBACI3G,cAAc,mBADlB,SAEIZ,aACA,QACC,cAAaE,mFDjQxBG,SAASC,iBAAiB,uBAAuBZ,SAAS0J,IACxD,MAAMI,EAA6B,IAAIC,kBAAkBC,IACvD,GAAIA,EAAU5D,OAAQ,CAAC,IAAD,IACpB,IAAI5F,EAAQ,QACRS,OAAOlB,YAAc,MACvBS,EAAQ,qBAEL,OAALkJ,QAAK,IAALA,GAAA,UAAAA,EAAO7B,kBAAP,mBACI3G,cAAc,mBADlB,SAEIZ,aACA,QACC,cAAaE,6EAElBG,SAASC,iBAAiB,sBAAsBZ,SAASmB,IACnDA,IACFA,EAAIC,eAAiBH,OAAOlB,YAAc,QAG9C+J,EAASG,kBAETH,EAASG,gBAGbH,EAASI,QAAT,OAAiBR,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAO7B,WAAoB,CAAEsC,WAAW,OCgPlD,KACLlJ,OAAOmJ,oBAAoB,UAAU,KACnC7J,EAAaX,GAASY,EAAOC,EAAUC,OD3e9BC,SAASC,iBAAiB,iBAClCZ,SAAS0J,IACT,OAALA,QAAK,IAALA,GAAAA,EAAOU,oBAAoB,8BAA+BhL,SC6ezD,CAACQ,MAEF,2BACG0E,IACC,6BAAkB+F,MAAQ,uBAAsBnG,IAASoG,KAAK,gBAAgBC,MAAM,SAGtF,2BAAeF,MAAQ,uBAAsBnG,IAA7C,UACG1D,GAAS,KACR,iCAAqB8G,KAAK,gBAAgBkD,SAAS,QAAQ,cAAY,IAAIhL,WAAS,EAApF,WACE,+BAAoB8H,KAAK,aAAamD,UAAW7G,GAAc3C,OAAOlB,WAAa,IAAM,GAAK,KAA9F,SACGH,GAAQ8K,KAAK/K,IACZ,GAAIA,EAAOG,OACT,OACE,4BACE,4BACE6K,UAAU,WACVtD,MAAO1H,EAAOoB,MACd,oBAAoB,GAAEpB,EAAO6B,mBAH/B,SAKG7B,EAAOoB,SAEV,8CACE,2BACEqG,KAAMzH,EAAOoB,MACb6J,KAAMjL,EAAO6B,UACb+F,KAAM5H,EAAO4H,KACbJ,GAAK,GAAExH,EAAO6B,mBACdqJ,SAAWjH,EAAkB,KAAL,GACxB8D,QAASoD,MAAAA,IACPpK,GAAW,IAAIhB,EAAcL,EAAGM,EAAQC,MACxCmL,uBAAsB,KACpBnD,GAAajI,OAGjB2B,QAA4B,IAApB3B,EAAOE,SAAoB,GAAK,WArBnC,GAAEF,EAAO6B,iCA6B3B5B,GAAQ8K,KAAK/K,IACZ,GAAIA,EAAOG,QAAUH,EAAOE,SAC1B,OACE,iBAAKmL,UAAU,eAAf,WACE,gBAAKA,UAAU,cAAf,SAA8BrL,EAAOoB,SACrC,iBAAKiK,UAAU,iBAAf,UACG9D,IAAS,IACV,gDACE,4BAAiBG,MAAM,gBAAgB,oBAAkB,cAAcsD,UAAU,aAAjF,0BAGA,2BACExD,GAAG,cACH,aAAW,QACXK,WAAW,QACXC,MAAM,IACN,mBAAiB,GACjBF,KAAK,IACLG,QAAS,KAAO,IAAD,IACL,QAAR,EAAA/G,gBAAA,mBACIO,cAAc,kDADlB,SAEIZ,aAAa,YAAa,IAC9BX,EAAOE,UAAW,EAClBa,GAAW,IAAId,gBApBW,GAAED,EAAO4H,0BA6BlD3H,GAAQ8K,KAAK/K,IACZ,GAAIA,EAAOG,OACT,OACE,gBACEqH,GAAIxH,EAAO6B,UACXwJ,UAAU,eAEVtJ,QAAS/B,EAAOE,UADV,GAAEF,EAAO6B,2BAQzB,IAEF,SAAC,EAAAgE,SAAD,CAAUC,SAAU,GAApB,UACE,SAACvD,EAAD,CACEiF,GAAIlE,EACJgI,YAvWaH,MAAAA,IAWrB,GATAI,EAAQC,MAAM,YAAa7G,IACY,YAAhCd,EAAK8B,QAAgB8F,OACxB7G,EAAYD,GAEZC,GAAY,OAKXb,EAAa,CAChBF,EAAK8B,QAAU4F,EAEfG,EAAAA,IACY,KAAOH,EAAQ5G,WACxBgH,MAAK,KACArG,GAAMK,SACRiG,QAAQC,IAAK,yBAAuB,IAAIrD,MAAOsD,UAAYxG,GAAMK,QAAQmG,WAAa,kBAG5F,MAAMC,EAAQR,EAAQR,IAAIiB,UAAU7K,MAAM4K,GACjCA,EAAM3K,MAAMoI,SAAS,aAA8B,YAAfuC,EAAMpB,OAEnDY,EAAQU,cAAcF,GAAOJ,MAAK,KAC5BrG,GAAMK,UACRiG,QAAQC,IAAK,wBAAsB,IAAIrD,MAAOsD,UAAYxG,GAAMK,QAAQmG,WAAa,eACrF5H,GAAc,OAIlBF,GAAe,GAEf,MAAMnC,EAAYb,SAASc,eAAe,kBACtCyJ,EAAQR,MAjEKQ,CAAAA,IACnBH,uBAAsB,KAAO,IAAD,IAC1B,UAAApK,SAASO,cAAc,2BAAvB,SAA4CmI,iBAAiB,SAAS,KAAO,IAAD,MAC1EhD,KACA6E,EAAQvE,MAAMC,iBAAkB,EAChC,UAAAjG,SAASO,cAAc,2BAAvB,SAA4CuF,UAAUC,OAAO,UAC7D,UAAA/F,SAASO,cAAc,2BAAvB,SAA4CuF,UAAUoC,IAAI,UAC1D,UAAAhE,EAAgBS,eAAhB,SAAyBoB,YAE3B,UAAA/F,SAASO,cAAc,6BAAvB,SAA8CmI,iBAAiB,SAAS,KAAO,IAAD,EAGI,IAGzE,MALPhD,KACA6E,EAAQvE,MAAMC,iBAAkB,EAChC,UAAIjG,SAASO,cAAc,6BAA3B,OAAI,EAA8CuF,UAAUoF,SAAS,WACnE,UAAAlL,SAASO,cAAc,6BAAvB,SAA8CuF,UAAUC,OAAO,UAC/D,UAAA7B,EAAgBS,eAAhB,SAAyBoB,WAEzB,UAAA/F,SAASO,cAAc,2BAAvB,SAA4CuF,UAAUC,OAAO,UAC7D,UAAA/F,SAASO,cAAc,6BAAvB,SAA8CuF,UAAUoC,IAAI,UAC5D,UAAAhE,EAAgBS,eAAhB,SAAyBoB,SACzB7B,EAAgBS,QAAU4F,EAAQY,GAAG,SAAUzM,IAAO,IAAD,IACnD,UAAAsB,SAASO,cAAc,2BAAvB,SAA4CuF,UAAUC,OAAO,UAC7D,UAAA/F,SAASO,cAAc,6BAAvB,SAA8CuF,UAAUoC,IAAI,UAC5D,MAAMkD,EAAO1M,EAAE2M,SAASC,SAAW,IAAM5M,EAAE2M,SAASE,UAEpDjL,OAAOkL,KAAK,wCAA0CJ,EAAO,iBAAkB,yBA0CnFK,CAAYlB,GAEZ3F,EAAAA,QACE,SAAC,EAAAC,SAAD,CAAUC,SAAU,GAApB,UACE,SAACnD,EAAD,CACEkB,KAAM0H,EACNhF,mBAAoBA,GACpBhB,gBAAiBA,GACjBpB,mBAAoBA,EACpB8B,cAAeC,OAGnBrE,MAyTEmE,gBAAiBA,GACjB7B,mBAAoBA,EACpBE,gBAAiBA,EACjBqI,SArRO,KACf9H,GAAY,IAqRJ+H,gBAAiB,KACfjG,WAKN,iCACEiB,KAAK,mBACLkD,SAAS,MACT,cAAY,IACZhL,UACGyB,OAAOlB,YAAc,KAGN,IAFdH,GAAQ2M,QAAQ5M,GACPA,EAAOE,WACbuG,QACJnF,OAAOlB,WAAa,MAAQ6D,EATjC,WAYE,+BAAoB0D,KAAK,aAAamD,UAAW7G,GAAc3C,OAAOlB,WAAa,IAAM,GAAK,KAA9F,SACGH,GAAQ8K,KAAK/K,IACZ,IAAKA,EAAOG,QAAUU,EAAQ,IAC5B,OACE,4BACE,4BACEmK,UAAU,UACVtD,MAAO1H,EAAOoB,MACd,oBAAoB,GAAEpB,EAAO6B,mBAH/B,SAKG7B,EAAOoB,SAEV,8CACE,2BACEqG,KAAMzH,EAAOoB,MACb6J,KAAMjL,EAAO6B,UACb+F,KAAM5H,EAAO4H,KACbJ,GAAK,GAAExH,EAAO6B,mBACdqJ,SAAWjH,EAAkB,KAAL,GACxB8D,QAASoD,MAAAA,IACPpK,GAAW,IAAIhB,EAAcL,EAAGM,EAAQC,MACxCmL,uBAAsB,KACpBnD,GAAajI,OAGjB2B,QAA4B,IAApB3B,EAAOE,SAAoB,GAAK,WArBnC,GAAEF,EAAO6B,oCA8B3B5B,GAAQ8K,KAAK/K,IACZ,KAAMA,EAAOG,QAAUU,EAAQ,MAASb,EAAOE,SAC7C,OACE,iBAAKmL,UAAU,eAAf,WACE,gBAAKA,UAAU,cAAf,SAA8BrL,EAAOoB,SACrC,iBAAKiK,UAAU,iBAAf,UACoB,oBAAjBrL,EAAOoB,OAA+BP,EAAQ,MAC7C,2BACEgM,IAAK5H,EACL,aAAW,WACX4C,WAAW,QACXC,MAAM,IACN,mBAAiB,GACjBF,KAAK,YACLG,QAAUrI,IDrhBKM,CAAAA,IAAsC,IAAD,IAC1E,IAAI8M,EAAS,EACb,MAAMC,EAAwC/L,SAASO,cACrD,2CAEF,GAAIwL,EAAS,CACP,OAACA,QAAD,IAACA,GAAAA,EAASlN,YACZiN,GAAUC,EAAQ7C,aAEpB,MAAM8C,EAAaD,EAAQxL,cAAc,sBACrCyL,IACFF,GAAM,OAAIE,QAAJ,IAAIA,OAAJ,EAAIA,EAAY9C,aAG1B,MAGM+C,EAHwCjM,SAASO,cACrD,8CAEyBA,cAAc,sBACrC0L,IACFH,GAAM,OAAIG,QAAJ,IAAIA,OAAJ,EAAIA,EAAY/C,aAExB,IAAIrJ,EAAS,eAAciM,OAC3B,MAAM/C,EAAQ/J,EAAOS,QAAQ,uBACT,eAAhBT,EAAO4H,MACT5H,EAAO4H,KAAO,YACd/G,EAAQ,QACH,OAALkJ,QAAK,IAALA,GAAAA,EAAOrJ,gBAAgB,eAEvBV,EAAO4H,KAAO,aACT,OAALmC,QAAK,IAALA,GAAAA,EAAOpJ,aAAa,YAAa,KAG9B,OAALoJ,QAAK,IAALA,GAAA,UAAAA,EAAO7B,kBAAP,mBACI3G,cAAc,mBADlB,SAEIZ,aACA,QACC,cAAaE,6EAElB,MAAMqM,EAAM,OAAGnD,QAAH,IAAGA,OAAH,EAAGA,EAAOxI,cAAc,mBAC/B,OAALwI,QAAK,IAALA,GAAAA,EAAO9I,iBAAiB,eAAeZ,SAAS8M,IAC3C,OAAHA,QAAG,IAAHA,GAAAA,EAAKxM,aAAa,QAAU,cAAaE,QAErC,OAANqM,QAAM,IAANA,GAAAA,EAAQvM,aAAa,QAAU,cAAaE,KAE5C,MAAMuM,EAAWpM,SAASO,cAAc,6BAClC8L,EAAmBrM,SAASO,cAAc,mCAC5C6L,GACFnD,YAAW,KACT,MAAMqD,EAAK,IAAIC,cAAc,UAAW,CACtCC,QAAQ,EACRC,SAAS,EACTC,YAAY,EACZC,SAAU,EACVC,KAAM,QACNC,UAAU,EACVC,SAAS,EACTC,OAAQ,EACRC,aAAa,EACbC,IAAK,QACLC,QAAS,GACTC,SAAU,EACVC,SAAS,EACTC,QAAQ,EACRC,UAAU,IAEI,OAAhBjB,QAAgB,IAAhBA,GAAAA,EAAkBkB,cAAcjB,GACxB,OAARF,QAAQ,IAARA,GAAAA,EAAUmB,cAAcjB,KACvB,MCmdmBkB,CAAuB9O,EAAEC,WAI9B4H,IAAS,IACV,gDACE,4BAAiBG,MAAM,gBAAgB,oBAAkB,cAAcsD,UAAU,aAAjF,0BAGA,2BACExD,GAAG,cACH,aAAW,QACXK,WAAW,QACXC,MAAM,IACN,mBAAiB,GACjBF,KAAK,IACLG,QAAS,KAAO,IAAD,IACL,QAAR,EAAA/G,gBAAA,mBACIO,cAAc,qDADlB,SAEIZ,aAAa,YAAa,IAC9BX,EAAOE,UAAW,EAClBa,GAAW,IAAId,gBAjCW,GAAED,EAAO4H,6BA0ClD3H,GAAQ8K,KAAK/K,IACZ,IAAKA,EAAOG,QAAUU,EAAQ,IAC5B,OACE,gBACEwK,UAAU,eACV7D,GAAIxH,EAAO6B,UAEXE,QAAS/B,EAAOE,UADV,GAAEF,EAAO6B,+BAQzB,gBAAK8F,KAAK,SAAV,UACE,SAAC,EAAA9B,SAAD,CAAUC,SAAU,GAApB,UACE,SAACrD,EAAD,YAIN,SAAC,EAAAoD,SAAD,CAAUC,SAAU,GAApB,UACE,SAACpD,EAAD,CAAYe,KAAMA,EAAMrC,MAAOuC,EAAW8K,QAAM,EAACC,cAriBjC,KACpBhL,EAAQ,IACRE,EAAa,aAwiBjB","sources":["Components/Shell/utils/shell.ts","Components/Shell/Shell.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport React from 'react';\n\nconst panelDismissedChange = (e: Event) => {\n  const shellPanel = (e.target as HTMLElement)?.parentElement;\n  (shellPanel as HTMLCalciteShellPanelElement).collapsed = (e.target as HTMLCalcitePanelElement)?.dismissed;\n};\n\nexport const initialized = (): void => {\n  const panels = document.querySelectorAll('calcite-panel');\n  panels.forEach((panel) => {\n    panel?.addEventListener('calcitePanelDismissedChange', panelDismissedChange);\n  });\n};\n\nexport const deactivate = (): void => {\n  const panels = document.querySelectorAll('calcite-panel');\n  panels.forEach((panel) => {\n    panel?.removeEventListener('calcitePanelDismissedChange', panelDismissedChange);\n  });\n};\nconst deactivateActions = (actions: any[], isTool: boolean): void => {\n  if (innerWidth < 1000) {\n    actions.forEach((a) => {\n      a.isActive = false;\n    });\n  } else {\n    if (isTool) {\n      actions.forEach((a) => {\n        a.isActive = a.isActive && !a.isTool;\n      });\n    } else {\n      actions.forEach((a) => {\n        a.isActive = a.isActive && a.isTool;\n      });\n    }\n  }\n};\nexport const actionClicked = (e: any, action: any, actions: any[]): any[] => {\n  if (action.isActive) {\n    action.isActive = false;\n  } else {\n    deactivateActions(actions, action.isTool);\n    action.isActive = true;\n  }\n  const shellPanel = e.target.closest('calcite-shell-panel');\n\n  if (!action.isActive) {\n    shellPanel?.setAttribute('collapsed', '');\n  } else {\n    shellPanel?.removeAttribute('collapsed');\n  }\n  return actions;\n};\n\nexport const updateTheme = (theme: string, setTheme: React.Dispatch<string>) => {\n  if (theme) {\n    if (theme === 'dark') {\n      setTheme('dark');\n    }\n    if (theme === 'light') {\n      setTheme('light');\n    }\n  } else {\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      theme = 'dark';\n      setTheme('dark');\n    } else {\n      theme = 'light';\n      setTheme('light');\n    }\n  }\n  document.body.classList.remove(theme === 'light' ? 'dark' : 'light');\n  document.body.classList.add(theme === 'light' ? 'light' : 'dark');\n  const link = Array.from(document.head.querySelectorAll('link')).find((link: HTMLLinkElement) => {\n    return link.href.includes(`${theme}/main.css`);\n  });\n  if (link) {\n    document.head.appendChild(link);\n  }\n  if (window.matchMedia != undefined) {\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n    if (media.addEventListener != undefined) {\n      window.matchMedia('(prefers-color-scheme: dark)')?.addEventListener('change', (e) => {\n        const newTheme = e.matches ? 'dark' : 'light';\n        setTheme(newTheme);\n        window.localStorage.setItem('imaps_theme', newTheme);\n        document.body.classList.remove(newTheme === 'light' ? 'dark' : 'light');\n        document.body.classList.add(newTheme === 'light' ? 'light' : 'dark');\n        const link = Array.from(document.head.querySelectorAll('link')).find((link: HTMLLinkElement) => {\n          return link.href.includes(`${newTheme}/main.css`);\n        });\n        if (link) {\n          document.head.appendChild(link);\n        }\n      });\n    }\n  }\n};\n\nexport const windowResize = (\n  actions: any[],\n  width: number,\n  setWidth: React.Dispatch<number>,\n  setActions: React.Dispatch<any[]>,\n) => {\n  const activeActions = document.querySelectorAll('calcite-action[active]');\n  activeActions.forEach((button) => {\n    const action = actions.find((action) => {\n      return action.title === button.getAttribute('text');\n    });\n    if (window.innerWidth >= 1000 && action?.isActive && width < 1000) {\n      if (action.isTool) {\n        (document.querySelector('calcite-shell-panel[slot=contextual-panel]') as HTMLElement)?.setAttribute(\n          'collapsed',\n          '',\n        );\n        action.isActive = false;\n      }\n    }\n    if (window.innerWidth < 1000 && action?.isActive && width >= 1000) {\n      if (action.isTool) {\n        (document.querySelector('calcite-shell-panel[slot=primary-panel]') as HTMLElement)?.removeAttribute(\n          'collapsed',\n        );\n        action.isActive = false;\n      } else {\n        (document.querySelector('calcite-shell-panel[slot=contextual-panel]') as HTMLElement)?.removeAttribute(\n          'collapsed',\n        );\n      }\n    }\n\n    document.querySelectorAll('calcite-action-bar').forEach((bar) => {\n      if (bar) {\n        bar.expandDisabled = window.innerWidth <= 500;\n      }\n    });\n  });\n  setWidth(window.innerWidth);\n  setActions([...actions]);\n};\n\nexport const maximizePropertySearch = (action: HTMLCalciteActionElement) => {\n  let offset = 0;\n  const primary: HTMLCalciteShellPanelElement = document.querySelector(\n    'calcite-shell-panel[slot=primary-panel]',\n  ) as HTMLCalciteShellPanelElement;\n  if (primary) {\n    if (!primary?.collapsed) {\n      offset += primary.clientWidth;\n    }\n    const primaryBar = primary.querySelector('calcite-action-bar');\n    if (primaryBar) {\n      offset += primaryBar?.clientWidth;\n    }\n  }\n  const context: HTMLCalciteShellPanelElement = document.querySelector(\n    'calcite-shell-panel[slot=contextual-panel]',\n  ) as HTMLCalciteShellPanelElement;\n  const contextBar = context.querySelector('calcite-action-bar');\n  if (contextBar) {\n    offset += contextBar?.clientWidth;\n  }\n  let width = `calc(90vw - ${offset}px)`;\n  const panel = action.closest('calcite-shell-panel');\n  if (action.icon === 'right-edge') {\n    action.icon = 'left-edge';\n    width = '350px';\n    panel?.removeAttribute('maximized');\n  } else {\n    action.icon = 'right-edge';\n    panel?.setAttribute('maximized', '');\n  }\n\n  panel?.shadowRoot\n    ?.querySelector('.content')\n    ?.setAttribute(\n      'style',\n      `max-width: ${width}; width: calc(var(--calcite-panel-width-multiplier) * 100vw) !important;`,\n    );\n  const tabnav = panel?.querySelector('calcite-tab-nav');\n  panel?.querySelectorAll('calcite-tab').forEach((tab: HTMLCalciteTabElement) => {\n    tab?.setAttribute('style', `max-width: ${width}`);\n  });\n  tabnav?.setAttribute('style', `max-width: ${width}`);\n\n  const tabTitle = document.querySelector('calcite-tab-title[active]') as HTMLCalciteTabTitleElement;\n  const inactiveTabTitle = document.querySelector('calcite-tab-title:not([active])') as HTMLCalciteTabTitleElement;\n  if (tabTitle) {\n    setTimeout(() => {\n      const ev = new KeyboardEvent('keydown', {\n        altKey: false,\n        bubbles: true,\n        cancelable: true,\n        charCode: 0,\n        code: 'Enter',\n        composed: true,\n        ctrlKey: false,\n        detail: 0,\n        isComposing: false,\n        key: 'Enter',\n        keyCode: 13,\n        location: 0,\n        metaKey: false,\n        repeat: false,\n        shiftKey: false,\n      });\n      inactiveTabTitle?.dispatchEvent(ev);\n      tabTitle?.dispatchEvent(ev);\n    }, 250);\n  }\n};\n\n//activate PropertySearch on load and on geometry updates\nexport const activatePropertySearch = (actions: any[]): HTMLElement => {\n  const active = actions.find((action) => {\n    return action.isActive; // && window.innerWidth <= 1000;\n  });\n  if (active) {\n    if (window.innerWidth < 1000 || !active.isTool) {\n      active.isActive = false;\n    }\n  }\n  const search = actions.find((action) => {\n    return action.title === 'Property Search';\n  });\n\n  if (search) {\n    search.isActive = true;\n  }\n  const container = document.getElementById(search?.container as string);\n  if (container) {\n    const panel: HTMLDivElement = container?.closest('.action-panel') as HTMLDivElement;\n    panel.hidden = false;\n    const shell = container?.closest('calcite-shell-panel');\n    shell?.removeAttribute('collapsed');\n  }\n  return container as HTMLElement;\n};\n\nexport const formatShellPanelContent = () => {\n  document.querySelectorAll('calcite-shell-panel').forEach((panel) => {\n    const observer: MutationObserver = new MutationObserver((mutations) => {\n      if (mutations.length) {\n        let width = '350px';\n        if (window.innerWidth <= 500) {\n          width = 'calc(90vw - 50px)';\n        }\n        panel?.shadowRoot\n          ?.querySelector('.content')\n          ?.setAttribute(\n            'style',\n            `max-width: ${width}; width: calc(var(--calcite-panel-width-multiplier) * 100vw) !important;`,\n          );\n        document.querySelectorAll('calcite-action-bar').forEach((bar) => {\n          if (bar) {\n            bar.expandDisabled = window.innerWidth <= 500;\n          }\n        });\n        observer.disconnect();\n      } else {\n        observer.disconnect();\n      }\n    });\n    observer.observe(panel?.shadowRoot as Node, { childList: true });\n  });\n};\n\nexport const stopMeasuring = (measure: __esri.Measurement) => {\n  if (measure) {\n    if (\n      measure.viewModel.activeViewModel.state === 'measuring' ||\n      measure.viewModel.activeViewModel.state === 'ready'\n    ) {\n      measure.viewModel.activeViewModel?.clear();\n    }\n  }\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport React, { useContext, useEffect, useState, lazy, Suspense, useRef } from 'react';\n// import GA4React from 'ga-4-react';\n\nimport ReactDOM from 'react-dom';\nconst MapView = lazy(() => {\n  return import('../MapView/MapView');\n});\nconst Header = lazy(() => {\n  return import('../Header/Header');\n});\nconst TipManager = lazy(() => {\n  return import('../TipManager/TipManager');\n});\nconst PropertyPanel = lazy(() => import('../PropertyPanel/PropertyPanel'));\nconst LocationSearch = lazy(() => import('../LocationSearch/LocationSearch'));\nconst Layers = lazy(() => import('../Layers/Layers'));\nconst Basemaps = lazy(() => import('../Basemaps/Basemaps'));\nconst Legend = lazy(() => import('../Legend/Legend'));\nconst PropertySelect = lazy(() => import('../PropertySelect/PropertySelect'));\nconst Measure = lazy(() => import('../Measure/Measure'));\nconst Sketch = lazy(() => import('../Sketch/Sketch'));\nconst Bookmarks = lazy(() => import('../Bookmarks/Bookmarks'));\nconst Print = lazy(() => import('../Print/Print'));\nimport './Shell.scss';\nimport {\n  actionClicked,\n  deactivate,\n  initialized,\n  maximizePropertySearch,\n  updateTheme,\n  windowResize,\n  activatePropertySearch,\n  formatShellPanelContent,\n  stopMeasuring,\n} from './utils/shell';\nimport ThemeContext from '../ThemeContext';\nimport { basemaps } from '../../config/config';\nimport ActionContext from '../ActionContext';\nimport * as config from '../../config/config';\nimport * as reactiveUtils from '@arcgis/core/core/reactiveUtils';\n\nexport const Shell = () => {\n  const [mapId, setMapId] = useState<string>();\n  const [tips, setTips] = useState<any>([]);\n  const [tipsTitle, setTipsTitle] = useState<string>();\n  //console.log('render shell');\n  const [width, setWidth] = useState(window.innerWidth);\n  const view = useRef<__esri.MapView>();\n  const [viewCreated, setViewCreated] = useState(false);\n  const [viewLoaded, setViewLoaded] = useState(false);\n\n  const [selectedProperties, setSelectedProperties] = useState<__esri.Graphic[]>([]);\n  const [selectedFeature, setSelectedFeature] = useState<any>();\n  const { theme, setTheme } = useContext(ThemeContext);\n  const [updating, setUpdating] = useState(true);\n  //define sketch tools to handle deactivating other sketch tools\n  const sketchVM = useRef<__esri.SketchViewModel>();\n  const selectVM = useRef<__esri.SketchViewModel>();\n  const measurement = useRef<__esri.Measurement>();\n  const coordinates = useRef<__esri.CoordinateConversion>();\n  const maximize = useRef<HTMLCalciteActionElement>();\n  const streetviewClick = useRef<IHandle>();\n\n  const [activeTool, setActiveTool] = useState<string>();\n  const { actions, setActions } = useContext(ActionContext);\n  const start = useRef<Date>();\n  // const ga4react = useRef<GA4React>();\n\n  //when feature is selected update featureSelected state and render PropertySelect\n  const featureSelected = (feature: __esri.Graphic | undefined) => {\n    setSelectedFeature({ ...selectedFeature, ...{ attributes: feature?.attributes, geometry: feature?.geometry } });\n\n    const action = actions.find((action) => {\n      return action.title === 'Property Select';\n    });\n    if (action && view.current) {\n      const container = document.getElementById(action?.container);\n      if (container) {\n        ReactDOM.render(\n          <Suspense fallback={''}>\n            <PropertySelect\n              view={view.current}\n              selectedFeature={feature}\n              geometrySet={geometryChanged}\n              toolActivated={selectActivated}\n              clear={clearSelection}\n            />\n          </Suspense>,\n          container,\n        );\n      }\n    }\n\n    const printAction = actions.find((action) => {\n      return action.title === 'Print';\n    });\n    if (printAction) {\n      const container = document.getElementById(printAction?.container);\n      ReactDOM.render(\n        <Suspense fallback={''}>\n          <Print\n            view={view.current}\n            exportUrl=\"https://indoors.raleighnc.gov/arcgis/rest/services/ExportWebMap/GPServer/Export%20Web%20Map\"\n            templateUrl=\"https://indoors.raleighnc.gov/arcgis/rest/services/ExportWebMap/GPServer/Get%20Layout%20Templates%20Info/execute\"\n            selectedFeature={feature}\n          />\n        </Suspense>,\n        container,\n      );\n    }\n  };\n\n  const propertiesSelected = (properties: __esri.Graphic[]) => {\n    setSelectedProperties([...selectedProperties, ...properties]);\n    if (properties.length > 1) {\n      setSelectedFeature({ ...selectedFeature, ...{ attributes: null } });\n    }\n    const container = activatePropertySearch(actions);\n    ReactDOM.render(\n      <Suspense fallback={''}>\n        <PropertyPanel\n          propertiesSelected={propertiesSelected}\n          featureSelected={featureSelected}\n          selectedProperties={properties}\n        />\n      </Suspense>,\n      container,\n    );\n    setActions([...[], ...actions]);\n  };\n  const deactiveAllTools = () => {\n    selectVM.current?.cancel();\n    stopMeasuring(measurement.current as __esri.Measurement);\n    if (coordinates.current) {\n      coordinates.current.viewModel.mode = 'live';\n    }\n    sketchVM.current?.cancel();\n\n    setActiveTool('sketch');\n  };\n  const deactiveMapTools = () => {\n    document.querySelector('.map-tool.active')?.classList.remove('active');\n    if (view.current?.popup) {\n      view.current.popup.autoOpenEnabled = false;\n    }\n    streetviewClick.current?.remove();\n  };\n  //deactivate other sketch tools\n  const sketchToolActivated = (sketchViewModel: __esri.SketchViewModel) => {\n    sketchVM.current = sketchViewModel;\n    selectVM.current?.cancel();\n    stopMeasuring(measurement.current as __esri.Measurement);\n    if (coordinates.current) {\n      coordinates.current.viewModel.mode = 'live';\n    }\n    setActiveTool('sketch');\n    deactiveMapTools();\n  };\n  const measurementActivated = (measurementTool: __esri.Measurement, coordinatesTool: __esri.CoordinateConversion) => {\n    measurement.current = measurementTool;\n    coordinates.current = coordinatesTool;\n    sketchVM.current?.cancel();\n    selectVM.current?.cancel();\n    setActiveTool('measure');\n    deactiveMapTools();\n  };\n  const selectActivated = (sketchViewModel: __esri.SketchViewModel) => {\n    selectVM.current = sketchViewModel;\n    sketchVM.current?.cancel();\n    stopMeasuring(measurement.current as __esri.Measurement);\n    if (coordinates.current) {\n      coordinates.current.viewModel.mode = 'live';\n    }\n    setActiveTool('select');\n    deactiveMapTools();\n  };\n\n  //reset tips when dismissed\n  const tipsDismissed = () => {\n    setTips([]);\n    setTipsTitle('');\n  };\n  //render Tips action\n  const showTips = (isTool: boolean) => {\n    let action: any;\n    if (isTool) {\n      action = actions.find((action: any) => {\n        return action.isActive && action.isTool;\n      });\n    } else {\n      action = actions.find((action: any) => {\n        return action.isActive;\n      });\n    }\n    return action?.tips?.length > 0 ? (\n      <calcite-action\n        id={`tipAction${isTool ? '_tool' : ''}`}\n        text=\"Action\"\n        label=\"Action\"\n        slot=\"header-actions-end\"\n        icon=\"lightbulb\"\n        appearance=\"solid\"\n        scale=\"m\"\n        calcite-hydrated=\"\"\n        onClick={() => {\n          setTips([...[], ...action.tips]);\n          setTipsTitle(action.title);\n        }}\n      ></calcite-action>\n    ) : (\n      ''\n    );\n  };\n\n  const setMapTools = (mapView: __esri.MapView) => {\n    requestAnimationFrame(() => {\n      document.querySelector('.identify-widget')?.addEventListener('click', () => {\n        deactiveAllTools();\n        mapView.popup.autoOpenEnabled = true;\n        document.querySelector('.map-tool.active')?.classList.remove('active');\n        document.querySelector('.identify-widget')?.classList.add('active');\n        streetviewClick.current?.remove();\n      });\n      document.querySelector('.streetview-widget')?.addEventListener('click', () => {\n        deactiveAllTools();\n        mapView.popup.autoOpenEnabled = false;\n        if (document.querySelector('.streetview-widget')?.classList.contains('active')) {\n          document.querySelector('.streetview-widget')?.classList.remove('active');\n          streetviewClick.current?.remove();\n        } else {\n          document.querySelector('.map-tool.active')?.classList.remove('active');\n          document.querySelector('.streetview-widget')?.classList.add('active');\n          streetviewClick.current?.remove();\n          streetviewClick.current = mapView.on('click', (e) => {\n            document.querySelector('.map-tool.active')?.classList.remove('active');\n            document.querySelector('.streetview-widget')?.classList.add('active');\n            const cbll = e.mapPoint.latitude + ',' + e.mapPoint.longitude;\n            'https://maps.google.com?layer=c&cbll=' + cbll + '&cbp=0,0,0,0,0';\n            window.open('https://maps.google.com?layer=c&cbll=' + cbll + '&cbp=0,0,0,0,0', 'streetview');\n          });\n        }\n      });\n    });\n  };\n  //after map has initiliazed\n  const mapInitialized = async (mapView: __esri.MapView) => {\n    //setTimeout(() => {\n    mapView.watch('updating', (updating) => {\n      if ((view.current as any).cursor === 'default') {\n        setUpdating(updating);\n      } else {\n        setUpdating(false);\n      }\n    });\n    //});\n\n    if (!viewCreated) {\n      view.current = mapView;\n\n      reactiveUtils\n        .whenOnce(() => !mapView.updating)\n        .then(() => {\n          if (start.current) {\n            console.log(`Map fully loaded in ${(new Date().getTime() - start.current.getTime()) / 1000} seconds`);\n          }\n        });\n      const layer = mapView.map.allLayers.find((layer) => {\n        return layer.title.includes('Property') && layer.type === 'feature';\n      });\n      mapView.whenLayerView(layer).then(() => {\n        if (start.current) {\n          console.log(`Map initialized in ${(new Date().getTime() - start.current.getTime()) / 1000} seconds`);\n          setViewLoaded(true);\n        }\n      });\n\n      setViewCreated(true);\n\n      const container = document.getElementById('propertySearch');\n      if (mapView.map) {\n        setMapTools(mapView);\n\n        ReactDOM.render(\n          <Suspense fallback={''}>\n            <PropertyPanel\n              view={mapView}\n              propertiesSelected={propertiesSelected}\n              featureSelected={featureSelected}\n              selectedProperties={selectedProperties}\n              toolActivated={selectActivated}\n            />\n          </Suspense>,\n          container,\n        );\n      }\n    }\n  };\n\n  //update PropertyPanel geometry when geometry is updated by MapView or PropertySelect\n  const geometryChanged = (geometry: __esri.Geometry) => {\n    const container = activatePropertySearch(actions);\n    ReactDOM.render(\n      <Suspense fallback={''}>\n        <PropertyPanel\n          geometry={geometry}\n          propertiesSelected={propertiesSelected}\n          selectedProperties={selectedProperties}\n          featureSelected={featureSelected}\n          selectedFeature={selectedFeature}\n        />\n      </Suspense>,\n      container,\n    );\n  };\n\n  const clearSelection = () => {\n    const container = activatePropertySearch(actions);\n    ReactDOM.render(\n      <Suspense fallback={''}>\n        <PropertyPanel\n          geometry={undefined}\n          propertiesSelected={propertiesSelected}\n          selectedProperties={selectedProperties}\n          featureSelected={featureSelected}\n          selectedFeature={selectedFeature}\n        />\n      </Suspense>,\n      container,\n    );\n  };\n\n  const mapError = () => {\n    setUpdating(false);\n  };\n\n  //render widgets as they become active\n  const renderWidget = (action: any) => {\n    if (action) {\n      const container = document.getElementById(action.container);\n\n      document\n        .querySelector('calcite-shell-panel[slot=contextual-panel]')\n        ?.shadowRoot?.querySelector('.content')\n        ?.setAttribute(\n          'style',\n          `max-width: 350px; width: calc(var(--calcite-panel-width-multiplier) * 100vw) !important;`,\n        );\n      if (maximize.current) {\n        maximize.current.icon = 'left-edge';\n      }\n      if (!container?.hasChildNodes()) {\n        if (action.title === 'Property Search') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <PropertyPanel\n                view={view.current}\n                propertiesSelected={propertiesSelected}\n                featureSelected={featureSelected}\n                selectedProperties={selectedProperties}\n              />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Location Search') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <LocationSearch view={view.current} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Layers') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Layers view={view.current} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Basemaps') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Basemaps view={view.current} default={basemaps.default.id} imagery={basemaps.imagery.id} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Legend') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Legend view={view.current} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Property Select') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <PropertySelect\n                view={view.current}\n                geometrySet={geometryChanged}\n                selectedFeature={selectedFeature}\n                toolActivated={selectActivated}\n                activeTool={activeTool}\n                clear={clearSelection}\n              />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Measure') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Measure view={view.current} measurementActivated={measurementActivated} activeTool={activeTool} />\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Sketch') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Sketch view={view.current} toolActivated={sketchToolActivated} activeTool={activeTool} />{' '}\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Bookmarks') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Bookmarks view={view.current} />{' '}\n            </Suspense>,\n            container,\n          );\n        }\n        if (action.title === 'Print') {\n          ReactDOM.render(\n            <Suspense fallback={''}>\n              <Print\n                view={view.current}\n                exportUrl=\"https://indoors.raleighnc.gov/arcgis/rest/services/ExportWebMap/GPServer/Export%20Web%20Map\"\n                templateUrl=\"https://indoors.raleighnc.gov/arcgis/rest/services/ExportWebMap/GPServer/Get%20Layout%20Templates%20Info/execute\"\n              />\n            </Suspense>,\n            container,\n          );\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    start.current = new Date();\n    // ga4react.current = new GA4React('G-WS0FB3FN0T');\n    // ga4react.current.initialize().then(\n    //   (ga4) => {\n    //     ga4.pageview('path');\n    //     ga4.gtag('event', 'pageview', 'path'); // or your custom gtag event\n    //   },\n    //   (err) => {\n    //     console.error(err);\n    //   },\n    // );\n    const theme = window.localStorage.getItem('imaps_theme') as string;\n    const url = new URL(document.URL);\n    const id = url.searchParams.get('id');\n    if (id) {\n      setMapId(id);\n    } else {\n      setMapId(config.mapId);\n    }\n\n    updateTheme(theme, setTheme);\n  }, []);\n  useEffect(() => {\n    initialized();\n    // const theme = window.localStorage.getItem('imaps_theme') as string;\n    // updateTheme(theme, setTheme);\n    let resizeTimer: NodeJS.Timeout;\n    window.addEventListener('resize', () => {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => {\n        if ((window.innerWidth < 1000 && width >= 1000) || (window.innerWidth >= 1000 && width < 1000)) {\n          windowResize(actions, width, setWidth, setActions);\n        }\n      }, 250);\n      document.querySelectorAll('calcite-shell-panel').forEach((panel) => {\n        let width = '350px';\n        if (maximize.current) {\n          maximize.current.icon = 'left-edge';\n        }\n        const bar = panel.querySelector('calcite-action-bar');\n        if (window.innerWidth <= 500) {\n          width = `calc(90vw - ${bar?.clientWidth}px)`;\n        }\n        panel?.shadowRoot\n          ?.querySelector('.content')\n          ?.setAttribute(\n            'style',\n            `max-width: ${width}; width: calc(var(--calcite-panel-width-multiplier) * 100vw) !important;`,\n          );\n      });\n    });\n    formatShellPanelContent();\n\n    return () => {\n      window.removeEventListener('resize', () => {\n        windowResize(actions, width, setWidth, setActions);\n      });\n      deactivate();\n    };\n  }, [actions]);\n  return (\n    <div>\n      {updating && (\n        <calcite-progress class={`shell calcite-theme-${theme}`} type=\"indeterminate\" value=\"0.5\"></calcite-progress>\n      )}\n\n      <calcite-shell class={`shell calcite-theme-${theme}`}>\n        {width >= 1000 ? (\n          <calcite-shell-panel slot=\"primary-panel\" position=\"start\" width-scale=\"l\" collapsed>\n            <calcite-action-bar slot=\"action-bar\" expanded={!viewLoaded && window.innerWidth > 500 ? '' : null}>\n              {actions.map((action: any) => {\n                if (action.isTool) {\n                  return (\n                    <div key={`${action.container}_action_primary`}>\n                      <calcite-tooltip\n                        placement=\"trailing\"\n                        label={action.title}\n                        reference-element={`${action.container}_action`}\n                      >\n                        {action.title}\n                      </calcite-tooltip>\n                      <calcite-tooltip-manager>\n                        <calcite-action\n                          text={action.title}\n                          name={action.container}\n                          icon={action.icon}\n                          id={`${action.container}_action`}\n                          disabled={!viewLoaded ? '' : null}\n                          onClick={async (e: any) => {\n                            setActions([...actionClicked(e, action, actions)]);\n                            requestAnimationFrame(() => {\n                              renderWidget(action);\n                            });\n                          }}\n                          active={action.isActive === true ? '' : null}\n                        ></calcite-action>\n                      </calcite-tooltip-manager>\n                    </div>\n                  );\n                }\n              })}\n            </calcite-action-bar>\n            {actions.map((action: any) => {\n              if (action.isTool && action.isActive) {\n                return (\n                  <div className=\"panel-header\" key={`${action.icon}_header_primary`}>\n                    <div className=\"panel-title\">{action.title}</div>\n                    <div className=\"header-actions\">\n                      {showTips(true)}\n                      <calcite-tooltip-manager>\n                        <calcite-tooltip label=\"Tooltip label\" reference-element=\"closeAction\" placement=\"bottom-end\">\n                          Close panel\n                        </calcite-tooltip>\n                        <calcite-action\n                          id=\"closeAction\"\n                          aria-label=\"Close\"\n                          appearance=\"solid\"\n                          scale=\"m\"\n                          calcite-hydrated=\"\"\n                          icon=\"x\"\n                          onClick={() => {\n                            document\n                              ?.querySelector('calcite-shell-panel[slot=primary-panel]')\n                              ?.setAttribute('collapsed', '');\n                            action.isActive = false;\n                            setActions([...actions]);\n                          }}\n                        ></calcite-action>\n                      </calcite-tooltip-manager>\n                    </div>\n                  </div>\n                );\n              }\n            })}\n            {actions.map((action: any) => {\n              if (action.isTool) {\n                return (\n                  <div\n                    id={action.container}\n                    className=\"action-panel\"\n                    key={`${action.container}_primary`}\n                    hidden={!action.isActive}\n                  ></div>\n                );\n              }\n            })}\n          </calcite-shell-panel>\n        ) : (\n          ''\n        )}\n        <Suspense fallback={''}>\n          <MapView\n            id={mapId}\n            initialized={mapInitialized}\n            geometryChanged={geometryChanged}\n            selectedProperties={selectedProperties}\n            selectedFeature={selectedFeature}\n            mapError={mapError}\n            identifyClicked={() => {\n              deactiveAllTools();\n            }}\n          />\n        </Suspense>\n\n        <calcite-shell-panel\n          slot=\"contextual-panel\"\n          position=\"end\"\n          width-scale=\"l\"\n          collapsed={\n            (window.innerWidth <= 500 &&\n              actions.filter((action) => {\n                return action.isActive;\n              }).length === 0) ||\n            (window.innerWidth > 500 && !viewLoaded)\n          }\n        >\n          <calcite-action-bar slot=\"action-bar\" expanded={!viewLoaded && window.innerWidth > 500 ? '' : null}>\n            {actions.map((action: any) => {\n              if (!action.isTool || width < 1000) {\n                return (\n                  <div key={`${action.container}_action_contextual`}>\n                    <calcite-tooltip\n                      placement=\"leading\"\n                      label={action.title}\n                      reference-element={`${action.container}_action`}\n                    >\n                      {action.title}\n                    </calcite-tooltip>\n                    <calcite-tooltip-manager>\n                      <calcite-action\n                        text={action.title}\n                        name={action.container}\n                        icon={action.icon}\n                        id={`${action.container}_action`}\n                        disabled={!viewLoaded ? '' : null}\n                        onClick={async (e: any) => {\n                          setActions([...actionClicked(e, action, actions)]);\n                          requestAnimationFrame(() => {\n                            renderWidget(action);\n                          });\n                        }}\n                        active={action.isActive === true ? '' : null}\n                      ></calcite-action>\n                    </calcite-tooltip-manager>\n                  </div>\n                );\n              }\n            })}\n          </calcite-action-bar>\n\n          {actions.map((action: any) => {\n            if ((!action.isTool || width < 1000) && action.isActive) {\n              return (\n                <div className=\"panel-header\" key={`${action.icon}_header_contextual`}>\n                  <div className=\"panel-title\">{action.title}</div>\n                  <div className=\"header-actions\">\n                    {action.title === 'Property Search' && width > 500 && (\n                      <calcite-action\n                        ref={maximize}\n                        aria-label=\"Maximize\"\n                        appearance=\"solid\"\n                        scale=\"m\"\n                        calcite-hydrated=\"\"\n                        icon=\"left-edge\"\n                        onClick={(e: any) => {\n                          maximizePropertySearch(e.target);\n                        }}\n                      ></calcite-action>\n                    )}\n                    {showTips(false)}\n                    <calcite-tooltip-manager>\n                      <calcite-tooltip label=\"Tooltip label\" reference-element=\"closeAction\" placement=\"bottom-end\">\n                        Close panel\n                      </calcite-tooltip>\n                      <calcite-action\n                        id=\"closeAction\"\n                        aria-label=\"Close\"\n                        appearance=\"solid\"\n                        scale=\"m\"\n                        calcite-hydrated=\"\"\n                        icon=\"x\"\n                        onClick={() => {\n                          document\n                            ?.querySelector('calcite-shell-panel[slot=contextual-panel]')\n                            ?.setAttribute('collapsed', '');\n                          action.isActive = false;\n                          setActions([...actions]);\n                        }}\n                      ></calcite-action>\n                    </calcite-tooltip-manager>\n                  </div>\n                </div>\n              );\n            }\n          })}\n          {actions.map((action: any) => {\n            if (!action.isTool || width < 1000) {\n              return (\n                <div\n                  className=\"action-panel\"\n                  id={action.container}\n                  key={`${action.container}_contextual`}\n                  hidden={!action.isActive}\n                ></div>\n              );\n            }\n          })}\n        </calcite-shell-panel>\n\n        <div slot=\"header\">\n          <Suspense fallback={''}>\n            <Header />\n          </Suspense>\n        </div>\n      </calcite-shell>\n      <Suspense fallback={''}>\n        <TipManager tips={tips} title={tipsTitle} closed tipsDismissed={tipsDismissed} />\n      </Suspense>\n    </div>\n  );\n};\nexport default Shell;\n"],"names":["panelDismissedChange","e","target","parentElement","collapsed","dismissed","actionClicked","action","actions","isActive","isTool","innerWidth","forEach","a","deactivateActions","shellPanel","closest","removeAttribute","setAttribute","windowResize","width","setWidth","setActions","document","querySelectorAll","button","find","title","getAttribute","window","querySelector","bar","expandDisabled","activatePropertySearch","active","search","container","getElementById","hidden","shell","stopMeasuring","measure","viewModel","activeViewModel","state","clear","MapView","lazy","Header","TipManager","PropertyPanel","LocationSearch","Layers","Basemaps","Legend","PropertySelect","Measure","Sketch","Bookmarks","Print","Shell","mapId","setMapId","useState","tips","setTips","tipsTitle","setTipsTitle","view","useRef","viewCreated","setViewCreated","viewLoaded","setViewLoaded","selectedProperties","setSelectedProperties","selectedFeature","setSelectedFeature","theme","setTheme","useContext","ThemeContext","updating","setUpdating","sketchVM","selectVM","measurement","coordinates","maximize","streetviewClick","activeTool","setActiveTool","ActionContext","start","featureSelected","feature","attributes","geometry","current","ReactDOM","Suspense","fallback","geometrySet","geometryChanged","toolActivated","selectActivated","clearSelection","printAction","exportUrl","templateUrl","propertiesSelected","properties","length","deactiveAllTools","cancel","mode","deactiveMapTools","classList","remove","popup","autoOpenEnabled","sketchToolActivated","sketchViewModel","measurementActivated","measurementTool","coordinatesTool","showTips","id","text","label","slot","icon","appearance","scale","onClick","undefined","renderWidget","shadowRoot","hasChildNodes","default","basemaps","imagery","useEffect","Date","localStorage","getItem","URL","searchParams","get","config","matchMedia","matches","body","add","link","Array","from","head","href","includes","appendChild","addEventListener","newTheme","setItem","updateTheme","resizeTimer","panel","clearTimeout","setTimeout","clientWidth","observer","MutationObserver","mutations","disconnect","observe","childList","removeEventListener","class","type","value","position","expanded","map","placement","name","disabled","async","requestAnimationFrame","className","initialized","mapView","watch","cursor","reactiveUtils","then","console","log","getTime","layer","allLayers","whenLayerView","contains","on","cbll","mapPoint","latitude","longitude","open","setMapTools","mapError","identifyClicked","filter","ref","offset","primary","primaryBar","contextBar","tabnav","tab","tabTitle","inactiveTabTitle","ev","KeyboardEvent","altKey","bubbles","cancelable","charCode","code","composed","ctrlKey","detail","isComposing","key","keyCode","location","metaKey","repeat","shiftKey","dispatchEvent","maximizePropertySearch","closed","tipsDismissed"],"sourceRoot":""}