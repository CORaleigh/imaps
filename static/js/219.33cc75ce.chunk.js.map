{"version":3,"sources":["Components/PropertyPanel/utils/property.ts","Components/PropertyPanel/PropertyPanel.tsx"],"names":["setSearchParams","features","pin","map","feature","getAttribute","url","URL","window","location","toString","searchParams","set","state","history","pushState","href","replaceState","PropertySearch","lazy","PropertyInfo","PropertyList","PropertyPanel","props","useRef","infoTab","listTab","loaded","setLoaded","useState","infoTabDisabled","setInfoTabDisabled","view","setView","featureRef","filter","setFilter","where","setWhere","table","setTable","selectedTab","setSelectedTab","reloadTable","setReloadTable","addressTable","setAddressTable","properties","layer","setLayer","loading","setLoading","toggleTabs","tabTitle","title","document","querySelector","ev","KeyboardEvent","altKey","bubbles","cancelable","charCode","code","composed","ctrlKey","detail","isComposing","key","keyCode","metaKey","repeat","shiftKey","dispatchEvent","clear","current","undefined","featureSelected","propertiesSelected","graphics","graphic","length","removeMany","useEffect","mapView","allTables","find","includes","type","allLayers","mapViewLoaded","querySelectorAll","forEach","tab","addEventListener","event","observer","MutationObserver","mutations","shadow","target","shadowRoot","innerHTML","disconnect","observe","attributes","e","back","decodeURIComponent","split","join","get","geometry","promiseUtils","resolve","reject","queryFeatures","outFields","returnGeometry","outSpatialReference","spatialReference","then","featureSet","oids","getObjectId","queryRelatedFeatures","relationshipId","objectIds","result","reloids","oid","push","geometryChanged","data","f","popupTemplate","prop","catch","selectedProperties","className","id","fallback","condosTable","propertyLayer","searchComplete","setAttribute","position","layout","slot","active","ref","disabled","match","splice","indexOf","goTo","duration","easing"],"mappings":"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","file":"static/js/219.33cc75ce.chunk.js","sourcesContent":["import * as promiseUtils from '@arcgis/core/core/promiseUtils';\nexport const geometryChanged = (\n  view: __esri.MapView,\n  layer: __esri.FeatureLayer,\n  geometry: __esri.Geometry,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Promise<any> => {\n  return promiseUtils.create((resolve, reject) => {\n    if (geometry != undefined) {\n      layer\n        ?.queryFeatures({\n          geometry: geometry,\n          outFields: ['OBJECTID', 'REID', 'PIN_NUM'],\n          returnGeometry: true,\n          outSpatialReference: view?.spatialReference,\n        })\n        .then((featureSet) => {\n          //view?.goTo(featureSet.features, { duration: 1000, easing: 'ease' });\n          const oids = featureSet.features.map((feature) => {\n            return feature.getObjectId();\n          });\n          layer.queryRelatedFeatures({ relationshipId: 0, objectIds: oids, outFields: ['*'] }).then((result) => {\n            const reloids: number[] = [];\n            const features: __esri.Graphic[] = [];\n            oids.forEach((oid) => {\n              result[oid]?.features.forEach((feature: __esri.Graphic) => {\n                reloids.push(feature.getAttribute('OBJECTID'));\n                features.push(feature);\n              });\n            });\n            if (reloids.length) {\n              resolve({\n                where: `OBJECTID in (${reloids.toString()})`,\n                features: features,\n                properties: featureSet.features,\n              });\n            } else {\n              reject();\n            }\n          });\n        });\n    }\n  });\n};\n\nexport const setSearchParams = (features: __esri.Graphic[]): void => {\n  const pin: string[] = features.map((feature: __esri.Graphic) => {\n    return feature.getAttribute('PIN_NUM');\n  });\n  const url = new URL(window.location.toString());\n  //const searchParams = new URLSearchParams();\n  if (pin) {\n    url.searchParams.set('pin', pin.toString());\n    const state = { pin: pin.toString() };\n    if (history.state) {\n      if (history.state.pin != state.pin) {\n        history.pushState({ pin: pin.toString() }, '', url.href);\n      }\n    } else {\n      history.pushState({ pin: pin.toString() }, '', url.href);\n    }\n\n    //url.searchParams\n  } else {\n    history.replaceState(history.state, '', url.href);\n  }\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { lazy, Suspense, useEffect, useRef, useState } from 'react';\nconst PropertySearch = lazy(() => import('./PropertySearch/PropertySearch'));\nconst PropertyInfo = lazy(() => import('./PropertyInfo/PropertyInfo'));\nconst PropertyList = lazy(() => import('./PropertyList/PropertyList'));\nimport { geometryChanged, setSearchParams } from './utils/property';\nimport './PropertyPanel.scss';\nexport const PropertyPanel = (props: any) => {\n  const state = useRef({ pin: '' });\n  const infoTab = useRef<HTMLCalciteTabTitleElement>(null);\n  const listTab = useRef<HTMLCalciteTabTitleElement>(null);\n\n  const [loaded, setLoaded] = useState(false);\n  const [infoTabDisabled, setInfoTabDisabled] = useState(true);\n  const [view, setView] = useState<__esri.MapView>();\n  // const [feature, setFeature] = useState<__esri.Graphic>();\n  const featureRef = useRef<__esri.Graphic>();\n  const [filter, setFilter] = useState('OBJECTID IS NULL');\n  const [where, setWhere] = useState('OBJECTID IS NULL');\n\n  const [table, setTable] = useState<__esri.FeatureLayer>();\n\n  const [selectedTab, setSelectedTab] = useState('list');\n  const [reloadTable, setReloadTable] = useState(false);\n\n  const [addressTable, setAddressTable] = useState<__esri.FeatureLayer>();\n  const properties = useRef<__esri.Graphic[]>();\n  const [layer, setLayer] = useState<__esri.FeatureLayer>();\n  const [loading, setLoading] = useState(false);\n\n  const mapViewLoaded = (mapView: __esri.MapView) => {\n    setTable(\n      mapView.map.allTables.find((layer) => {\n        return layer.title.includes('Condo') && layer.type === 'feature';\n      }) as __esri.FeatureLayer,\n    );\n\n    setAddressTable(\n      mapView.map.allTables.find((layer) => {\n        return layer.title.includes('Address') && layer.type === 'feature';\n      }) as __esri.FeatureLayer,\n    );\n    setLayer(\n      mapView.map.allLayers.find((layer) => {\n        return layer.title.includes('Property') && layer.type === 'feature';\n      }) as __esri.FeatureLayer,\n    );\n    setLoaded(true);\n    setView(mapView);\n    //new FeatureTable({ container: panelRef.current as HTMLDivElement, layer: layer, view: mapView });\n  };\n  const toggleTabs = (tabTitle: string) => {\n    //setSelectedTab(tabTitle);\n    //const tabnav: HTMLCalciteTabNavElement = document.querySelector('calcite-tab-nav') as HTMLCalciteTabNavElement;\n\n    //tabnav?.dispatchEvent(new CustomEvent('calciteTabChange', { detail: { tab: tabTitle } }));\n    const title: HTMLCalciteTabTitleElement = document.querySelector(\n      `calcite-tab-title[tab=${tabTitle}]`,\n    ) as HTMLCalciteTabTitleElement;\n    // title.focus();\n    //title.click();\n    const ev = new KeyboardEvent('keydown', {\n      altKey: false,\n      bubbles: true,\n      cancelable: true,\n      charCode: 0,\n      code: 'Enter',\n      composed: true,\n      ctrlKey: false,\n      detail: 0,\n      isComposing: false,\n      key: 'Enter',\n      keyCode: 13,\n      location: 0,\n      metaKey: false,\n      repeat: false,\n      shiftKey: false,\n    });\n\n    title.dispatchEvent(ev);\n    // setTimeout(() => {\n    //   const tab: HTMLElement = document.querySelector(\n    //     `calcite-tab-title:${tabTitle === 'list' ? 'first' : 'last'}-child`,\n    //   ) as HTMLElement;\n    //   const indicator: HTMLCalciteTabNavElement = document\n    //     ?.querySelector('calcite-tab-nav')\n    //     ?.shadowRoot?.querySelector('.tab-nav-active-indicator') as HTMLCalciteTabNavElement;\n    //   tab.focus();\n    //   indicator.setAttribute(\n    //     'style',\n    //     `transition-duration: 0.3s; width: ${tab.clientWidth}px; left: ${tab.offsetLeft}px;`,\n    //   );\n    // }, 500);\n    setReloadTable(true);\n  };\n  const searchComplete = (result: any) => {\n    if (result.feature || result.features.length === 1) {\n      featureRef.current = result.features[0];\n      props.featureSelected(result.features[0]);\n      setInfoTabDisabled(false);\n      //featureRef.current = result.features[0];\n      setSearchParams([result.features[0]]);\n      toggleTabs('info');\n      setSelectedTab('info');\n    } else {\n      setSearchParams([]);\n      setInfoTabDisabled(true);\n      featureRef.current = undefined;\n      toggleTabs('list');\n      setSelectedTab('list');\n    }\n\n    const oids = result?.features.map((feature: __esri.Graphic) => {\n      return feature.getAttribute('OBJECTID');\n    });\n    setFilter(`OBJECTID in (${oids.toString()})`);\n    properties.current = result.properties;\n    props.selectedProperties?.forEach((prop: __esri.Graphic) => {\n      prop.setAttribute('selected', 0);\n    });\n\n    props.propertiesSelected(properties.current);\n    const graphics = (props.view as __esri.MapView).graphics.filter((graphic) => {\n      return graphic.getAttribute('type') === 'buffer';\n    });\n    props.view.graphics.removeMany(graphics);\n  };\n  const tableFeatureSelected = (feature: __esri.Graphic) => {\n    if (feature) {\n      properties.current?.forEach((prop: __esri.Graphic) => {\n        if (prop?.getAttribute('PIN_NUM') != feature?.getAttribute('PIN_NUM')) {\n          prop?.setAttribute('selected', 0);\n        }\n      });\n      const match: __esri.Graphic = properties.current?.find((prop: __esri.Graphic) => {\n        return prop?.getAttribute('PIN_NUM') === feature?.getAttribute('PIN_NUM');\n      }) as __esri.Graphic;\n      match?.setAttribute('selected', 1);\n      properties.current?.splice(properties.current?.indexOf(match), 1);\n      properties.current?.push(match);\n\n      feature.geometry = match?.geometry as __esri.Geometry;\n\n      view?.goTo(feature.geometry, { duration: 1000, easing: 'ease' });\n      featureRef.current = feature;\n\n      props.featureSelected(feature);\n      setInfoTabDisabled(false);\n      props.propertiesSelected(properties.current);\n\n      //featureRef.current = feature;\n      setSearchParams([feature]);\n\n      toggleTabs('info');\n      setSelectedTab('info');\n    }\n  };\n\n  const clear = () => {\n    setInfoTabDisabled(true);\n    featureRef.current = undefined;\n    props.featureSelected(undefined);\n    setFilter('OBJECTID IS NULL');\n    toggleTabs('list');\n    setSelectedTab('list');\n    props.propertiesSelected([]);\n    const graphics = view?.graphics.filter((graphic) => {\n      return graphic.getAttribute('type') === 'buffer';\n    });\n    if (graphics?.length) {\n      view?.graphics.removeMany(graphics);\n    }\n  };\n\n  useEffect(() => {\n    if (!loaded) {\n      const mapView = props.view as __esri.MapView;\n      mapViewLoaded(mapView);\n      document.querySelectorAll('calcite-tab-nav').forEach((tab) => {\n        tab.addEventListener('calciteTabChange', (event) => {\n          setReloadTable((event as any).detail.tab === 0 || (event as any).detail.tab === 'list');\n        });\n      });\n\n      //workaround to make calcite-tab used visibility instead of display for hiding/unhiding to handle FeatureTable\n      document.querySelectorAll('calcite-tab').forEach((tab) => {\n        const observer: MutationObserver = new MutationObserver((mutations) => {\n          if (mutations.length) {\n            const shadow = (mutations[0].target as HTMLElement)?.shadowRoot;\n            if (shadow) {\n              shadow.innerHTML +=\n                '<style>:host([active]) section { display: block !important; visibility: visible !important;} section {display: block !important; visiblity: hidden !important;}</style>';\n            }\n\n            observer.disconnect();\n          } else {\n            observer.disconnect();\n          }\n        });\n        tab.innerHTML =\n          '<style>:host([active]) {display: block !important; visibility: visible !important;} :host { display: block; visibility: hidden !important;} calcite-tab {display: block !important; z-index: 1; visibility: hidden !important;} calcite-tab[active] { z-index: 100; visibility: visible !important;;} </style>';\n        observer.observe(tab as Node, { attributes: true });\n      });\n      window.addEventListener('popstate', (e) => {\n        if (e.state?.pin === state.current?.pin) {\n          history.back();\n        } else {\n          if (e.state?.pin.length > 0) {\n            setWhere(`PIN_NUM in ('${decodeURIComponent(history.state?.pin.split(',').join(`','`))}')`);\n            setFilter(`PIN_NUM in ('${decodeURIComponent(history.state?.pin.split(',').join(`','`))}')`);\n          }\n        }\n        state.current = e.state;\n      });\n      const url = new URL(document.URL);\n      const pin = url.searchParams.get('pin');\n\n      if (pin) {\n        if (pin.length > 0) {\n          setWhere(`PIN_NUM in ('${decodeURIComponent(pin.split(',').join(`','`))}')`);\n          setFilter(`PIN_NUM in ('${decodeURIComponent(pin.split(',').join(`','`))}')`);\n        }\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    geometryChanged(view as __esri.MapView, layer as __esri.FeatureLayer, props.geometry)\n      .then((data) => {\n        if (props.geometry != undefined) {\n          setLoading(true);\n          setFilter(data.where);\n          properties.current = data.properties;\n          if (data.features.length === 1) {\n            const f = data.features[0] as __esri.Graphic;\n            f.layer = table as __esri.FeatureLayer;\n            f.popupTemplate = table?.popupTemplate as __esri.PopupTemplate;\n            const feature = data.features[0] as __esri.Graphic;\n            feature.geometry = data.properties?.find((prop: __esri.Graphic) => {\n              return prop.getAttribute('PIN_NUM') === feature.getAttribute('PIN_NUM');\n            })?.geometry;\n            featureRef.current = feature;\n            props.featureSelected(feature);\n            setInfoTabDisabled(false);\n            setSearchParams([feature]);\n\n            toggleTabs('info');\n            setSelectedTab('info');\n          } else {\n            setSearchParams([]);\n            setInfoTabDisabled(true);\n            featureRef.current = undefined;\n            toggleTabs('list');\n            setSelectedTab('list');\n          }\n          props.propertiesSelected(data.properties);\n        } else {\n          clear();\n        }\n      })\n      .catch(() => {\n        clear();\n      });\n  }, [props.geometry, props.propertiesSelected, props.featureSelected, props.selectedProperties]);\n  return (\n    <div className=\"panel\" id=\"propertyPanel\">\n      {loaded && (\n        <Suspense fallback={''}>\n          <PropertySearch\n            view={view}\n            condosTable={table}\n            addressTable={addressTable}\n            propertyLayer={layer}\n            where={where}\n            clear={clear}\n            searchComplete={searchComplete}\n          ></PropertySearch>\n        </Suspense>\n      )}\n\n      <calcite-tabs position=\"below\" layout=\"center\">\n        <calcite-tab-nav slot=\"tab-nav\">\n          <calcite-tab-title tab=\"list\" active ref={listTab}>\n            List\n          </calcite-tab-title>\n          <calcite-tab-title tab=\"info\" ref={infoTab} disabled={infoTabDisabled ? 'true' : null}>\n            Info\n          </calcite-tab-title>\n        </calcite-tab-nav>\n\n        <calcite-tab tab=\"list\">\n          {loaded && (\n            <Suspense fallback={''}>\n              <PropertyList\n                view={view}\n                layer={table}\n                filter={filter}\n                loading={loading}\n                reloadTable={reloadTable}\n                selectedTab={selectedTab}\n                featureSelected={tableFeatureSelected}\n              ></PropertyList>\n            </Suspense>\n          )}\n        </calcite-tab>\n\n        <calcite-tab tab=\"info\">\n          {loaded && (\n            <Suspense fallback={''}>\n              <PropertyInfo view={view} feature={featureRef.current} />\n            </Suspense>\n          )}\n        </calcite-tab>\n      </calcite-tabs>\n    </div>\n  );\n};\n\nexport default PropertyPanel;\n"],"sourceRoot":""}