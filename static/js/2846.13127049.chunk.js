"use strict";(globalThis.webpackChunkimaps=globalThis.webpackChunkimaps||[]).push([[2846],{61156:(e,n,t)=>{t.d(n,{A:()=>L,B:()=>z,C:()=>I,D:()=>V,E:()=>j,F:()=>k,G:()=>C,H:()=>H,I:()=>_,J:()=>q,K:()=>B,L:()=>O,M:()=>P,N:()=>M,a:()=>c,b:()=>l,c:()=>o,d:()=>f,e:()=>u,f:()=>a,g:()=>F,h:()=>s,i:()=>G,j:()=>g,k:()=>m,l:()=>w,m:()=>x,n:()=>y,o:()=>d,p:()=>b,q:()=>D,r:()=>h,s:()=>v,t:()=>p,u:()=>S,v:()=>R,w:()=>N,x:()=>T,y:()=>A,z:()=>E});var r=t(99058),i=t(40237);function u(e){return r.G.extendedSpatialReferenceInfo(e)}function o(e,n,t){return r.G.clip(i.N,e,n,t)}function c(e,n,t){return r.G.cut(i.N,e,n,t)}function l(e,n,t){return r.G.contains(i.N,e,n,t)}function f(e,n,t){return r.G.crosses(i.N,e,n,t)}function a(e,n,t,u){return r.G.distance(i.N,e,n,t,u)}function s(e,n,t){return r.G.equals(i.N,e,n,t)}function G(e,n,t){return r.G.intersects(i.N,e,n,t)}function p(e,n,t){return r.G.touches(i.N,e,n,t)}function N(e,n,t){return r.G.within(i.N,e,n,t)}function g(e,n,t){return r.G.disjoint(i.N,e,n,t)}function d(e,n,t){return r.G.overlaps(i.N,e,n,t)}function h(e,n,t,u){return r.G.relate(i.N,e,n,t,u)}function m(e,n){return r.G.isSimple(i.N,e,n)}function v(e,n){return r.G.simplify(i.N,e,n)}function w(e,n){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return r.G.convexHull(i.N,e,n,t)}function x(e,n,t){return r.G.difference(i.N,e,n,t)}function y(e,n,t){return r.G.symmetricDifference(i.N,e,n,t)}function b(e,n,t){return r.G.intersect(i.N,e,n,t)}function S(e,n){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return r.G.union(i.N,e,n,t)}function D(e,n,t,u,o,c,l){return r.G.offset(i.N,e,n,t,u,o,c,l)}function R(e,n,t,u){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return r.G.buffer(i.N,e,n,t,u,o)}function T(e,n,t,u,o,c,l){return r.G.geodesicBuffer(i.N,e,n,t,u,o,c,l)}function A(e,n,t){let u=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return r.G.nearestCoordinate(i.N,e,n,t,u)}function E(e,n,t){return r.G.nearestVertex(i.N,e,n,t)}function L(e,n,t,u,o){return r.G.nearestVertices(i.N,e,n,t,u,o)}function z(e,n,t,i){if(null==n||null==i)throw new Error("Illegal Argument Exception");const u=r.G.rotate(n,t,i);return u.spatialReference=e,u}function I(e,n,t){if(null==n||null==t)throw new Error("Illegal Argument Exception");const i=r.G.flipHorizontal(n,t);return i.spatialReference=e,i}function V(e,n,t){if(null==n||null==t)throw new Error("Illegal Argument Exception");const i=r.G.flipVertical(n,t);return i.spatialReference=e,i}function j(e,n,t,u,o){return r.G.generalize(i.N,e,n,t,u,o)}function k(e,n,t,u){return r.G.densify(i.N,e,n,t,u)}function C(e,n,t,u){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;return r.G.geodesicDensify(i.N,e,n,t,u,o)}function H(e,n,t){return r.G.planarArea(i.N,e,n,t)}function _(e,n,t){return r.G.planarLength(i.N,e,n,t)}function q(e,n,t,u){return r.G.geodesicArea(i.N,e,n,t,u)}function B(e,n,t,u){return r.G.geodesicLength(i.N,e,n,t,u)}function O(e,n,t){return null==n||null==t?[]:r.G.intersectLinesToPoints(i.N,e,n,t)}function P(e,n){r.G.changeDefaultSpatialReferenceTolerance(e,n)}function M(e){r.G.clearDefaultSpatialReferenceTolerance(e)}const F=Object.freeze(Object.defineProperty({__proto__:null,buffer:R,changeDefaultSpatialReferenceTolerance:P,clearDefaultSpatialReferenceTolerance:M,clip:o,contains:l,convexHull:w,crosses:f,cut:c,densify:k,difference:x,disjoint:g,distance:a,equals:s,extendedSpatialReferenceInfo:u,flipHorizontal:I,flipVertical:V,generalize:j,geodesicArea:q,geodesicBuffer:T,geodesicDensify:C,geodesicLength:B,intersect:b,intersectLinesToPoints:O,intersects:G,isSimple:m,nearestCoordinate:A,nearestVertex:E,nearestVertices:L,offset:D,overlaps:d,planarArea:H,planarLength:_,relate:h,rotate:z,simplify:v,symmetricDifference:y,touches:p,union:S,within:N},Symbol.toStringTag,{value:"Module"}))},92846:(e,n,t)=>{t.r(n),t.d(n,{executeGEOperation:()=>i});var r=t(61156);function i(e){return(0,r.g[e.operation])(...e.parameters)}}}]);
//# sourceMappingURL=2846.13127049.chunk.js.map