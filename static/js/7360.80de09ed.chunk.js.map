{"version":3,"file":"static/js/7360.80de09ed.chunk.js","mappings":"sRAcA,IAAIA,EACAC,EACAC,EACAC,EACAC,EA+BAC,EACAC,EACAC,EAEAC,EAEAC,EACAC,EArCAC,EAAuB,GACvBC,EAAa,IAAIC,EAAAA,EAAiB,CACpCC,MAAO,CAAC,IAAK,EAAG,EAAG,IACnBC,MAAO,QACPC,QAAS,CACPC,MAAO,EACPH,MAAO,CAAC,IAAK,EAAG,EAAG,MAGnBI,EAAa,IAAIC,EAAAA,EAAiB,CACpCF,MAAO,EACPH,MAAO,CAAC,IAAK,EAAG,EAAG,GACnBC,MAAO,QACPK,IAAK,QACLC,KAAM,UAEJC,EAAa,IAAIC,EAAAA,EAAW,CAC9BT,MAAO,CAAC,IAAK,EAAG,EAAG,GACnBU,UAAW,CAAC,IAAK,IAAK,IAAK,GAC3BC,SAAU,MACVC,KAAM,GACNC,QAAS,EACTC,QAAS,EACTC,KAAM,CAEJC,KAAM,GACNC,OAAQ,SACRC,OAAQ,UAcL,MA8CDC,EAAyB,CAACC,EAAsBC,EAAeC,KACnE,MAAMC,EAAW,IAAIC,EAAAA,EAAgB,CACnCH,OACAD,QACAK,sBAAsB,IAGxB,OADAF,EAASG,GAAG,SAAUC,GACfJ,CAAP,EAGII,EAAcC,IACF,aAAZA,EAAEC,QAC4B,YAA5BD,EAAEE,QAAQC,SAASC,OACrBJ,EAAEE,QAAQG,OAASnC,EACnBR,EAAYF,aAAa8C,IAAIN,EAAEE,SAC/BpC,EAAuByC,OAAOP,EAAEQ,OAEF,aAA5BR,EAAEE,QAAQC,SAASC,OACrBJ,EAAEE,QAAQG,OAAS7B,EACnBd,EAAYH,cAAc+C,IAAIN,EAAEE,SAChCrC,EAAwB0C,OAAOP,EAAEQ,OAEd,SAAjBvC,IACF+B,EAAEE,QAAQG,OAASzB,EACnBlB,EAAYD,UAAU6C,IAAIN,EAAEE,SAC5BnC,EAAoBwC,OAAO,UAER,UAAjBtC,IACF+B,EAAEE,QAAQG,OAAS1C,EACnBD,EAAYJ,WAAWgD,IAAIN,EAAEE,SAC7BtC,EAAqB2C,OAAO,UAE/B,EAeUE,EAAe,CAACD,EAAcE,EAA0BC,KAZtC,MAC7B,IACE/C,EAAqBiC,sBAAuB,EAC5C/B,EAAuB+B,sBAAuB,EAC9ChC,EAAwBgC,sBAAuB,EAC/C9B,EAAoB8B,sBAAuB,CAG5C,CAFC,MAAOe,GAER,GAMDC,GACA5C,EAAeuC,EACaG,EAA5BH,IAASE,EAAuC,GAA0BF,GACjD,KAArBE,GACFI,IAEE,CAAC,UAAW,YAAa,UAAUC,SAASP,IAC9C1C,EAAuByC,OAAOC,GAE5B,CAAC,YAAYO,SAASP,IACxB3C,EAAwB0C,OAAOC,GAEpB,SAATA,GACF3C,EAAwB0C,OAAO,SAEpB,UAATC,GACF3C,EAAwB0C,OAAO,QAChC,EAEH,IAAIS,GAAwB,EACrB,MAAMC,EAAuBC,MAAOC,EAAkBC,EAAqB7C,KAChF,MAAM8C,EAAUC,SAASC,eAAe,mBACpCF,IAAYL,IACd9C,EAAWE,MAAQ+C,EACnBjD,EAAWI,QAAQF,MAAQgD,EAC3BlD,EAAWI,QAAQC,MAAQA,EACvBT,IACFA,EAAuB0D,iBAAmBtD,EACtCR,EAAYF,cACdiE,EAA+B/D,EAAYF,aAAcU,EAAYJ,IAGzEkD,GAAwB,EACxBK,EAAQK,UAAY,SACdC,EAAAA,GAA8BzD,EAAY,CAC9C0D,KAAMP,EACNjC,KAAM,KAER4B,GAAwB,EACzB,EAGGS,EAAiC,CAACjC,EAAsBa,EAAuBwB,KACnF,GAAIA,EAAGC,eAAeC,OAAQ,CAC5B,MAAM7B,EAAU2B,EAAGC,eAAeE,UAAU,GAC5CxC,EAAMyC,OAAO/B,GACbA,EAAQG,OAASA,EACjB,MAAM6B,EAAQhC,EAAQgC,QACtB1C,EAAMc,IAAI4B,GAEVC,YAAW,KACTN,EAAGO,SACHP,EAAGQ,OAAOH,EAAV,GAEH,GAGUI,EAAqBpB,MAAOb,EAAajC,EAAcgB,KAClE,MAAMmD,QAAYC,EAAAA,EAAAA,SAAS,GAAEnC,EAAOoC,MAAMpC,EAAOqC,OAAOC,QAAQ,IAAK,OACrEhF,EAAc,IAAIiF,EAAAA,EAAU,CAC1BC,KAAM,CACJzC,KAAM,qBACNC,OAAM,OAAEkC,QAAF,IAAEA,OAAF,EAAEA,EAAKM,QAGjBC,EAAAA,GAAmCnF,EAAaS,GAChD0E,EAAAA,GAAgCnF,EAAayB,GACzC1B,EAAYJ,YACdmE,EAA+B/D,EAAYJ,WAAYK,EAAaC,GAEtEA,EAAqBD,YAAcA,EACnC,MAAM0D,EAAUC,SAASC,eAAe,gBACpCF,IACFA,EAAQK,UAAY,GACpBC,EAAAA,GAA8BhE,EAAa,CACzCiE,KAAMP,EACNjC,KAAMA,IAET,EAGU2D,EAAwB,CAACC,EAAkBzE,KACtDC,EAAWJ,MAAQ4E,EACnBxE,EAAWD,MAAQA,EACfV,IACFA,EAAwBoF,eAAiBzE,EAEzCX,EAAwBiE,eAAeoB,SAAShD,IAC9CA,EAAQG,OAAS7B,CAAjB,IAEEd,EAAYH,eACdkE,EAA+B/D,EAAYH,cAAeiB,EAAYX,IAI1E,MAAMwD,EAAUC,SAASC,eAAe,gBACpCF,IACFA,EAAQK,UAAY,GACpBC,EAAAA,GAA8BnD,EAAY,CACxCoD,KAAMP,EACNjC,KAAMb,IAET,EAGU4E,EAAoB,CAC/BC,EACAC,EACAtE,EACAD,EACAwE,EACAC,KAEA3E,EAAWR,MAAQiF,EACnBzE,EAAWO,KAAKC,KAAOgE,EACvBxE,EAAWE,UAAYA,EACvBF,EAAWG,SAAWuE,EAAWvE,EAAW,EAC5CH,EAAWI,KAAOuE,EAClBxF,EAAoBJ,YAAciB,EAC9BlB,EAAYD,WACdgE,EAA+B/D,EAAYD,UAAWmB,EAAYb,EACnE,EAGU+C,EAAe,KAC1BlD,EAAqBwE,SACrBvE,EAAwBuE,SACxBtE,EAAuBsE,SACvBrE,EAAoBqE,SACpBxE,EAAqBiC,sBAAuB,EAC5C/B,EAAuB+B,sBAAuB,EAC9ChC,EAAwBgC,sBAAuB,EAC/C9B,EAAoB8B,sBAAuB,CAA3C,E,0BCzQF,SAAS2D,EAAYC,GACnB,MAAMC,GAAUC,EAAAA,EAAAA,QAAkC,MAC5CC,GAASD,EAAAA,EAAAA,QAAsC,OAC9CvF,EAAOyF,IAAYC,EAAAA,EAAAA,aACnBC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAc,GAQtD,OAPAG,EAAAA,EAAAA,YAAU,MACH7F,GAASqF,EAAMrF,QAClByF,EAAS,IAAIK,EAAAA,EAAMT,EAAMrF,QACzB4F,EAAuC,KAAtB,EAAIP,EAAMrF,MAAM,KAClC,GACA,CAACqF,EAAMrF,SAGR,iBAAK+F,GAAIV,EAAMU,GAAf,WACE,UAAC,KAAD,WACGV,EAAMW,MADT,UAEE,SAAC,KAAD,CACED,GAAK,GAAEV,EAAMU,oBACb5F,MAAM,OACN8F,QAAQ,SACRC,KAAK,UACLC,WAAW,UALb,UAOE,SAAC,KAAD,CACEnG,MAAK,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAOoG,gBAIpB,SAAC,KAAD,CACEjC,IAAKmB,EACLe,mBAAmB,QACnBC,UAAU,YACVN,MAAO,GACPO,iBAAmB,GAAElB,EAAMU,oBAL7B,UAOE,UAAC,KAAD,CAAcS,QAAQ,QAAtB,WACE,SAAC,KAAD,CACEC,KAAK,IACL7F,KAAK,GACL8F,KAAK,qBACLC,QAAS,KACHrB,EAAQsB,UACVtB,EAAQsB,QAAQC,MAAQvB,EAAQsB,QAAQC,MAE1C,MAAMC,EAAI,IAAIhB,EAAAA,EAAM9F,GACpB8G,EAAEC,EAAI,EAAIpB,EAAe,IACzBN,EAAM2B,SAASF,EAAf,KAGJ,SAAC,KAAD,CACE3C,IAAKqB,EACLyB,WAAS,EACTC,SAAO,EACPC,cAAY,EACZC,MAAOpH,EAAQA,EAAMoG,QAAU,UAC/BiB,0BAA4BzF,GAC1B6D,EAAS,IAAIK,EAAAA,EAAMlE,EAAE0F,OAAOF,gBAgBlC/B,EAAMkC,mBACN,UAAC,KAAD,WACGlC,EAAMW,MADT,iBAEE,iBAAKwB,UAAU,eAAf,WACE,SAAC,KAAD,CACEC,IAAK,IACLC,IAAK,EACLN,MAAOzB,EACPgC,qBAAuB/F,IACrB,IAAIwF,EAAgBxF,EAAE0F,OAAOF,MACzBA,EAAQ,MACVA,EAAQ,KAENA,EAAQ,IACVA,EAAQ,GAEVxB,EAAgBwB,GAChB,MAAMN,EAAI,IAAIhB,EAAAA,EAAM9F,GACpB8G,EAAEC,EAAI,EAAIpB,EAAe,IACzBN,EAAM2B,SAASF,EAAf,KAGJ,SAAC,IAAD,CACEW,IAAK,IACLC,IAAK,EACL1F,KAAK,SACL4F,iBAAiB,OACjBC,WAAW,IACXT,MAAOzB,EACPmC,oBAAsBlG,IACpB,IAAIwF,EAAgBW,SAASnG,EAAE0F,OAAOF,OAClCA,EAAQ,MACVA,EAAQ,KAENA,EAAQ,IACVA,EAAQ,GAGVxB,EAAgBwB,GAChB,MAAMN,EAAI,IAAIhB,EAAAA,EAAM9F,GACpB8G,EAAEC,EAAI,EAAIpB,EAAe,IACzBN,EAAM2B,SAASF,EAAf,YAQf,CAED,QAAekB,EAAAA,KAAW5C,GCnI1B,SAAS6C,EAAW5C,GAClB,MAAO+B,EAAOc,IAAYxC,EAAAA,EAAAA,YAI1B,OAHAG,EAAAA,EAAAA,YAAU,KACRqC,EAAS7C,EAAM+B,MAAf,GACC,CAAC/B,EAAM+B,SAER,UAAC,KAAD,WACG/B,EAAMW,OACP,iBAAKwB,UAAU,eAAf,WACE,SAAC,KAAD,CACEC,IAAKpC,EAAMoC,IACXC,IAAKrC,EAAMqC,IACXN,MAAOA,EACPO,qBAAuB/F,IACrBsG,EAAStG,EAAE0F,OAAOF,OAClB/B,EAAM8C,QAAQvG,EAAE0F,OAAOF,MAAvB,KAGJ,SAAC,IAAD,CACEpF,KAAK,SACL4F,iBAAiB,OACjBF,IAAKrC,EAAMqC,IACXD,IAAKpC,EAAMoC,IACXL,MAAOA,EACPS,WAAW,KACXC,oBAAsBlG,IACpBsG,EAASE,WAAWxG,EAAE0F,OAAOF,QAC7B/B,EAAM8C,QAAQC,WAAWxG,EAAE0F,OAAOF,OAAlC,SAMX,CACD,QAAeY,EAAAA,KAAWC,GCvC1B,SAASI,EAAYhD,GACnB,MAAOT,EAAW0D,IAAgB5C,EAAAA,EAAAA,UAAgB,IAAII,EAAAA,EAAM,CAAC,IAAK,EAAG,EAAG,MACjE3F,EAAOoI,IAAY7C,EAAAA,EAAAA,UAAS,GAMnC,OALAG,EAAAA,EAAAA,YAAU,KACJjB,GAAazE,GACfkF,EAAMV,sBAAsBC,EAAWzE,EACxC,GACA,CAACyE,EAAWzE,KAEb,iBAAK4F,GAAG,eAAR,WACE,gBAAKA,GAAG,eAAeyB,UAAU,aAEjC,SAAC,EAAD,CACEzB,GAAG,OACHC,MAAM,OACNhG,MAAO4E,EAAU4D,SACjBxB,SAAWF,IACTwB,EAAaxB,GACbzB,EAAMV,sBAAsBmC,EAAG3G,EAA/B,KAGJ,SAAC,EAAD,CACEiH,MAAOjH,EACPuH,IAAK,GACLD,IAAK,GACLzB,MAAM,QACNmC,QAAUnH,IACRuH,EAASvH,GACTqE,EAAMV,sBAAsBC,EAAWzE,EAAvC,MAKT,CAED,QAAe6H,EAAAA,KAAWK,GCrC1B,SAASI,EAAepD,GACtB,MAAOtC,EAAW2F,IAAgBhD,EAAAA,EAAAA,UAChC,IAAII,EAAAA,EAAM,CAAC,IAAK,EAAG,EAAG,OAEjB9C,EAAc2F,IAAmBjD,EAAAA,EAAAA,UACtC,IAAII,EAAAA,EAAM,CAAC,IAAK,EAAG,EAAG,MAEjB3F,EAAOoI,IAAY7C,EAAAA,EAAAA,UAAS,GAMnC,OALAG,EAAAA,EAAAA,YAAU,KACJ9C,GAAaC,GAAgB7C,GAC/BkF,EAAMxC,qBAAqBE,EAAWC,EAAc7C,EACrD,GACA,CAAC4C,EAAWC,EAAc7C,KAE3B,iBAAK4F,GAAG,kBAAR,WACE,gBAAKA,GAAG,kBAAkByB,UAAU,aACpC,SAAC,EAAD,CACEzB,GAAG,eACH/F,MAAO+C,EAAUyF,SACjBxC,MAAM,OACNgB,SAAWF,IACT4B,EAAa5B,GACbzB,EAAMxC,qBAAqBiE,EAAG9D,EAAc7C,EAA5C,KAGJ,SAAC,EAAD,CACE4F,GAAG,kBACH/F,MAAOgD,EAAawF,SACpBxC,MAAM,UACNgB,SAAWF,IACT6B,EAAgB7B,GAChBzB,EAAMxC,qBAAqBE,EAAW+D,EAAG3G,EAAzC,KAGJ,SAAC,EAAD,CACE6F,MAAM,gBACN0B,IAAK,GACLD,IAAK,GACLL,MAAOjH,EACPgI,QAAUnH,IACRuH,EAASvH,GACTqE,EAAMxC,qBAAqBE,EAAWC,EAAc7C,EAApD,MAKT,CAED,QAAe6H,EAAAA,KAAWS,GC5C1B,SAASG,EAAYvD,GACnB,MAAOJ,EAAW4D,IAAgBnD,EAAAA,EAAAA,UAAgB,IAAII,EAAAA,EAAM,CAAC,IAAK,EAAG,EAAG,MACjEd,EAAU8D,IAAepD,EAAAA,EAAAA,UAAS,KAClCR,EAAU6D,IAAerD,EAAAA,EAAAA,WAAS,IAClC/E,EAAUqI,IAAetD,EAAAA,EAAAA,UAAS,IAClChF,EAAWuI,IAAgBvD,EAAAA,EAAAA,UAChC,IAAII,EAAAA,EAAM,CAAC,IAAK,IAAK,IAAK,MAErBX,EAAa+D,IAAkBxD,EAAAA,EAAAA,UAAS,IAE/C,OACE,iBAAKK,GAAG,eAAR,WACE,UAAC,KAAD,mBAEE,SAAC,IAAD,CACE/D,KAAK,WACLmH,MAAM,IACN/B,MAAOjC,EACP2C,oBAAsBlG,IACpBsH,EAAetH,EAAE0F,OAAOF,OACxBgC,uBAAsB,KACpB/D,EAAMN,kBACJC,EACAC,EACAtE,EACAD,EACAwE,EACAtD,EAAE0F,OAAOF,MANX,GADF,EAWFiC,qBAAuBzH,YAG3B,SAAC,EAAD,CACEmE,GAAG,OACHC,MAAM,OACNhG,MAAOiF,EAAUuD,SACjBjB,kBAAgB,EAChBP,SAAWF,IACT+B,EAAa/B,GACbzB,EAAMN,kBACJC,EACA8B,EACAnG,EACAD,EACAwE,EACAC,EANF,KAUJ,UAAC,KAAD,wBAEE,SAAC,IAAD,CACEnD,KAAK,SACL0F,IAAK,EACLD,IAAK,IACLL,MAAOpC,EAASsE,WAChBxB,oBAAsBlG,IACpBkH,EAAYV,WAAWxG,EAAE0F,OAAOF,QAChC/B,EAAMN,kBACJC,EACAC,EACAtE,EACAD,EACAwE,EACAC,EANF,QAWN,UAAC,KAAD,CAAcoE,OAAO,SAArB,kBAEE,SAAC,KAAD,CACEC,UAAStE,QAAkBuE,EAC3BC,sBAAwB9H,IACtBmH,EAAYnH,EAAE0F,OAAOkC,SACrBnE,EAAMN,kBACJC,EACAC,EACAtE,EACAD,EACAwE,EACAC,EANF,QAWN,iBAAKY,GAAG,OAAO4D,QAAQzE,QAAWuE,EAAlC,WACE,SAAC,EAAD,CACE1D,GAAG,OACHC,MAAM,GACNhG,MAAOU,EAAU8H,SACjBjB,kBAAgB,EAChBP,SAAWF,IACTmC,EAAanC,GACbzB,EAAMN,kBACJC,EACAC,EACAtE,EACAmG,EACA5B,EACAC,EANF,KAUJ,UAAC,KAAD,mBAEE,SAAC,IAAD,CACEnD,KAAK,SACL0F,IAAK,EACLD,IAAK,GACLL,MAAOzG,EAAS2I,WAChBxB,oBAAsBlG,IACpBoH,EAAYZ,WAAWxG,EAAE0F,OAAOF,QAChC/B,EAAMN,kBACJC,EACAC,EACAtE,EACAD,EACAwE,EACAC,EANF,YAcb,CACD,QAAe6C,EAAAA,KAAWY,G,2BCtI1B,SAASgB,EAAWvE,GAClB,OACE,iBAAKU,GAAG,cAAR,WACE,gBAAKA,GAAG,eAAeyB,UAAU,aACjC,SAAC,KAAD,CAAcqC,UAAU,QAAQV,MAAM,IAAII,OAAO,UAAjD,UACE,mBACE/B,UAAU,wBACVxF,KAAK,SACL2E,QAAS,KACPtB,EAAMyE,eAAN,EAJJ,UAOE,iBAAKtC,UAAU,YAAf,UACGnC,EAAMpD,SACL,gBAAKuF,UAAU,cAAf,UACE,gBACEuC,IAAM,GACJ1E,EAAMpD,OAAOoC,MACZgB,EAAMpD,OAAO+H,UAAUC,KAAK1F,QAAQ,IAAK,MAC5C2F,IAAK7E,EAAMpD,OAAOkI,MAClBhK,MAAO,GACPiK,OAAQ,QAKd,gBAAK5C,UAAU,aAAf,SAA6BnC,EAAMpD,OAAOkI,SAC1C,SAAC,KAAD,CAAa1D,KAAK,2BAM7B,CAED,QAAeuB,EAAAA,KAAW4B,GC9B1B,SAASS,GAAmBhF,GAC1B,MAAOiF,EAASC,IAAc7E,EAAAA,EAAAA,UAAgB,IAO9C,OANAG,EAAAA,EAAAA,YAAU,KACJyE,GAAWjF,EAAMiF,SACnBC,EAAWlF,EAAMiF,QAClB,GACA,KAGD,gBAAKvE,GAAG,iBAAR,UACE,UAAC,KAAD,YACE,SAAC,KAAD,KACA,SAAC,KAAD,CACES,QAAQ,gBACRgE,sBAAuB,KACrBnF,EAAMoF,aAAN,EAHJ,UAME,SAAC,KAAD,CAAcjE,QAAS,GAAvB,UACE,gBAAKgB,UAAU,UAAf,SACG8C,GACCA,EAAQI,KAAI,CAACzI,EAAa0I,KAEtB,gBACEhE,QAAS,KACPtB,EAAMuF,aAAa3I,GACnBoD,EAAMoF,aAAN,EAEFjD,UAAU,OAEV0C,IAAKjI,EAAOkI,MACZJ,IAAM,GAAE9H,EAAOoC,MAAMpC,EAAO+H,UAAUC,KAAK1F,QACzC,IACA,OAJI,QAAOoG,iBAelC,CAED,SAAe3C,EAAAA,KAAWqC,ICxC1B,SAASQ,GAAaxF,GACpB,MAAOiF,EAASC,IAAc7E,EAAAA,EAAAA,UAAgB,KACvCzD,EAAQ6I,IAAapF,EAAAA,EAAAA,aACrBqF,EAAWC,IAAgBtF,EAAAA,EAAAA,UAAS,IAGrCuF,EAAM,CACV,mCACA,qCAGKC,EAAYC,IAAiBzF,EAAAA,EAAAA,UAAS,SACtC0F,EAAYC,IAAiB3F,EAAAA,EAAAA,UAClC,IAAII,EAAAA,EAAM,CAAC,IAAK,EAAG,EAAG,KAYxB,OATAD,EAAAA,EAAAA,YAAU,KR6Qc,EAACoF,EAAe5G,IACjC,IAAIiH,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAA2B,GAEjCR,EAAInG,SAASiB,IACX,MAAM9D,EAAyB,IAAIyJ,EAAAA,EAAe,CAChDC,SAAW,GAAEtH,KAAO0B,SACpB6F,KAAM,SAERH,EAASI,MAAKzH,EAAAA,EAAAA,SAAQnC,EAAO0J,UAA7B,IAEEF,EAAS9H,OAEb,MAAMmI,EAAe,GAErBR,QAAQS,IAAIN,GAAUO,MAAMC,IAC1BA,EAAQnH,SAASoH,IACfA,EAAOzH,KAAKqH,MAAMhH,SAASqH,IACzBA,EAAK9H,IAAM6H,EAAO7H,IAAIE,QAAQ,OAAQ,IACtCuH,EAAMD,KAAKM,EAAX,GAFF,IAOFZ,EAAQO,EAAR,GATF,IQ3RAM,CAAWnB,EAZD,sDAYWe,MAAMF,IACzBvB,EAAWuB,GACPA,EAAMnI,SACRmH,EAAUgB,EAAM,IAChBzG,EAAMnB,mBAAmB4H,EAAM,GAAIV,EAAYL,GAChD,GALH,GAOC,KAED,gBAAKhF,GAAG,gBAAR,SACGuE,EAAQ3G,SACP,2BACkB,SAAfuH,IACC,UAAC,KAAD,YACE,SAAC,EAAD,CACEpB,cAAe,IAAMqB,EAAc,QACnClJ,OAAQA,KAEV,SAAC,EAAD,CACE8D,GAAG,QACHC,MAAM,QACNhG,MAAOoL,EAAW5C,SAClBxB,SAAWF,IACTuE,EAAcvE,GACdzB,EAAMnB,mBAAmBjC,EAAQ6E,EAAGiE,EAApC,KAGJ,UAAC,KAAD,mBAEE,SAAC,IAAD,CACE/I,KAAK,SACL0F,IAAK,EACLD,IAAK,GACLL,MAAO2D,EAAUzB,WACjBD,qBAAuBzH,IACrBoJ,EAAa5C,WAAWxG,EAAE0F,OAAOF,QACjC/B,EAAMnB,mBACJjC,EACAmJ,EACAhD,WAAWxG,EAAE0F,OAAOF,OAHtB,UAUM,SAAf8D,IACC,SAAC,GAAD,CACEN,aAAenE,IACbqE,EAAUrE,GACVpB,EAAMnB,mBAAmBuC,EAAM2E,EAAYL,EAA3C,EAEFN,YAAa,IAAMU,EAAc,QACjCb,QAASA,QAOtB,CAED,SAAetC,EAAAA,KAAW6C,I,eCjGnB,MAAMwB,GAAO,CAClBlC,MAAO,cACPkC,KAAM,CACJ,CACElC,MAAO,iBACPvJ,KAAM,mICmFZ,GA/EmByE,IACjB,MAAMiH,GAAS/G,EAAAA,EAAAA,SAAO,IACfjD,EAAkBC,IAAuBmD,EAAAA,EAAAA,UAAS,KAClD6G,EAAUC,IAAe9G,EAAAA,EAAAA,WAAS,IAClC+G,EAAkBC,IAAuBhH,EAAAA,EAAAA,UAC9C,KAGFG,EAAAA,EAAAA,YAAU,KACHyG,EAAO1F,SV0CyB9D,OACvCzB,EACAkB,EACAkK,EACAC,KAEApN,EAAc,IAAIqN,EAAAA,QAAc,CAC9BC,SAAU,OACV7G,GAAI,gBAEN1E,EAAKqJ,IAAIxI,IAAI5C,GACb,MAAMuN,QAAkBxL,EAAKyL,cAAcxN,GAC3CM,EAAkBiN,EAClB3N,EAAaI,EAAYJ,WACzBC,EAAgBG,EAAYH,cAC5BC,EAAeE,EAAYF,aAE3BC,EAAYC,EAAYD,UAGxBG,EAAuB2B,EAAuBjC,EAAYmC,GAAM,GAChE5B,EAA0B0B,EAAuBhC,EAAekC,GAAM,GACtE3B,EAAyByB,EAAuB/B,EAAciC,GAAM,GACpE3B,EAAuB0D,iBAAmBtD,EACzCL,EAAgCsN,iBAAmB3M,EAEpDT,EAAsBwB,EAAuB9B,EAAWgC,GAAM,GAE3C,CAAC7B,EAAsBC,EAAyBC,EAAwBC,GAChFmF,SAASkI,IACT,OAATA,QAAS,IAATA,GAAAA,EAAWtL,GAAG,UAAWE,IACP,WAAZA,EAAEC,OAA+C,OAAzBmL,EAAUC,YACpC1K,EAAoB,SAIrB,IAEM,OAATyK,QAAS,IAATA,GAAAA,EAAWtL,GAAG,UAAWE,IACP,UAAZA,EAAEC,OAAiC,WAAZD,EAAEC,OAC3B6K,EAAoB,IAAI9K,EAAEsL,UAC3B,GAHH,GATF,EUtEIC,CACE9H,EAAMhE,KACNkB,EACAkK,EACAC,EAEH,GACA,KACH7G,EAAAA,EAAAA,YAAU,KACR2G,EAAYnH,EAAMkH,UACblH,EAAMkH,SAORlH,EAAMhE,KAAwB+L,MAAMC,iBAAkB,GANvDhI,EAAMiI,gBACN5K,IACAH,EAAoB,IACpBmK,EAAoB,IAKrB,GACA,CAACrH,EAAMkH,WACV,MAAMe,GAAgBC,EAAAA,EAAAA,cAAY,KAChClI,EAAMiI,gBACN5K,IACAH,EAAoB,IACpBmK,EAAoB,GAApB,GAGC,IACGc,GAAcD,EAAAA,EAAAA,cAAa3L,IAC/ByD,EAAMoI,SAASpB,GAAf,GACC,IA0BH,MAAO,CACL/J,mBACAC,sBACAkK,mBACAC,sBACAH,WACAe,gBACAE,cACAE,kBAjCwB,CACxBjB,EACAkB,KAEA,MAAMC,EAAgBnB,EAAiB/B,KAAK5I,IAC1C,IAAIE,EAAeF,EAAQC,SAASC,KAIpC,MAH4B,SAAxBF,EAAQG,OAAOD,OACjBA,EAAO,QAEFA,CAAP,IAEI6L,EAAcD,EAAcE,QAAO,CAACC,EAAGC,IACpCJ,EAAcK,QAAQF,KAAOC,IAEtC,QACEH,EAAYlK,OAAS,GACrBkK,EAAYlK,OAAS,GACO,IAA5B8I,EAAiB9I,UAIQ,IAAvBkK,EAAYlK,QAAgBkK,EAAY,KAAOF,QAAnD,EAEC,EAEH,ECjDF,SAASO,GAAO7I,GACd,MAAM,iBACJ/C,EADI,oBAEJC,EAFI,iBAGJkK,EAHI,oBAIJC,EAJI,SAKJH,EALI,cAMJe,EANI,YAOJE,EAPI,kBAQJE,GACES,GAAU9I,GACd,OACE,UAAC,KAAD,CACEU,GAAG,eACHS,QAAQ,SACR,aAAW,SACXmD,QAAS4C,EACT6B,QAAS7B,QAAkB9C,EAC3B4E,UAAQ,EACRC,oBAAqBhB,EAPvB,WASE,SAAC,KAAD,CACEvH,GAAG,MACHU,KAAK,YACL7F,KAAK,OACL8F,KAAK,qBACLC,QAAS6G,KAEX,SAAC,KAAD,CACEzH,GAAG,eACHU,KAAK,aACL7F,KAAK,GACL8F,KAAK,qBACLC,QAAS4H,GAAAA,MAEX,SAAC,KAAD,CAAgBC,cAAY,EAACxI,MAAM,WAAWO,iBAAiB,MAA/D,uBAGA,SAAC,KAAD,CACEiI,cAAY,EACZxI,MAAM,WACNO,iBAAiB,eAHnB,uBAOA,iBAAKR,GAAG,eAAR,WACE,iBAAKyB,UAAU,SAAf,WACE,UAAC,KAAD,CAAoB+B,OAAO,aAA3B,WACE,SAAC,KAAD,CACExD,GAAG,QACH0I,OAA6B,UAArBnM,QAAsCmH,EAC9ChD,KAAK,MACL7F,KAAM,GACN+F,QAAS,IACPtE,EAAa,QAASC,EAAkBC,MAG5C,SAAC,KAAD,CAAgBiM,cAAY,EAACxI,MAAM,QAAQO,iBAAiB,QAA5D,oBAIA,SAAC,KAAD,CACER,GAAG,OACH0I,OAA6B,aAArBnM,QAAyCmH,EACjDhD,KAAK,OACL7F,KAAM,GACN+F,QAAS,IACPtE,EAAa,WAAYC,EAAkBC,MAG/C,SAAC,KAAD,CAAgBiM,cAAY,EAACxI,MAAM,OAAOO,iBAAiB,OAA3D,mBAGA,SAAC,KAAD,CACER,GAAG,UACH0I,OAA6B,YAArBnM,QAAwCmH,EAChDhD,KAAK,UACL7F,KAAM,GACN+F,QAAS,IACPtE,EAAa,UAAWC,EAAkBC,MAG9C,SAAC,KAAD,CACEiM,cAAY,EACZxI,MAAM,UACNO,iBAAiB,UAHnB,sBAOA,SAAC,KAAD,CACER,GAAG,YACH0I,OAA6B,cAArBnM,QAA0CmH,EAClDhD,KAAK,YACL7F,KAAM,GACN+F,QAAS,IACPtE,EAAa,YAAaC,EAAkBC,MAGhD,SAAC,KAAD,CACEiM,cAAY,EACZxI,MAAM,YACNO,iBAAiB,YAHnB,wBAOA,SAAC,KAAD,CACER,GAAG,SACH0I,OAA6B,WAArBnM,QAAuCmH,EAC/ChD,KAAK,SACL7F,KAAM,GACN+F,QAAS,IACPtE,EAAa,SAAUC,EAAkBC,MAG7C,SAAC,KAAD,CACEiM,cAAY,EACZxI,MAAM,SACNO,iBAAiB,SAHnB,qBAOA,SAAC,KAAD,CACER,GAAG,OACH0I,OAA6B,SAArBnM,QAAqCmH,EAC7ChD,KAAK,OACL7F,KAAM,GACN+F,QAAS,IACPtE,EAAa,OAAQC,EAAkBC,MAG3C,SAAC,KAAD,CAAgBiM,cAAY,EAACxI,MAAM,OAAOO,iBAAiB,OAA3D,sBAIF,UAAC,KAAD,CAAoBgD,OAAO,aAA3B,WACE,SAAC,KAAD,CACExD,GAAG,eACHU,KAAK,SACL7F,KAAM,GACN6N,OAA6B,WAArBnM,QAAuCmH,EAC/C9C,QAAS,KXsKrBnH,EAAqBwE,SACrBtE,EAAuBsE,SACvBvE,EAAwBuE,SACxBrE,EAAoBqE,SWvKN3B,EAAa,SAAUC,EAAkBC,GACzCwB,YAAW,KACRsB,EAAMhE,KAAwB+L,MAAMC,iBAAkB,CAAvD,GACC,IAFH,KAKJ,SAAC,KAAD,CACEmB,cAAY,EACZxI,MAAM,gBACNO,iBAAiB,eAHnB,4BAOA,SAAC,KAAD,CACER,GAAG,cACHU,KAAK,QACL7F,KAAM,GACN+F,QAAS,IXwGI,EAACpE,EAA+BmK,KACzDnK,EAAoB,IACpBmK,EAAoB,IACpBlN,EAAqBwE,SACrBtE,EAAuBsE,SACvBvE,EAAwBuE,SACxBrE,EAAoBqE,SACpB1E,EAAYF,aAAa8N,SAASwB,YAClCpP,EAAYJ,WAAWgO,SAASwB,YAChCpP,EAAYH,cAAc+N,SAASwB,YACnCpP,EAAYD,UAAU6N,SAASwB,WAA/B,EWjHcC,CAAYpM,EAAqBmK,MAGrC,SAAC,KAAD,CACE8B,cAAY,EACZxI,MAAM,iBACNO,iBAAiB,cAHnB,mCASJ,gBACER,GAAG,gBACHyB,UAAU,SACVmC,SACuB,UAArBrH,GACCoL,EAAkBjB,EAAkB,UACd,WAArBnK,SACEmH,EAPR,UAWE,SAAC,GAAD,CAAcvF,mBAAoBA,OAEpC,gBACE6B,GAAG,eACHyB,UAAU,SACVmC,SACuB,aAArBrH,GACCoL,EAAkBjB,EAAkB,aACd,WAArBnK,SACEmH,EAPR,UAWE,SAAC,EAAD,CACE9E,sBAAuBA,OAG3B,gBACEoB,GAAG,kBACHyB,UAAU,SACVmC,SACE,CAAC,UAAW,YAAa,UAAUhH,SAASL,IAC3CoL,EAAkBjB,EAAkB,YACd,WAArBnK,SACEmH,EAPR,UAWE,SAAC,EAAD,CACE5G,qBAAsBA,OAG1B,gBACEkD,GAAG,eACHyB,UAAU,SACVmC,SACuB,SAArBrH,GACCoL,EAAkBjB,EAAkB,SACd,WAArBnK,SACEmH,EAPR,UAWE,SAAC,EAAD,CAAa1E,kBAAmBA,MAEjC0H,EAAiB9I,OAAS,IACzB,UAAC,KAAD,CACEgD,QAAS,IXkFiB,EAAC8F,EAA6BC,KAClExN,EAAW0P,WAAWnC,GACtBrN,EAAawP,WAAWnC,GACxBtN,EAAcyP,WAAWnC,GACzBpN,EAAUuP,WAAWnC,GACrBrD,uBAAsB,KACpBsD,GAAqB9F,GACZ,IADT,GADF,EWtFYiI,CAAuBpC,EAAkBC,GAE3C7C,UAAU,SACV3D,KAAK,SACLC,WAAW,cACX,WAAS,QAPX,UASGsG,EAAiB9I,OAAQ,IACzB8I,EAAiB9I,OAAS,EAAI,WAAa,kBAMvD,CAED,SAAeqE,EAAAA,KAAWkG,G,mbC9QgzD,SAASY,EAAElN,GAAG,MAAM,WAAWA,EAAEmN,uBAAuBnN,EAAEoN,OAAOC,MAAMrN,GAAG,MAAMA,EAAEsN,gBAAgBC,kBAAkBC,EAAExN,IAAK,UAASwN,EAAT,GAA4C,IAAhCF,gBAAgBtN,EAAEyN,WAAWtB,GAAG,EAAC,MAAMuB,EAAE1N,EAAE+L,cAAcI,EAAEJ,aAAa,OAAO4B,EAAEC,MAAMzB,GAAGuB,IAAIvB,EAAE0B,kBAAkB7N,EAAE8N,aAAaC,UAAU1N,QAAQD,OAAO+L,EAAE6B,kBAAkB5N,MAAO,UAAS6N,IAAI,OAAO,IAAIC,EAAAA,EAAE,CAACC,MAAM,IAAIC,MAAM,GAAGC,KAAK,IAAIC,KAAK,IAAK,OAAMC,EAAE,IAAIC,EAAAA,EAAE,CAACxE,KAAK,WAAWyE,MAAM,WAAWrO,KAAK,MAAMsO,UAAS,EAAGC,UAAS,IAAKC,EAAE,IAAIJ,EAAAA,EAAE,CAACxE,KAAK,QAAQyE,MAAM,QAAQrO,KAAK,SAASsO,UAAS,EAAGC,UAAS,IAAK,IAAIE,EAAE,cAAcC,EAAAA,EAAEC,YAAY/O,GAAGgP,MAAMhP,GAAGiP,KAAKC,eAAe,WAAY,CAAAC,aAAa,IAAI,MAAMnP,KAAKiP,KAAK3D,SAAStL,EAAEoP,YAAYH,KAAKzP,MAAMyP,KAAK3D,SAASxL,GAAG,aAAaE,IAAIA,EAAEuK,KAAK6E,YAAYH,KAAKzP,KAAxB,IAAiCyP,KAAK3D,SAASxL,GAAG,gBAAgBE,IAAIA,EAAEuK,KAAK6E,YAAY,IAAnB,GAA2B,CAAIC,iBAAa,MAAMrP,EAAEiP,KAAKzP,OAAO8P,iBAAiBnD,EAAE8C,KAAKM,WAAW,OAAOvP,GAAEmF,EAAAA,EAAAA,IAAEgH,IAAGqD,EAAAA,EAAAA,IAAEvB,IAAIjO,GAAGG,UAASsP,EAAAA,EAAAA,IAAEtD,EAAEnM,GAAG,IAAK,CAAIuP,iBAAa,MAAMvP,EAAEiP,KAAKzP,OAAO8P,iBAAiB,IAAItP,EAAE,OAAO,KAAK,MAAMmM,GAAEuD,EAAAA,EAAAA,MAAI,OAAOT,KAAK3D,SAASpI,SAASwK,IAAI,MAAMiC,GAAEC,EAAAA,EAAAA,IAAElC,EAAEvN,WAAUqP,EAAAA,EAAAA,IAAE9B,EAAEvN,SAASH,GAAGG,SAAS,MAAKyP,EAAAA,EAAAA,IAAED,KAAIE,EAAAA,EAAAA,IAAE1D,EAAE,UAAUwD,EAAEvP,KAAKuP,EAAEA,EAAEG,OAAO3D,EAAtC,KAA4C4D,EAAAA,EAAAA,IAAE5D,EAAE6D,EAAAA,IAAG,KAAK7D,CAAE,CAAI8D,gBAAY,OAAOhB,KAAK3D,QAAS,IAAEtL,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMtB,EAAEuB,UAAU,aAAa,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMtB,EAAEuB,UAAU,aAAa,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMtB,EAAEuB,UAAU,YAAY,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,OAAKrB,EAAEuB,UAAU,aAAQ,IAAQpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,OAAKrB,EAAEuB,UAAU,eAAU,IAAQpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMtB,EAAEuB,UAAU,sBAAiB,GAAQvB,GAAE7O,EAAAA,EAAAA,GAAE,EAACqQ,EAAAA,EAAAA,GAAE,+CAA+CxB,GAAG,MAAMlB,EAAE,CAAC,CAAC5B,aAAa,UAAU8B,iBAAiB,sBAAsB1J,GAAG,eAAemM,QAAQ,EAAE/H,MAAM,WAAWyF,mBAAmB,IAAIuC,EAAAA,GAAGC,UAAU,CAACzE,aAAa,WAAW8B,iBAAiB,uBAAuB1J,GAAG,gBAAgBmM,QAAQ,EAAE/H,MAAM,YAAYyF,mBAAmB,IAAIyC,EAAAA,GAAGD,UAAU,CAACzE,aAAa,aAAa8B,iBAAiB,yBAAyB1J,GAAG,kBAAkBmM,QAAQ,EAAE/H,MAAM,cAAcyF,mBAAmB,IAAI0C,EAAAA,GAAGF,UAAU,CAACzE,aAAa,QAAQ8B,iBAAiB,oBAAoB1J,GAAG,aAAamM,QAAQ,EAAE/H,MAAM,SAASyF,mBAAmB,IAAI0C,EAAAA,GAAGF,UAAU,CAACzE,aAAa,QAAQ8B,iBAAiB,oBAAoB1J,GAAG,YAAYmM,QAAQ,EAAE/H,MAAM,OAAOyF,mBAAmB,IAAI2C,EAAAA,GAAGH,WAAW,IAAII,EAAE,eAAcC,EAAAA,EAAAA,IAAEC,EAAAA,EAAAA,IAAEC,EAAAA,EAAAA,IAAEC,EAAAA,EAAAA,IAAEC,EAAAA,EAAAA,GAAEC,EAAAA,QAAQnC,YAAY/O,GAAGgP,MAAMhP,GAAGiP,KAAKkC,aAAa,CAACC,WAAW,CAACC,yBAAwB,IAAKpC,KAAKqC,mBAAmB,KAAKrC,KAAKsC,sBAAsB,KAAKtC,KAAK9B,sBAAsB,QAAQ8B,KAAKuC,eAAc,EAAGvC,KAAKjE,SAAS,gBAAgBiE,KAAKwC,SAAS,EAAExC,KAAKyC,SAAS,EAAEzC,KAAKK,iBAAiBqC,EAAAA,EAAAA,MAAQ1C,KAAKgB,UAAU,IAAIvC,EAAAA,EAAEC,EAAE7E,KAAK9I,GAAG,IAAI6O,EAAE,CAAC1K,GAAGnE,EAAEmE,GAAGmM,QAAQtQ,EAAEsQ,QAAQ/H,MAAMvI,EAAEuI,MAAM/I,MAAMyP,UAAUA,KAAK1G,MAAM,YAAY0G,KAAK7O,KAAK,YAAY6O,KAAKC,eAAe,WAAY,CAAA0C,iBAAiB5R,EAAEmM,EAAEuB,GAAG,MAAM,CAAC0D,WAAW,CAACC,yBAAyBnE,EAAEf,IAAI,gBAAgBuB,GAAGmE,QAAS,CAAAC,uBAAuB9R,EAAEmM,EAAEwD,GAAG,IAAIzC,EAAEf,GAAG,OAAO,KAAK,MAAMpD,EAAEoD,EAAEiB,OAAOtE,KAAK9I,IAAI,MAAMmM,EAAE,IAAI4F,EAAAA,QAAE,OAAO5F,EAAE6F,KAAKhS,EAAE2P,GAAGxD,CAAnB,IAAwB,OAAO,IAAIuB,EAAAA,EAAE,CAACxD,MAAMnB,GAAI,CAAAkJ,gCAAgCjS,EAAEmM,GAAG,OAAOe,EAAEf,IAAGpD,EAAAA,EAAAA,IAAEoD,EAAE+F,mBAAmB,IAAK,CAAI7C,iBAAa,MAAMrP,EAAEiP,KAAKK,iBAAiBnD,GAAEuD,EAAAA,EAAAA,MAAuR,OAAhRE,EAAAA,EAAAA,IAAEX,KAAKgB,WAAWhB,KAAKgB,UAAU/M,SAAS,QAAEqM,WAAWvP,GAAb,SAAkB4P,EAAAA,EAAAA,IAAE5P,IAAG6P,EAAAA,EAAAA,IAAE1D,EAAEnM,EAAEmM,GAAGA,CAAhC,GAAmCA,GAAW8C,KAAKsC,uBAAuBnE,OAAOC,MAAMrN,GAAGA,EAAEsN,gBAAgBwC,UAAUb,KAAKsC,sBAAsBnE,OAAOlK,SAASwK,IAAI,MAAMiC,GAAEH,EAAAA,EAAAA,IAAE9B,EAAEJ,gBAAgBwC,OAAO9P,GAAGG,UAASyP,EAAAA,EAAAA,IAAED,KAAIE,EAAAA,EAAAA,IAAE1D,EAAEwD,EAAExD,EAAZ,KAAyB4D,EAAAA,EAAAA,IAAE5D,EAAE6D,EAAAA,KAAGR,EAAAA,EAAAA,IAAEvB,IAAIjO,GAAGG,UAASsP,EAAAA,EAAAA,IAAEtD,EAAEnM,EAAG,CAAAmS,aAAanS,EAAEmM,GAAG,IAAI,MAAMuB,KAAKvB,EAAEiB,OAAO,GAAG,MAAMM,EAAEJ,gBAAgBmE,SAAS,OAAO/D,EAAEJ,gBAAgBmE,SAAS,OAAO,CAAE,CAAAW,aAAapS,EAAEmM,GAAG,IAAI,MAAMuB,KAAKvB,EAAEiB,OAAO,GAAG,MAAMM,EAAEJ,gBAAgBoE,SAAS,OAAOhE,EAAEJ,gBAAgBoE,SAAS,OAAO,CAAE,CAAIW,sBAAkB,OAAOpD,KAAKqD,cAAc,kBAAmB,CAAIhV,iBAAa,OAAO2R,KAAKqD,cAAc,aAAc,CAAI9U,mBAAe,OAAOyR,KAAKqD,cAAc,eAAgB,CAAI/U,oBAAgB,OAAO0R,KAAKqD,cAAc,gBAAiB,CAAAC,qBAAqBvS,EAAEmM,GAAG,OAAOA,EAAEiB,OAAOrL,OAAO4P,EAAAA,EAAAA,SAAWxF,EAAEiB,OAAO,GAAGE,gBAAgBgC,kBAAkBqC,EAAAA,EAAAA,KAAQ,CAAAa,cAAcxS,EAAE2P,EAAE5G,GAAG,GAAGmE,EAAEyC,GAAG,OAAO,KAAK,MAAMxK,EAAE,GAAG,IAAI8L,EAAEtB,EAAEvC,OAAOqF,QAAQ,CAACzS,EAAEmM,IAAIuG,KAAK7M,IAAI7F,EAAEmM,EAAEmB,gBAAgBnJ,KAAK,KAAK,GAAG,EAAE,IAAI,MAAMuJ,KAAKiC,EAAEvC,OAAO,CAAC,MAAME,gBAAgBtN,EAAEyN,WAAWkC,GAAGjC,EAAE3E,EAAE/I,EAAEmE,IAAI8M,IAAI0B,EAAEnF,EAAEE,GAAG,IAAGkC,EAAAA,EAAAA,IAAE+C,GAAG,CAAC,MAAMjF,EAAE,IAAImB,EAAE,CAAC1K,GAAGwO,EAAExO,GAAGoE,MAAMvI,EAAEgK,KAAKsG,QAAQvH,EAAEvJ,MAAMyP,KAAK3D,SAASqE,EAAEiD,SAAS9J,KAAK,QAAE3I,SAASH,EAAEK,OAAOqN,EAAEmF,WAAWlD,EAAEmD,UAAU/J,GAA7C,SAAkDoD,EAAAA,EAAAA,SAAW,CAAC0G,WAAWlD,EAAExP,SAASH,EAAEK,OAAOqN,EAAEqF,cAAchK,GAA7G,MAAqH5D,EAAE8E,KAAKyD,EAAG,CAAC,QAAO,IAAIA,EAAAA,EAAEvI,EAAG,CAAA6N,eAAehT,EAAEmM,EAAEuB,EAAE3E,GAAG,MAAM0I,SAASR,EAAES,SAASuB,GAAGhE,KAAK,IAAG9J,EAAAA,EAAAA,IAAEnF,GAAG,OAAO,MAAMkQ,EAAElQ,EAAEqN,MAAMrN,GAAGA,EAAEsL,SAASvJ,OAAO,IAAI,IAAIkN,KAAKkC,aAAaC,WAAWC,wBAAwB,YAAYnB,GAAGnH,GAAGmK,UAAUjJ,KAAK,IAAI0F,EAAAA,EAAE,wCAAwC,iDAAiD,MAAMwD,EAAE,GAAG,IAAI9C,EAAEpB,KAAKK,iBAAiBkB,SAASxQ,EAAE,IAAI,MAAM2P,KAAK3P,EAAE,IAAI,MAAMA,KAAK2P,EAAErE,SAAS,IAAGsE,EAAAA,EAAAA,IAAE5P,EAAEG,UAAU,CAACkQ,EAAErQ,EAAEG,SAASmP,iBAAiBkB,SAAS,MAAMxQ,CAAE,KAAI,MAAM2P,KAAKhC,EAAE,CAAC,MAAMxB,EAAEnM,EAAE4N,MAAM5N,GAAG2P,EAAExL,KAAKnE,EAAEmE,KAAK8K,KAAKmE,sBAAsBD,EAAEhH,EAAEwD,EAAEsB,EAAEgC,EAAE5C,EAAEtH,EAAG,EAAA4J,EAAAA,EAAAA,IAAE,2BAA2BQ,EAAEhH,EAAG,CAAI1O,gBAAY,OAAOwR,KAAKqD,cAAc,YAAa,CAAAe,KAAKrT,GAAG,OAAOiP,KAAKqE,oBAAoBrE,KAAKsE,eAAe,CAACC,eAAe,CAAC,uBAAuBxT,IAAI0J,QAAQC,QAAQsF,KAAM,CAAA+C,KAAKhS,EAAEmM,GAAG,sBAAsBnM,IAAIA,GAAE+I,EAAAA,EAAAA,IAAE/I,GAAGyT,OAAOC,OAAO1T,EAAEA,EAAEkS,oBAAoBlD,MAAMgD,KAAKhS,EAAEmM,EAAG,CAAgB,mBAAG,IAAGhH,EAAAA,EAAAA,IAAE8J,KAAKgB,WAAW,OAAO,IAAIjQ,EAAE,KAAK,MAAMmM,EAAE,GAAG,IAAI,MAAMwD,KAAKV,KAAKgB,UAAU,IAAI,MAAMvC,KAAKiC,EAAErE,SAAS,IAAGsE,EAAAA,EAAAA,IAAElC,EAAEvN,UAAU,CAAC,MAAMwP,EAAEjC,EAAEvN,SAASH,GAAE2T,EAAAA,EAAAA,IAAEhE,EAAEL,iBAAiBtP,MAAK4T,EAAAA,EAAAA,IAAEjE,EAAEL,iBAAiBtP,KAAI6T,EAAAA,EAAAA,aAAWC,EAAAA,EAAAA,MAAIpG,EAAEvN,UAAS4T,EAAAA,EAAAA,IAAEpE,EAAE3P,IAAIA,EAAE2P,EAAEL,iBAAiBnD,EAAElC,KAAKyD,EAAG,OAAMA,QAAQsG,EAAAA,EAAAA,IAAE7H,EAAErD,KAAK9I,GAAGA,EAAEG,YAAYgM,EAAEjJ,SAAS,CAAClD,EAAEmM,IAAInM,EAAEG,SAASuN,EAAEvB,IAAK,CAAAmG,cAActS,GAAG,OAAOmF,EAAAA,EAAAA,IAAE8J,KAAKgB,WAAW,KAAKhB,KAAKgB,WAAWrC,MAAMzB,GAAGA,EAAEhI,KAAKnE,KAAK,IAAK,CAAAoT,sBAAsBpT,EAAEmM,EAAEuB,EAAEiC,EAAEC,EAAEqB,EAAE0B,GAAG,MAAMM,EAAE,GAAG,KAAI9N,EAAAA,EAAAA,IAAEgH,GAAG,CAAC,IAAI,MAAMnM,KAAKmM,EAAEb,SAAS2D,KAAKgF,cAAchB,EAAEjT,EAAE0N,EAAE3B,aAAa4G,GAAG1D,KAAKiF,oBAAoBjB,EAAE1E,GAAGvO,EAAEiK,KAAK,CAACqD,gBAAgB,CAACtD,KAAKmC,EAAE5D,MAAMuF,YAAY,CAACC,SAAS,CAAC3N,KAAK,SAASC,QAAO0I,EAAAA,EAAAA,IAAE2E,EAAEM,qBAAqB7J,GAAGgI,EAAEmE,QAAQvE,aAAa2B,EAAEG,iBAAiB4D,SAAS9B,EAAE+B,SAAS9B,EAAEuE,cAAc,WAAWC,OAAO,CAAC7F,EAAEiC,SAAS5B,EAAE4B,UAAUlB,iBAAiB2B,GAAGxD,WAAW,CAACmF,SAASK,EAAElH,aAAa2B,EAAEG,mBAAoB,CAAC,CAAAoG,cAAcjU,EAAEmM,EAAEuB,EAAEiC,GAAG,IAAGxK,EAAAA,EAAAA,IAAEgH,GAAG,OAAO,MAAMhM,SAAS4I,EAAE1I,OAAO4Q,EAAE8B,cAAcJ,GAAGxG,EAAE,IAAGhH,EAAAA,EAAAA,IAAE4D,GAAG,OAAO,GAAGA,EAAE3I,OAAOsN,EAAE,YAAYiC,GAAGuD,UAAUjJ,KAAK,IAAIgJ,EAAAA,EAAE,wCAAyC,aAAYlK,EAAE3I,6BAA6BsN,WAAW,CAACxN,QAAQiM,KAAK,IAAGhH,EAAAA,EAAAA,IAAE8L,GAAG,YAAYtB,GAAGuD,UAAUjJ,KAAK,IAAIgJ,EAAAA,EAAE,4BAA4B,oCAAoC,CAAC/S,QAAQiM,KAAK,MAAM+D,EAAE,CAAC2C,WAAW,IAAI1G,EAAE0G,YAAY1S,SAAS4I,EAAEyH,SAASnQ,OAAO4Q,EAAET,WAAUZ,EAAAA,EAAAA,IAAE+C,KAAKzC,EAAE4C,UAAUH,EAAEnC,UAAUxQ,EAAEiK,KAAKiG,EAAG,CAAAgE,oBAAoBlU,EAAEmM,GAAG,MAAMuB,EAAEvB,EAAEnC,KAAK,IAAI2F,GAAE0E,EAAAA,EAAAA,GAAE3G,EAAE1N,GAAG,EAAE,MAAM+I,EAAE,IAAIuL,IAAI,IAAI,MAAM1E,KAAK5P,EAAE,CAAC4P,EAAEiD,aAAajD,EAAEiD,WAAW,CAAC,GAAG,MAAMA,WAAW7S,GAAG4P,GAAG,MAAM5P,EAAE0N,IAAI3E,EAAEwL,IAAIvU,EAAE0N,OAAO1N,EAAE0N,GAAGiC,KAAK5G,EAAEzI,IAAIN,EAAE0N,GAAI,CAAC,IAAE1N,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMS,EAAER,UAAU,oBAAe,IAAQpQ,EAAAA,EAAAA,GAAE,EAACmT,EAAAA,EAAAA,GAAE,CAAC,cAAc,WAAW,eAAe,CAAC,YAAYvC,EAAER,UAAU,mBAAmB,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMS,EAAER,UAAU,0BAAqB,IAAQpQ,EAAAA,EAAAA,GAAE,EAACmT,EAAAA,EAAAA,GAAE,CAAC,UAAU,eAAe,qBAAqB,CAAC,YAAYvC,EAAER,UAAU,yBAAyB,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,EAAGqE,KAAK,CAACC,QAAQ,CAAC,UAAU,CAACC,MAAM,CAACC,SAAQ,EAAGjP,OAAO,2BAA2BkL,EAAER,UAAU,6BAAwB,IAAQpQ,EAAAA,EAAAA,GAAE,EAACmT,EAAAA,EAAAA,GAAE,CAAC,UAAU,eAAe,wBAAwB,CAAC,uBAAuBvC,EAAER,UAAU,kCAAkC,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,EAAGqE,KAAK,CAACxC,MAAK,EAAG0C,MAAM,CAACC,SAAQ,EAAGC,cAAa,OAAQhE,EAAER,UAAU,6BAAwB,IAAQpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMS,EAAER,UAAU,aAAa,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,EAAGqE,KAAK,CAACC,QAAQ,CAAC,UAAU,CAACC,MAAM,CAAChP,OAAO,+BAA+BmP,iBAAiB,MAAM,CAACF,QAAQ,MAAM1F,KAAKsC,sBAAuB,SAAQX,EAAER,UAAU,qBAAgB,IAAQpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAAC9P,KAAK,CAAC,OAAO,OAAO,oBAAoBwQ,EAAER,UAAU,gBAAW,IAAQpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAAC9P,KAAK0U,OAAOC,aAAY,EAAGP,KAAK,CAACE,OAAM,MAAO9D,EAAER,UAAU,gBAAW,IAAQpQ,EAAAA,EAAAA,GAAE,EAACmT,EAAAA,EAAAA,GAAE,CAAC,UAAU,eAAe,WAAW,CAAC,YAAYvC,EAAER,UAAU,eAAe,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAAC9P,KAAK0U,OAAOC,aAAY,EAAGP,KAAK,CAACE,OAAM,MAAO9D,EAAER,UAAU,gBAAW,IAAQpQ,EAAAA,EAAAA,GAAE,EAACmT,EAAAA,EAAAA,GAAE,CAAC,UAAU,eAAe,WAAW,CAAC,YAAYvC,EAAER,UAAU,eAAe,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMS,EAAER,UAAU,kBAAkB,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAAC1K,MAAM,qBAAqBpF,KAAK,CAAC,yBAAyBwQ,EAAER,UAAU,4BAAuB,IAAQpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMS,EAAER,UAAU,aAAa,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMS,EAAER,UAAU,eAAe,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMS,EAAER,UAAU,gBAAgB,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAAC9P,KAAKuR,EAAAA,KAAKf,EAAER,UAAU,wBAAmB,IAAQpQ,EAAAA,EAAAA,GAAE,EAACmT,EAAAA,EAAAA,GAAE,CAAC,UAAU,eAAe,mBAAmB,CAAC,YAAYvC,EAAER,UAAU,uBAAuB,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,EAAGqE,KAAK,CAACC,QAAQ,CAAC,UAAU,CAACC,MAAM,CAACE,cAAa,SAAUhE,EAAER,UAAU,iBAAY,IAAQpQ,EAAAA,EAAAA,GAAE,EAACmT,EAAAA,EAAAA,GAAE,UAAU,YAAY,CAAC,YAAYvC,EAAER,UAAU,gBAAgB,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkF,EAAAA,EAAAA,GAAE,UAAU,cAAc0L,EAAER,UAAU,iBAAiB,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,KAAMS,EAAER,UAAU,YAAY,OAAMpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,OAAKU,EAAER,UAAU,aAAQ,IAAQpQ,EAAAA,EAAAA,GAAE,EAACkQ,EAAAA,EAAAA,IAAE,CAACC,UAAS,EAAGqE,KAAK,CAACxC,MAAK,MAAOpB,EAAER,UAAU,YAAO,GAAQQ,GAAE5Q,EAAAA,EAAAA,GAAE,EAACqQ,EAAAA,EAAAA,GAAE,8BAA8BO,GAAG,MAAMoE,EAAEpE,C,2CCAv4V,MAAMzE,EAAE,EAAE,SAAS8E,EAAE9E,EAAE8E,GAAG,IAAItB,EAAE,EAAE,IAAI,MAAM3P,KAAKiR,EAAE,CAAC,MAAMA,EAAEjR,EAAE6S,aAAa1G,GAAG,iBAAiB8E,GAAGgE,SAAShE,KAAKtB,EAAE+C,KAAK7M,IAAI8J,EAAEsB,GAAI,QAAOtB,CAAE,C","sources":["components/Tools/Sketch/utils/sketch.ts","components/Tools/Sketch/ColorButton.tsx","components/Tools/Sketch/SizeSlider.tsx","components/Tools/Sketch/LineSymbols.tsx","components/Tools/Sketch/PolygonSymbols.tsx","components/Tools/Sketch/TextSymbols.tsx","components/Tools/Sketch/IconPicker.tsx","components/Tools/Sketch/IconSelectionPanel.tsx","components/Tools/Sketch/PointSymbols.tsx","components/Tools/Sketch/utils/tips.ts","components/Tools/Sketch/utils/useSketch.ts","components/Tools/Sketch/Sketch.tsx","../node_modules/@arcgis/core/layers/MapNotesLayer.js","../node_modules/@arcgis/core/layers/graphics/objectIdUtils.js"],"sourcesContent":["import MapView from '@arcgis/core/views/MapView';\nimport SketchViewModel from '@arcgis/core/widgets/Sketch/SketchViewModel';\nimport MapNotesLayer from '@arcgis/core/layers/MapNotesLayer';\nimport GraphicsLayer from '@arcgis/core/layers/GraphicsLayer';\nimport Color from '@arcgis/core/Color';\nimport SimpleFillSymbol from '@arcgis/core/symbols/SimpleFillSymbol';\nimport SimpleLineSymbol from '@arcgis/core/symbols/SimpleLineSymbol';\nimport TextSymbol from '@arcgis/core/symbols/TextSymbol';\nimport WebStyleSymbol from '@arcgis/core/symbols/WebStyleSymbol';\nimport request from '@arcgis/core/request';\nimport CIMSymbol from '@arcgis/core/symbols/CIMSymbol';\nimport * as cimSymbolUtils from '@arcgis/core/symbols/support/cimSymbolUtils';\nimport * as symbolUtils from '@arcgis/core/symbols/support/symbolUtils';\nimport Graphic from '@arcgis/core/Graphic';\nlet pointLayer: GraphicsLayer;\nlet polylineLayer: GraphicsLayer;\nlet polygonLayer: GraphicsLayer;\nlet textLayer: GraphicsLayer;\nlet sketchLayer: MapNotesLayer;\nlet selectedTool: string = '';\nlet fillSymbol = new SimpleFillSymbol({\n  color: [255, 0, 0, 0.5],\n  style: 'solid',\n  outline: {\n    width: 2,\n    color: [255, 0, 0, 1],\n  },\n});\nlet lineSymbol = new SimpleLineSymbol({\n  width: 1,\n  color: [255, 0, 0, 1],\n  style: 'solid',\n  cap: 'round',\n  join: 'round',\n});\nlet textSymbol = new TextSymbol({\n  color: [255, 0, 0, 1],\n  haloColor: [255, 255, 255, 1],\n  haloSize: '1px',\n  text: '',\n  xoffset: 3,\n  yoffset: 3,\n  font: {\n    // autocasts as new Font()\n    size: 10,\n    family: 'Aerial',\n    weight: 'bold',\n  },\n});\nlet pointSymbol: CIMSymbol;\nlet pointSketchViewModel: SketchViewModel;\nlet polylineSketchViewModel: SketchViewModel;\n\nlet polygonSketchViewModel: SketchViewModel;\n\nlet textSketchViewModel: SketchViewModel;\nlet sketchLayerView: __esri.GraphicsLayerView;\n// let highlights: any;\n// let highlightedGraphic: Graphic;\n\nexport const initializeSketchViewModel = async (\n  view: MapView,\n  setActiveSketchTool: Function,\n  selectedGraphics: Graphic[],\n  setSelectedGraphics: Function,\n) => {\n  sketchLayer = new MapNotesLayer({\n    listMode: 'hide',\n    id: 'notes-layer',\n  });\n  view.map.add(sketchLayer);\n  const layerView = await view.whenLayerView(sketchLayer);\n  sketchLayerView = layerView as __esri.GraphicsLayerView;\n  pointLayer = sketchLayer.pointLayer;\n  polylineLayer = sketchLayer.polylineLayer;\n  polygonLayer = sketchLayer.polygonLayer;\n\n  textLayer = sketchLayer.textLayer;\n  // create a new sketch view model for each different map note type\n  // this allows both the creation and modification of each different map note\n  pointSketchViewModel = createSketchViewModels(pointLayer, view, false);\n  polylineSketchViewModel = createSketchViewModels(polylineLayer, view, false);\n  polygonSketchViewModel = createSketchViewModels(polygonLayer, view, false);\n  polygonSketchViewModel.activeFillSymbol = fillSymbol;\n  (polylineSketchViewModel as any).activeLineSymbol = lineSymbol as any;\n\n  textSketchViewModel = createSketchViewModels(textLayer, view, true);\n\n  const viewModels = [pointSketchViewModel, polylineSketchViewModel, polygonSketchViewModel, textSketchViewModel];\n  viewModels.forEach((viewModel) => {\n    viewModel?.on('create', (e) => {\n      if (e.state === 'cancel' && viewModel.activeTool !== null) {\n        setActiveSketchTool('select');\n        // if (highlights) {\n        //   highlights.remove();\n        // }\n      }\n    });\n    viewModel?.on('update', (e) => {\n      if (e.state === 'start' || e.state === 'active') {\n        setSelectedGraphics([...e.graphics]);\n      }\n    });\n  });\n};\n\nconst createSketchViewModels = (layer: GraphicsLayer, view: MapView, isText: boolean) => {\n  const sketchVM = new SketchViewModel({\n    view,\n    layer,\n    updateOnGraphicClick: true,\n  });\n  sketchVM.on('create', addGraphic);\n  return sketchVM;\n};\n\nconst addGraphic = (e: any) => {\n  if (e.state === 'complete') {\n    if (e.graphic.geometry.type === 'polygon') {\n      e.graphic.symbol = fillSymbol;\n      sketchLayer.polygonLayer.add(e.graphic);\n      polygonSketchViewModel.create(e.tool);\n    }\n    if (e.graphic.geometry.type === 'polyline') {\n      e.graphic.symbol = lineSymbol;\n      sketchLayer.polylineLayer.add(e.graphic);\n      polylineSketchViewModel.create(e.tool);\n    }\n    if (selectedTool === 'text') {\n      e.graphic.symbol = textSymbol;\n      sketchLayer.textLayer.add(e.graphic);\n      textSketchViewModel.create('point');\n    }\n    if (selectedTool === 'point') {\n      e.graphic.symbol = pointSymbol;\n      sketchLayer.pointLayer.add(e.graphic);\n      pointSketchViewModel.create('point');\n    }\n  }\n};\n\nexport const sketchActivated = () => {\n  try {\n    pointSketchViewModel.updateOnGraphicClick = true;\n    polygonSketchViewModel.updateOnGraphicClick = true;\n    polylineSketchViewModel.updateOnGraphicClick = true;\n    textSketchViewModel.updateOnGraphicClick = true;\n  } catch (error) {\n\n  }\n\n};\n\nexport const toolSelected = (tool: string, activeSketchTool: string, setActiveSketchTool: Function) => {\n  debugger\n  sketchActivated();\n  selectedTool = tool;\n  tool === activeSketchTool ? setActiveSketchTool('') : setActiveSketchTool(tool);\n  if (activeSketchTool === '') {\n    cancelSketch();\n  }\n  if (['polygon', 'rectangle', 'circle'].includes(tool)) {\n    polygonSketchViewModel.create(tool as any);\n  }\n  if (['polyline'].includes(tool)) {\n    polylineSketchViewModel.create(tool as any);\n  }\n  if (tool === 'text') {\n    polylineSketchViewModel.create('point');\n  }\n  if (tool === 'point') {\n    polylineSketchViewModel.create('point');\n  }\n};\nlet updatingPolygonSymbol = false;\nexport const polygonSymbolUpdated = async (fillColor: Color, outlineColor: Color, width: number) => {\n  const preview = document.getElementById('polygon-preview');\n  if (preview && !updatingPolygonSymbol) {\n    fillSymbol.color = fillColor;\n    fillSymbol.outline.color = outlineColor;\n    fillSymbol.outline.width = width;\n    if (polygonSketchViewModel) {\n      polygonSketchViewModel.activeFillSymbol = fillSymbol;\n      if (sketchLayer.polygonLayer) {\n        updateHighlightedGraphicSymbol(sketchLayer.polygonLayer, fillSymbol, polygonSketchViewModel);\n      }\n    }\n    updatingPolygonSymbol = true;\n    preview.innerHTML = '';\n    await symbolUtils.renderPreviewHTML(fillSymbol, {\n      node: preview as HTMLElement,\n      size: 24,\n    });\n    updatingPolygonSymbol = false;\n  }\n};\n\nconst updateHighlightedGraphicSymbol = (layer: GraphicsLayer, symbol: __esri.Symbol, vm: __esri.SketchViewModel) => {\n  if (vm.updateGraphics.length) {\n    const graphic = vm.updateGraphics.getItemAt(0);\n    layer.remove(graphic);\n    graphic.symbol = symbol;\n    const clone = graphic.clone();\n    layer.add(clone);\n\n    setTimeout(() => {\n      vm.cancel();\n      vm.update(clone);\n    });\n  }\n};\n\nexport const pointSymbolUpdated = async (symbol: any, color: Color, size: number) => {\n  const ref = await request(`${symbol.url}${symbol.cimRef.replace('.', '')}`);\n  pointSymbol = new CIMSymbol({\n    data: {\n      type: 'CIMSymbolReference',\n      symbol: ref?.data,\n    },\n  });\n  cimSymbolUtils.applyCIMSymbolColor(pointSymbol, color);\n  cimSymbolUtils.scaleCIMSymbolTo(pointSymbol, size);\n  if (sketchLayer.pointLayer) {\n    updateHighlightedGraphicSymbol(sketchLayer.pointLayer, pointSymbol, pointSketchViewModel);\n  }\n  pointSketchViewModel.pointSymbol = pointSymbol;\n  const preview = document.getElementById('icon-preview');\n  if (preview) {\n    preview.innerHTML = '';\n    symbolUtils.renderPreviewHTML(pointSymbol, {\n      node: preview as HTMLElement,\n      size: size,\n    });\n  }\n};\n\nexport const polylineSymbolUpdated = (lineColor: Color, width: number) => {\n  lineSymbol.color = lineColor;\n  lineSymbol.width = width;\n  if (polylineSketchViewModel) {\n    polylineSketchViewModel.polylineSymbol = lineSymbol as any;\n\n    polylineSketchViewModel.updateGraphics.forEach((graphic) => {\n      graphic.symbol = lineSymbol;\n    });\n    if (sketchLayer.polylineLayer) {\n      updateHighlightedGraphicSymbol(sketchLayer.polylineLayer, lineSymbol, polylineSketchViewModel);\n    }\n  }\n\n  const preview = document.getElementById('line-preview');\n  if (preview) {\n    preview.innerHTML = '';\n    symbolUtils.renderPreviewHTML(lineSymbol, {\n      node: preview as HTMLElement,\n      size: width,\n    });\n  }\n};\n\nexport const textSymbolUpdated = (\n  fontSize: number,\n  fontColor: Color,\n  haloSize: number,\n  haloColor: Color,\n  showHalo: boolean,\n  textContent: string,\n) => {\n  textSymbol.color = fontColor;\n  textSymbol.font.size = fontSize;\n  textSymbol.haloColor = haloColor;\n  textSymbol.haloSize = showHalo ? haloSize : 0;\n  textSymbol.text = textContent;\n  textSketchViewModel.pointSymbol = textSymbol as any;\n  if (sketchLayer.textLayer) {\n    updateHighlightedGraphicSymbol(sketchLayer.textLayer, textSymbol, textSketchViewModel);\n  }\n};\n\nexport const cancelSketch = () => {\n  pointSketchViewModel.cancel();\n  polylineSketchViewModel.cancel();\n  polygonSketchViewModel.cancel();\n  textSketchViewModel.cancel();\n  pointSketchViewModel.updateOnGraphicClick = false;\n  polygonSketchViewModel.updateOnGraphicClick = false;\n  polylineSketchViewModel.updateOnGraphicClick = false;\n  textSketchViewModel.updateOnGraphicClick = false;\n};\n\nexport const clearSketch = (setActiveSketchTool: Function, setSelectedGraphics: Function) => {\n  setActiveSketchTool('');\n  setSelectedGraphics([...[], ...[]]);\n  pointSketchViewModel.cancel();\n  polygonSketchViewModel.cancel();\n  polylineSketchViewModel.cancel();\n  textSketchViewModel.cancel();\n  sketchLayer.polygonLayer.graphics.removeAll();\n  sketchLayer.pointLayer.graphics.removeAll();\n  sketchLayer.polylineLayer.graphics.removeAll();\n  sketchLayer.textLayer.graphics.removeAll();\n};\n\nexport const getSymbols = (ids: string[], url: string) => {\n  return new Promise((resolve, reject) => {\n    const promises: Promise<any>[] = [];\n\n    ids.forEach((id) => {\n      const symbol: WebStyleSymbol = new WebStyleSymbol({\n        styleUrl: `${url}/${id}/data`,\n        name: 'Pins',\n      });\n      promises.push(request(symbol.styleUrl));\n    });\n    if (promises.length) {\n    }\n    const items: any[] = [];\n\n    Promise.all(promises).then((results: any) => {\n      results.forEach((result: any) => {\n        result.data.items.forEach((item: any) => {\n          item.url = result.url.replace('data', '');\n          items.push(item);\n        });\n      });\n      // items.concat(result.data.items);\n\n      resolve(items);\n    });\n  });\n};\n\nexport const stopSketching = () => {\n  pointSketchViewModel.cancel();\n  polygonSketchViewModel.cancel();\n  polylineSketchViewModel.cancel();\n  textSketchViewModel.cancel();\n};\n\nexport const deleteSelectedGraphics = (selectedGraphics: Graphic[], setSelectedGraphics: Function) => {\n  pointLayer.removeMany(selectedGraphics);\n  polygonLayer.removeMany(selectedGraphics);\n  polylineLayer.removeMany(selectedGraphics);\n  textLayer.removeMany(selectedGraphics);\n  requestAnimationFrame(() => {\n    setSelectedGraphics((current: Graphic[]) => {\n      return [];\n    });\n  });\n};\n","import \"./Sketch.css\";\nimport Color from \"@arcgis/core/Color\";\nimport {\n  CalciteAction,\n  CalciteButton,\n  CalciteColorPicker,\n  CalciteColorPickerSwatch,\n  CalciteInput,\n  CalciteLabel,\n  CalcitePanel,\n  CalcitePopover,\n  CalciteSlider,\n} from \"@esri/calcite-components-react\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\ninterface Props {\n  id: string;\n  label: string;\n  color: number[];\n  colorSet: Function;\n  hideTransparency?: boolean;\n}\nfunction ColorButton(props: Props) {\n  const popover = useRef<HTMLCalcitePopoverElement>(null);\n  const picker = useRef<HTMLCalciteColorPickerElement>(null);\n  const [color, setColor] = useState<Color>();\n  const [transparency, setTransparency] = useState<any>(0);\n  useEffect(() => {\n    if (!color && props.color) {\n      setColor(new Color(props.color));\n      setTransparency((1 - props.color[3]) * 100);\n    }\n  }, [props.color]);\n\n  return (\n    <div id={props.id}>\n      <CalciteLabel>\n        {props.label} Color\n        <CalciteButton\n          id={`${props.id}-popover-button`}\n          width=\"half\"\n          iconEnd=\"pencil\"\n          kind=\"neutral\"\n          appearance=\"outline\"\n        >\n          <CalciteColorPickerSwatch\n            color={color?.toHex()}\n          ></CalciteColorPickerSwatch>\n        </CalciteButton>\n      </CalciteLabel>\n      <CalcitePopover\n        ref={popover}\n        overlayPositioning=\"fixed\"\n        placement=\"top-start\"\n        label={\"\"}\n        referenceElement={`${props.id}-popover-button`}\n      >\n        <CalcitePanel heading=\"Color\">\n          <CalciteAction\n            icon=\"x\"\n            text=\"\"\n            slot=\"header-actions-end\"\n            onClick={() => {\n              if (popover.current) {\n                popover.current.open = !popover.current.open;\n              }\n              const c = new Color(color);\n              c.a = 1 - transparency / 100;\n              props.colorSet(c);\n            }}\n          ></CalciteAction>\n          <CalciteColorPicker\n            ref={picker}\n            hideSaved\n            hideHex\n            hideChannels\n            value={color ? color.toHex() : \"#FF0000\"}\n            onCalciteColorPickerInput={(e) =>\n              setColor(new Color(e.target.value))\n            }\n          ></CalciteColorPicker>\n        </CalcitePanel>\n        {/* <CalciteButton\n          width=\"full\"\n          onClick={() => {\n            popover.current?.toggle();\n            const c = new Color(color);\n            c.a = 1 - transparency / 100;\n            props.colorSet(c);\n          }}\n        >\n          Done\n        </CalciteButton> */}\n      </CalcitePopover>\n      {!props.hideTransparency && (\n        <CalciteLabel>\n          {props.label} Transparency\n          <div className=\"slider-input\">\n            <CalciteSlider\n              max={100}\n              min={0}\n              value={transparency}\n              onCalciteSliderInput={(e) => {\n                let value: number = e.target.value as number;\n                if (value > 100) {\n                  value = 100;\n                }\n                if (value < 0) {\n                  value = 0;\n                }\n                setTransparency(value);\n                const c = new Color(color);\n                c.a = 1 - transparency / 100;\n                props.colorSet(c);\n              }}\n            ></CalciteSlider>\n            <CalciteInput\n              max={100}\n              min={0}\n              type=\"number\"\n              numberButtonType=\"none\"\n              suffixText=\"%\"\n              value={transparency}\n              onCalciteInputInput={(e) => {\n                let value: number = parseInt(e.target.value);\n                if (value > 100) {\n                  value = 100;\n                }\n                if (value < 0) {\n                  value = 0;\n                }\n\n                setTransparency(value);\n                const c = new Color(color);\n                c.a = 1 - transparency / 100;\n                props.colorSet(c);\n              }}\n            ></CalciteInput>\n          </div>\n        </CalciteLabel>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(ColorButton);\n","import {\n  CalciteInput,\n  CalciteLabel,\n  CalciteSlider,\n} from \"@esri/calcite-components-react\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\ninterface Props {\n  label: string;\n  min: number;\n  max: number;\n  value: number;\n  sizeSet: Function;\n}\nfunction SizeSlider(props: Props) {\n  const [value, setValue] = useState<any>();\n  useEffect(() => {\n    setValue(props.value);\n  }, [props.value]);\n  return (\n    <CalciteLabel>\n      {props.label}\n      <div className=\"slider-input\">\n        <CalciteSlider\n          max={props.max}\n          min={props.min}\n          value={value}\n          onCalciteSliderInput={(e) => {\n            setValue(e.target.value);\n            props.sizeSet(e.target.value);\n          }}\n        ></CalciteSlider>\n        <CalciteInput\n          type=\"number\"\n          numberButtonType=\"none\"\n          min={props.min}\n          max={props.max}\n          value={value}\n          suffixText=\"px\"\n          onCalciteInputInput={(e) => {\n            setValue(parseFloat(e.target.value));\n            props.sizeSet(parseFloat(e.target.value));\n          }}\n        ></CalciteInput>\n      </div>\n    </CalciteLabel>\n  );\n}\nexport default React.memo(SizeSlider);\n","import \"./Sketch.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport ColorButton from \"./ColorButton\";\nimport SizeSlider from \"./SizeSlider\";\nimport Color from \"@arcgis/core/Color\";\ninterface Props {\n  polylineSymbolUpdated: Function;\n}\nfunction LineSymbols(props: Props) {\n  const [lineColor, setLineColor] = useState<Color>(new Color([255, 0, 0, 1]));\n  const [width, setWidth] = useState(2);\n  useEffect(() => {\n    if (lineColor && width) {\n      props.polylineSymbolUpdated(lineColor, width);\n    }\n  }, [lineColor, width]);\n  return (\n    <div id=\"line-symbols\">\n      <div id=\"line-preview\" className=\"preview\"></div>\n\n      <ColorButton\n        id=\"line\"\n        label=\"Line\"\n        color={lineColor.toRgba()}\n        colorSet={(c: any) => {\n          setLineColor(c);\n          props.polylineSymbolUpdated(c, width);\n        }}\n      ></ColorButton>\n      <SizeSlider\n        value={width}\n        min={0.1}\n        max={18}\n        label=\"Width\"\n        sizeSet={(size: number) => {\n          setWidth(size);\n          props.polylineSymbolUpdated(lineColor, width);\n        }}\n      ></SizeSlider>\n    </div>\n  );\n}\n\nexport default React.memo(LineSymbols);\n","import Color from \"@arcgis/core/Color\";\nimport React, { useEffect, useState } from \"react\";\nimport ColorButton from \"./ColorButton\";\nimport SizeSlider from \"./SizeSlider\";\ninterface Props {\n  polygonSymbolUpdated: Function;\n}\nfunction PolygonSymbols(props: Props) {\n  const [fillColor, setFillColor] = useState<Color>(\n    new Color([255, 0, 0, 0.5])\n  );\n  const [outlineColor, setOutlineColor] = useState<Color>(\n    new Color([255, 0, 0, 1])\n  );\n  const [width, setWidth] = useState(2);\n  useEffect(() => {\n    if (fillColor && outlineColor && width) {\n      props.polygonSymbolUpdated(fillColor, outlineColor, width);\n    }\n  }, [fillColor, outlineColor, width]);\n  return (\n    <div id=\"polygon-symbols\">\n      <div id=\"polygon-preview\" className=\"preview\"></div>\n      <ColorButton\n        id=\"polygon-fill\"\n        color={fillColor.toRgba()}\n        label=\"Fill\"\n        colorSet={(c: any) => {\n          setFillColor(c);\n          props.polygonSymbolUpdated(c, outlineColor, width);\n        }}\n      ></ColorButton>\n      <ColorButton\n        id=\"polygon-outline\"\n        color={outlineColor.toRgba()}\n        label=\"Outline\"\n        colorSet={(c: any) => {\n          setOutlineColor(c);\n          props.polygonSymbolUpdated(fillColor, c, width);\n        }}\n      ></ColorButton>\n      <SizeSlider\n        label=\"Outline Width\"\n        min={0.1}\n        max={18}\n        value={width}\n        sizeSet={(size: any) => {\n          setWidth(size);\n          props.polygonSymbolUpdated(fillColor, outlineColor, width);\n        }}\n      ></SizeSlider>\n    </div>\n  );\n}\n\nexport default React.memo(PolygonSymbols);\n","import Color from \"@arcgis/core/Color\";\nimport {\n  CalciteInput,\n  CalciteLabel,\n  CalciteSwitch,\n} from \"@esri/calcite-components-react\";\nimport React, { useState } from \"react\";\nimport ColorButton from \"./ColorButton\";\ninterface Props {\n  textSymbolUpdated: Function;\n}\nfunction TextSymbols(props: Props) {\n  const [fontColor, setFontColor] = useState<Color>(new Color([255, 0, 0, 1]));\n  const [fontSize, setFontSize] = useState(10);\n  const [showHalo, setShowHalo] = useState(false);\n  const [haloSize, setHaloSize] = useState(1);\n  const [haloColor, setHaloColor] = useState<Color>(\n    new Color([255, 255, 255, 1])\n  );\n  const [textContent, setTextContent] = useState(\"\");\n\n  return (\n    <div id=\"text-symbols\">\n      <CalciteLabel>\n        Text\n        <CalciteInput\n          type=\"textarea\"\n          scale=\"m\"\n          value={textContent}\n          onCalciteInputInput={(e) => {\n            setTextContent(e.target.value);\n            requestAnimationFrame(() => {\n              props.textSymbolUpdated(\n                fontSize,\n                fontColor,\n                haloSize,\n                haloColor,\n                showHalo,\n                e.target.value\n              );\n            });\n          }}\n          onCalciteInputChange={(e) => {}}\n        ></CalciteInput>\n      </CalciteLabel>\n      <ColorButton\n        id=\"font\"\n        label=\"Font\"\n        color={fontColor.toRgba()}\n        hideTransparency\n        colorSet={(c: any) => {\n          setFontColor(c);\n          props.textSymbolUpdated(\n            fontSize,\n            c,\n            haloSize,\n            haloColor,\n            showHalo,\n            textContent\n          );\n        }}\n      ></ColorButton>\n      <CalciteLabel>\n        Font Size\n        <CalciteInput\n          type=\"number\"\n          min={5}\n          max={125}\n          value={fontSize.toString()}\n          onCalciteInputInput={(e) => {\n            setFontSize(parseFloat(e.target.value));\n            props.textSymbolUpdated(\n              fontSize,\n              fontColor,\n              haloSize,\n              haloColor,\n              showHalo,\n              textContent\n            );\n          }}\n        ></CalciteInput>\n      </CalciteLabel>\n      <CalciteLabel layout=\"inline\">\n        Halo\n        <CalciteSwitch\n          checked={showHalo ? true : undefined}\n          onCalciteSwitchChange={(e) => {\n            setShowHalo(e.target.checked);\n            props.textSymbolUpdated(\n              fontSize,\n              fontColor,\n              haloSize,\n              haloColor,\n              showHalo,\n              textContent\n            );\n          }}\n        ></CalciteSwitch>\n      </CalciteLabel>\n      <div id=\"halo\" hidden={showHalo ? undefined : true}>\n        <ColorButton\n          id=\"halo\"\n          label=\"\"\n          color={haloColor.toRgba()}\n          hideTransparency\n          colorSet={(c: any) => {\n            setHaloColor(c);\n            props.textSymbolUpdated(\n              fontSize,\n              fontColor,\n              haloSize,\n              c,\n              showHalo,\n              textContent\n            );\n          }}\n        ></ColorButton>\n        <CalciteLabel>\n          Size\n          <CalciteInput\n            type=\"number\"\n            min={1}\n            max={10}\n            value={haloSize.toString()}\n            onCalciteInputInput={(e) => {\n              setHaloSize(parseFloat(e.target.value));\n              props.textSymbolUpdated(\n                fontSize,\n                fontColor,\n                haloSize,\n                haloColor,\n                showHalo,\n                textContent\n              );\n            }}\n          ></CalciteInput>\n        </CalciteLabel>\n      </div>\n    </div>\n  );\n}\nexport default React.memo(TextSymbols);\n","import { CalciteIcon, CalciteLabel } from \"@esri/calcite-components-react\";\nimport React from \"react\";\nimport \"./Sketch.css\";\ninterface Props {\n  symbol: any;\n  pickerClicked: Function;\n}\nfunction IconPicker(props: Props) {\n  return (\n    <div id=\"icon-picker\">\n      <div id=\"icon-preview\" className=\"preview\"></div>\n      <CalciteLabel alignment=\"start\" scale=\"m\" layout=\"default\">\n        <button\n          className=\"change-symbol-trigger\"\n          type=\"button\"\n          onClick={() => {\n            props.pickerClicked();\n          }}\n        >\n          <div className=\"container\">\n            {props.symbol && (\n              <div className=\"icon-symbol\">\n                <img\n                  src={`${\n                    props.symbol.url\n                  }${props.symbol.thumbnail.href.replace(\".\", \"\")}`}\n                  alt={props.symbol.title}\n                  width={50}\n                  height={50}\n                />\n              </div>\n            )}\n\n            <div className=\"icon-label\">{props.symbol.title}</div>\n            <CalciteIcon icon=\"chevron-right\"></CalciteIcon>\n          </div>\n        </button>\n      </CalciteLabel>\n    </div>\n  );\n}\n\nexport default React.memo(IconPicker);\n","import {\n  CalciteBlock,\n  CalciteFlow,\n  CalciteFlowItem,\n} from \"@esri/calcite-components-react\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Sketch.css\";\ninterface Props {\n  symbols: any[];\n  backClicked: Function;\n  iconSelected: Function;\n}\nfunction IconSelectionPanel(props: Props) {\n  const [symbols, setSymbols] = useState<any[]>([]);\n  useEffect(() => {\n    if (symbols && props.symbols) {\n      setSymbols(props.symbols);\n    }\n  }, []);\n\n  return (\n    <div id=\"icon-selection\">\n      <CalciteFlow>\n        <CalciteFlowItem></CalciteFlowItem>\n        <CalciteFlowItem\n          heading=\"Change Symbol\"\n          onCalciteFlowItemBack={() => {\n            props.backClicked();\n          }}\n        >\n          <CalciteBlock heading={\"\"}>\n            <div className=\"palette\">\n              {symbols &&\n                symbols.map((symbol: any, i: number) => {\n                  return (\n                    <img\n                      onClick={() => {\n                        props.iconSelected(symbol);\n                        props.backClicked();\n                      }}\n                      className=\"item\"\n                      key={`icon-${i}`}\n                      alt={symbol.title}\n                      src={`${symbol.url}${symbol.thumbnail.href.replace(\n                        \".\",\n                        \"\"\n                      )}`}\n                    ></img>\n                  );\n                })}\n            </div>\n          </CalciteBlock>\n        </CalciteFlowItem>\n      </CalciteFlow>\n    </div>\n  );\n}\n\nexport default React.memo(IconSelectionPanel);\n","import \"@esri/calcite-components/dist/components/calcite-input\";\nimport \"@esri/calcite-components/dist/components/calcite-label\";\nimport \"@esri/calcite-components/dist/components/calcite-panel\";\n\nimport {\n  CalciteInput,\n  CalciteLabel,\n  CalcitePanel,\n} from \"@esri/calcite-components-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { getSymbols } from \"./utils/sketch\";\nimport IconPicker from \"./IconPicker\";\nimport IconSelectionPanel from \"./IconSelectionPanel\";\nimport ColorButton from \"./ColorButton\";\nimport Color from \"@arcgis/core/Color\";\ninterface Props {\n  pointSymbolUpdated: Function;\n}\nfunction PointSymbols(props: Props) {\n  const [symbols, setSymbols] = useState<any[]>([]);\n  const [symbol, setSymbol] = useState<any>();\n  const [pointSize, setPointSize] = useState(16);\n\n  const url = \"https://www.arcgis.com/sharing/rest/content/items/\";\n  const ids = [\n    \"a63b3a4631ae41d4a1bc3ba6d9c85bfe\",\n    \"70ccf6bcbd304773a164be896e76edd3\",\n  ];\n\n  const [activeFlow, setActiveFlow] = useState(\"main\");\n  const [pointColor, setPointColor] = useState<Color>(\n    new Color([255, 0, 0, 1])\n  );\n\n  useEffect(() => {\n    getSymbols(ids, url).then((items: any) => {\n      setSymbols(items as any[]);\n      if (items.length) {\n        setSymbol(items[0]);\n        props.pointSymbolUpdated(items[0], pointColor, pointSize);\n      }\n    });\n  }, []);\n  return (\n    <div id=\"point-symbols\">\n      {symbols.length && (\n        <div>\n          {activeFlow === \"main\" && (\n            <CalcitePanel>\n              <IconPicker\n                pickerClicked={() => setActiveFlow(\"icon\")}\n                symbol={symbol}\n              ></IconPicker>\n              <ColorButton\n                id=\"point\"\n                label=\"Point\"\n                color={pointColor.toRgba()}\n                colorSet={(c: any) => {\n                  setPointColor(c);\n                  props.pointSymbolUpdated(symbol, c, pointSize);\n                }}\n              ></ColorButton>\n              <CalciteLabel>\n                Size\n                <CalciteInput\n                  type=\"number\"\n                  min={6}\n                  max={72}\n                  value={pointSize.toString()}\n                  onCalciteInputChange={(e: any) => {\n                    setPointSize(parseFloat(e.target.value));\n                    props.pointSymbolUpdated(\n                      symbol,\n                      pointColor,\n                      parseFloat(e.target.value)\n                    );\n                  }}\n                ></CalciteInput>\n              </CalciteLabel>\n            </CalcitePanel>\n          )}\n          {activeFlow === \"icon\" && (\n            <IconSelectionPanel\n              iconSelected={(icon: any) => {\n                setSymbol(icon);\n                props.pointSymbolUpdated(icon, pointColor, pointSize);\n              }}\n              backClicked={() => setActiveFlow(\"main\")}\n              symbols={symbols}\n            ></IconSelectionPanel>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(PointSymbols);\n","export const tips = {\n  title: \"Sketch Tips\",\n  tips: [\n    {\n      title: \"Custom Symbols\",\n      text: \"You can now specify custom symbols in the sketch tool by changing the fill color, outline color, size, etc. of your graphics.\",\n    },\n  ],\n};\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { ToolProps } from \"../../utils/ToolProps\";\nimport {\n  cancelSketch,\n  initializeSketchViewModel,\n  sketchActivated,\n} from \"./sketch\";\nimport { tips } from \"./tips\";\n\nconst useSketch = (props: ToolProps) => {\n  const loaded = useRef(false);\n  const [activeSketchTool, setActiveSketchTool] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n  const [selectedGraphics, setSelectedGraphics] = useState<__esri.Graphic[]>(\n    []\n  );\n\n  useEffect(() => {\n    if (!loaded.current) {\n      initializeSketchViewModel(\n        props.view,\n        setActiveSketchTool,\n        selectedGraphics,\n        setSelectedGraphics\n      );\n    }\n  }, []);\n  useEffect(() => {\n    setIsActive(props.isActive);\n    if (!props.isActive) {\n      props.toolDismissed();\n      cancelSketch();\n      setActiveSketchTool(\"\");\n      setSelectedGraphics([...[], ...[]]);\n      //props.view.highlightOptions = {fillOpacity: 0.25, color: '#00ffff', haloColor: '#00ffff', haloOpacity: 1} as any;\n    } else {\n      (props.view as __esri.MapView).popup.autoOpenEnabled = false;\n\n    }\n  }, [props.isActive]);\n  const toolDismissed = useCallback(() => {\n    props.toolDismissed();\n    cancelSketch();\n    setActiveSketchTool(\"\");\n    setSelectedGraphics([...[], ...[]]);\n\n    //props.view.highlightOptions = {fillOpacity: 0.25, color: '#00ffff', haloColor: '#00ffff', haloOpacity: 1} as any;\n  }, []);\n  const tipsClicked = useCallback((e: any) => {\n    props.showTips(tips);\n  }, []);\n  const checkGeometryType = (\n    selectedGraphics: __esri.Graphic[],\n    geometryType: string\n  ) => {\n    const geometryTypes = selectedGraphics.map((graphic) => {\n      let type: string = graphic.geometry.type;\n      if (graphic.symbol.type === \"text\") {\n        type = \"text\";\n      }\n      return type;\n    });\n    const uniqueTypes = geometryTypes.filter((t, index) => {\n      return geometryTypes.indexOf(t) === index;\n    });\n    if (\n      uniqueTypes.length > 1 ||\n      uniqueTypes.length < 1 ||\n      selectedGraphics.length !== 1\n    ) {\n      return false;\n    }\n    if (uniqueTypes.length === 1 && uniqueTypes[0] === geometryType) {\n      return true;\n    }\n  };\n  return {\n    activeSketchTool,\n    setActiveSketchTool,\n    selectedGraphics,\n    setSelectedGraphics,\n    isActive,\n    toolDismissed,\n    tipsClicked,\n    checkGeometryType,\n  };\n};\n\nexport default useSketch;\n","import React from \"react\";\n\nimport {\n  CalciteAction,\n  CalciteActionGroup,\n  CalciteButton,\n  CalcitePanel,\n  CalciteTooltip,\n} from \"@esri/calcite-components-react\";\nimport \"./Sketch.css\";\nimport {\n  clearSketch,\n  deleteSelectedGraphics,\n  pointSymbolUpdated,\n  polygonSymbolUpdated,\n  polylineSymbolUpdated,\n  stopSketching,\n  textSymbolUpdated,\n  toolSelected,\n} from \"./utils/sketch\";\nimport LineSymbols from \"./LineSymbols\";\nimport PolygonSymbols from \"./PolygonSymbols\";\nimport TextSymbols from \"./TextSymbols\";\nimport PointSymbols from \"./PointSymbols\";\nimport { collapsePanel } from \"../../Shell/utils/shell\";\nimport useSketch from \"./utils/useSketch\";\nimport { ToolProps } from \"../utils/ToolProps\";\nfunction Sketch(props: ToolProps) {\n  const {\n    activeSketchTool,\n    setActiveSketchTool,\n    selectedGraphics,\n    setSelectedGraphics,\n    isActive,\n    toolDismissed,\n    tipsClicked,\n    checkGeometryType,\n  } = useSketch(props);\n  return (\n    <CalcitePanel\n      id=\"sketch-panel\"\n      heading=\"Sketch\"\n      data-panel=\"sketch\"\n      hidden={!isActive}\n      closed={!isActive ? true : undefined}\n      closable\n      onCalcitePanelClose={toolDismissed}\n    >\n      <CalciteAction\n        id=\"tip\"\n        icon=\"lightbulb\"\n        text=\"Tips\"\n        slot=\"header-actions-end\"\n        onClick={tipsClicked}\n      ></CalciteAction>\n      <CalciteAction\n        id=\"collapseTool\"\n        icon=\"chevron-up\"\n        text=\"\"\n        slot=\"header-actions-end\"\n        onClick={collapsePanel}\n      ></CalciteAction>\n      <CalciteTooltip closeOnClick label=\"Show Tip\" referenceElement=\"tip\">\n        Show Tip\n      </CalciteTooltip>\n      <CalciteTooltip\n        closeOnClick\n        label=\"Collapse\"\n        referenceElement=\"collapseTool\"\n      >\n        Collapse\n      </CalciteTooltip>\n      <div id=\"sketch-tools\">\n        <div className=\"sticky\">\n          <CalciteActionGroup layout=\"horizontal\">\n            <CalciteAction\n              id=\"point\"\n              active={activeSketchTool === \"point\" ? true : undefined}\n              icon=\"pin\"\n              text={\"\"}\n              onClick={() =>\n                toolSelected(\"point\", activeSketchTool, setActiveSketchTool)\n              }\n            ></CalciteAction>\n            <CalciteTooltip closeOnClick label=\"Point\" referenceElement=\"point\">\n              Point\n            </CalciteTooltip>\n\n            <CalciteAction\n              id=\"line\"\n              active={activeSketchTool === \"polyline\" ? true : undefined}\n              icon=\"line\"\n              text={\"\"}\n              onClick={() =>\n                toolSelected(\"polyline\", activeSketchTool, setActiveSketchTool)\n              }\n            ></CalciteAction>\n            <CalciteTooltip closeOnClick label=\"Line\" referenceElement=\"line\">\n              Line\n            </CalciteTooltip>\n            <CalciteAction\n              id=\"polygon\"\n              active={activeSketchTool === \"polygon\" ? true : undefined}\n              icon=\"polygon\"\n              text={\"\"}\n              onClick={() =>\n                toolSelected(\"polygon\", activeSketchTool, setActiveSketchTool)\n              }\n            ></CalciteAction>\n            <CalciteTooltip\n              closeOnClick\n              label=\"Polygon\"\n              referenceElement=\"polygon\"\n            >\n              Polygon\n            </CalciteTooltip>\n            <CalciteAction\n              id=\"rectangle\"\n              active={activeSketchTool === \"rectangle\" ? true : undefined}\n              icon=\"rectangle\"\n              text={\"\"}\n              onClick={() =>\n                toolSelected(\"rectangle\", activeSketchTool, setActiveSketchTool)\n              }\n            ></CalciteAction>\n            <CalciteTooltip\n              closeOnClick\n              label=\"Rectangle\"\n              referenceElement=\"rectangle\"\n            >\n              Rectangle\n            </CalciteTooltip>\n            <CalciteAction\n              id=\"circle\"\n              active={activeSketchTool === \"circle\" ? true : undefined}\n              icon=\"circle\"\n              text={\"\"}\n              onClick={() =>\n                toolSelected(\"circle\", activeSketchTool, setActiveSketchTool)\n              }\n            ></CalciteAction>\n            <CalciteTooltip\n              closeOnClick\n              label=\"Circle\"\n              referenceElement=\"circle\"\n            >\n              Circle\n            </CalciteTooltip>\n            <CalciteAction\n              id=\"text\"\n              active={activeSketchTool === \"text\" ? true : undefined}\n              icon=\"text\"\n              text={\"\"}\n              onClick={() =>\n                toolSelected(\"text\", activeSketchTool, setActiveSketchTool)\n              }\n            ></CalciteAction>\n            <CalciteTooltip closeOnClick label=\"Text\" referenceElement=\"text\">\n              Text\n            </CalciteTooltip>\n          </CalciteActionGroup>\n          <CalciteActionGroup layout=\"horizontal\">\n            <CalciteAction\n              id=\"selectSketch\"\n              icon=\"cursor\"\n              text={\"\"}\n              active={activeSketchTool === \"select\" ? true : undefined}\n              onClick={() => {\n                stopSketching();\n                toolSelected(\"select\", activeSketchTool, setActiveSketchTool);\n                setTimeout(() => {\n                  (props.view as __esri.MapView).popup.autoOpenEnabled = false;\n                }, 1000);\n              }}\n            ></CalciteAction>\n            <CalciteTooltip\n              closeOnClick\n              label=\"Select Sketch\"\n              referenceElement=\"selectSketch\"\n            >\n              Select Sketch\n            </CalciteTooltip>\n            <CalciteAction\n              id=\"clearSketch\"\n              icon=\"trash\"\n              text={\"\"}\n              onClick={() =>\n                clearSketch(setActiveSketchTool, setSelectedGraphics)\n              }\n            ></CalciteAction>\n            <CalciteTooltip\n              closeOnClick\n              label=\"Clear Sketches\"\n              referenceElement=\"clearSketch\"\n            >\n              Clear Sketches\n            </CalciteTooltip>\n          </CalciteActionGroup>\n        </div>\n        <div\n          id=\"point-symbols\"\n          className=\"symbol\"\n          hidden={\n            activeSketchTool === \"point\" ||\n            (checkGeometryType(selectedGraphics, \"point\") &&\n              activeSketchTool === \"select\")\n              ? undefined\n              : true\n          }\n        >\n          <PointSymbols pointSymbolUpdated={pointSymbolUpdated}></PointSymbols>\n        </div>\n        <div\n          id=\"line-symbols\"\n          className=\"symbol\"\n          hidden={\n            activeSketchTool === \"polyline\" ||\n            (checkGeometryType(selectedGraphics, \"polyline\") &&\n              activeSketchTool === \"select\")\n              ? undefined\n              : true\n          }\n        >\n          <LineSymbols\n            polylineSymbolUpdated={polylineSymbolUpdated}\n          ></LineSymbols>\n        </div>\n        <div\n          id=\"polygon-symbols\"\n          className=\"symbol\"\n          hidden={\n            [\"polygon\", \"rectangle\", \"circle\"].includes(activeSketchTool) ||\n            (checkGeometryType(selectedGraphics, \"polygon\") &&\n              activeSketchTool === \"select\")\n              ? undefined\n              : true\n          }\n        >\n          <PolygonSymbols\n            polygonSymbolUpdated={polygonSymbolUpdated}\n          ></PolygonSymbols>\n        </div>\n        <div\n          id=\"text-symbols\"\n          className=\"symbol\"\n          hidden={\n            activeSketchTool === \"text\" ||\n            (checkGeometryType(selectedGraphics, \"text\") &&\n              activeSketchTool === \"select\")\n              ? undefined\n              : true\n          }\n        >\n          <TextSymbols textSymbolUpdated={textSymbolUpdated}></TextSymbols>\n        </div>\n        {selectedGraphics.length > 0 && (\n          <CalciteButton\n            onClick={() =>\n              deleteSelectedGraphics(selectedGraphics, setSelectedGraphics)\n            }\n            alignment=\"center\"\n            kind=\"danger\"\n            appearance=\"transparent\"\n            icon-end=\"trash\"\n          >\n            {selectedGraphics.length}{\" \"}\n            {selectedGraphics.length > 1 ? \"features\" : \"feature\"}\n          </CalciteButton>\n        )}\n      </div>\n    </CalcitePanel>\n  );\n}\n\nexport default React.memo(Sketch);\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../chunks/tslib.es6.js\";import\"../geometry.js\";import t from\"../Graphic.js\";import\"../symbols.js\";import r from\"../core/Collection.js\";import o from\"../core/Error.js\";import{clone as i}from\"../core/lang.js\";import{isSome as l,isNone as a}from\"../core/maybe.js\";import{MultiOriginJSONMixin as n}from\"../core/MultiOriginJSONSupport.js\";import{setDeepValue as s}from\"../core/object.js\";import p from\"../core/Warning.js\";import{property as y}from\"../core/accessorSupport/decorators/property.js\";import\"../core/accessorSupport/ensureType.js\";import{reader as m}from\"../core/accessorSupport/decorators/reader.js\";import{subclass as u}from\"../core/accessorSupport/decorators/subclass.js\";import{writer as c}from\"../core/accessorSupport/decorators/writer.js\";import{projectOrLoad as f,canProjectWithoutEngine as d,isLoaded as g,load as b,project as S}from\"../geometry/projection.js\";import{empty as h,expand as O,equals as w,toExtent as j,NEGATIVE_INFINITY as N}from\"../geometry/support/aaBoundingRect.js\";import{normalizeCentralMeridian as L}from\"../geometry/support/normalizeUtils.js\";import{equals as x}from\"../geometry/support/spatialReferenceUtils.js\";import J from\"./FeatureLayer.js\";import T from\"./GraphicsLayer.js\";import v from\"./Layer.js\";import{findLastObjectIdFromFeatures as C}from\"./graphics/objectIdUtils.js\";import{BlendLayer as M}from\"./mixins/BlendLayer.js\";import{OperationalLayer as I}from\"./mixins/OperationalLayer.js\";import{PortalLayer as R}from\"./mixins/PortalLayer.js\";import{ScaleRangeLayer as E}from\"./mixins/ScaleRangeLayer.js\";import D from\"./support/Field.js\";import _ from\"../symbols/SimpleFillSymbol.js\";import G from\"../symbols/SimpleLineSymbol.js\";import P from\"../symbols/SimpleMarkerSymbol.js\";import F from\"../symbols/TextSymbol.js\";import B from\"../geometry/SpatialReference.js\";import k from\"../geometry/Extent.js\";function z(e){return\"markup\"===e.featureCollectionType||e.layers.some((e=>null!=e.layerDefinition.visibilityField||!U(e)))}function U({layerDefinition:e,featureSet:t}){const r=e.geometryType??t.geometryType;return H.find((t=>r===t.geometryTypeJSON&&e.drawingInfo?.renderer?.symbol?.type===t.identifyingSymbol.type))}function W(){return new k({xmin:-180,ymin:-90,xmax:180,ymax:90})}const A=new D({name:\"OBJECTID\",alias:\"OBJECTID\",type:\"oid\",nullable:!1,editable:!1}),$=new D({name:\"title\",alias:\"Title\",type:\"string\",nullable:!0,editable:!0});let q=class extends T{constructor(e){super(e),this.visibilityMode=\"inherited\"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on(\"after-add\",(e=>{e.item.sourceLayer=this.layer})),this.graphics.on(\"after-remove\",(e=>{e.item.sourceLayer=null}))}get fullExtent(){const e=this.layer?.spatialReference,t=this.fullBounds;return e?a(t)?f(W(),e).geometry:j(t,e):null}get fullBounds(){const e=this.layer?.spatialReference;if(!e)return null;const t=h();return this.graphics.forEach((r=>{const o=l(r.geometry)?f(r.geometry,e).geometry:null;l(o)&&O(t,\"point\"===o.type?o:o.extent,t)})),w(t,N)?null:t}get sublayers(){return this.graphics}};e([y({readOnly:!0})],q.prototype,\"fullExtent\",null),e([y({readOnly:!0})],q.prototype,\"fullBounds\",null),e([y({readOnly:!0})],q.prototype,\"sublayers\",null),e([y()],q.prototype,\"layer\",void 0),e([y()],q.prototype,\"layerId\",void 0),e([y({readOnly:!0})],q.prototype,\"visibilityMode\",void 0),q=e([u(\"esri.layers.MapNotesLayer.MapNotesSublayer\")],q);const H=[{geometryType:\"polygon\",geometryTypeJSON:\"esriGeometryPolygon\",id:\"polygonLayer\",layerId:0,title:\"Polygons\",identifyingSymbol:(new _).toJSON()},{geometryType:\"polyline\",geometryTypeJSON:\"esriGeometryPolyline\",id:\"polylineLayer\",layerId:1,title:\"Polylines\",identifyingSymbol:(new G).toJSON()},{geometryType:\"multipoint\",geometryTypeJSON:\"esriGeometryMultipoint\",id:\"multipointLayer\",layerId:2,title:\"Multipoints\",identifyingSymbol:(new P).toJSON()},{geometryType:\"point\",geometryTypeJSON:\"esriGeometryPoint\",id:\"pointLayer\",layerId:3,title:\"Points\",identifyingSymbol:(new P).toJSON()},{geometryType:\"point\",geometryTypeJSON:\"esriGeometryPoint\",id:\"textLayer\",layerId:4,title:\"Text\",identifyingSymbol:(new F).toJSON()}];let K=class extends(M(E(I(R(n(v)))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType=\"notes\",this.legendEnabled=!1,this.listMode=\"hide-children\",this.minScale=0,this.maxScale=0,this.spatialReference=B.WGS84,this.sublayers=new r(H.map((e=>new q({id:e.id,layerId:e.layerId,title:e.title,layer:this})))),this.title=\"Map Notes\",this.type=\"map-notes\",this.visibilityMode=\"inherited\"}readCapabilities(e,t,r){return{operations:{supportsMapNotesEditing:!z(t)&&\"portal-item\"!==r?.origin}}}readFeatureCollections(e,t,o){if(!z(t))return null;const i=t.layers.map((e=>{const t=new J;return t.read(e,o),t}));return new r({items:i})}readLegacyfeatureCollectionJSON(e,t){return z(t)?i(t.featureCollection):null}get fullExtent(){const e=this.spatialReference,t=h();if(l(this.sublayers))this.sublayers.forEach((({fullBounds:e})=>l(e)?O(t,e,t):t),t);else if(this.featureCollectionJSON?.layers.some((e=>e.layerDefinition.extent))){this.featureCollectionJSON.layers.forEach((r=>{const o=f(r.layerDefinition.extent,e).geometry;l(o)&&O(t,o,t)}))}return w(t,N)?f(W(),e).geometry:j(t,e)}readMinScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.minScale)return r.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.maxScale)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer(\"multipointLayer\")}get pointLayer(){return this._findSublayer(\"pointLayer\")}get polygonLayer(){return this._findSublayer(\"polygonLayer\")}get polylineLayer(){return this._findSublayer(\"polylineLayer\")}readSpatialReference(e,t){return t.layers.length?B.fromJSON(t.layers[0].layerDefinition.spatialReference):B.WGS84}readSublayers(e,o,i){if(z(o))return null;const a=[];let n=o.layers.reduce(((e,t)=>Math.max(e,t.layerDefinition.id??-1)),-1)+1;for(const r of o.layers){const{layerDefinition:e,featureSet:o}=r,i=e.id??n++,s=U(r);if(l(s)){const r=new q({id:s.id,title:e.name,layerId:i,layer:this,graphics:o.features.map((({geometry:e,symbol:r,attributes:o,popupInfo:i})=>t.fromJSON({attributes:o,geometry:e,symbol:r,popupTemplate:i})))});a.push(r)}}return new r(a)}writeSublayers(e,t,r,i){const{minScale:n,maxScale:p}=this;if(a(e))return;const y=e.some((e=>e.graphics.length>0));if(!this.capabilities.operations.supportsMapNotesEditing)return void(y&&i?.messages?.push(new o(\"map-notes-layer:editing-not-supported\",\"New map notes cannot be added to this layer\")));const m=[];let u=this.spatialReference.toJSON();e:for(const o of e)for(const e of o.graphics)if(l(e.geometry)){u=e.geometry.spatialReference.toJSON();break e}for(const o of H){const t=e.find((e=>o.id===e.id));this._writeMapNoteSublayer(m,t,o,n,p,u,i)}s(\"featureCollection.layers\",m,t)}get textLayer(){return this._findSublayer(\"textLayer\")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:[\"Feature Collection\"]},e)),Promise.resolve(this)}read(e,t){\"featureCollection\"in e&&(e=i(e),Object.assign(e,e.featureCollection)),super.read(e,t)}async beforeSave(){if(a(this.sublayers))return;let e=null;const t=[];for(const o of this.sublayers)for(const r of o.graphics)if(l(r.geometry)){const o=r.geometry;e?x(o.spatialReference,e)||(d(o.spatialReference,e)||g()||await b(),r.geometry=S(o,e)):e=o.spatialReference,t.push(r)}const r=await L(t.map((e=>e.geometry)));t.forEach(((e,t)=>e.geometry=r[t]))}_findSublayer(e){return a(this.sublayers)?null:this.sublayers?.find((t=>t.id===e))??null}_writeMapNoteSublayer(e,t,r,o,l,n,s){const p=[];if(!a(t)){for(const e of t.graphics)this._writeMapNote(p,e,r.geometryType,s);this._normalizeObjectIds(p,A),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:\"simple\",symbol:i(r.identifyingSymbol)}},id:t.layerId,geometryType:r.geometryTypeJSON,minScale:o,maxScale:l,objectIdField:\"OBJECTID\",fields:[A.toJSON(),$.toJSON()],spatialReference:n},featureSet:{features:p,geometryType:r.geometryTypeJSON}})}}_writeMapNote(e,t,r,o){if(a(t))return;const{geometry:i,symbol:n,popupTemplate:s}=t;if(a(i))return;if(i.type!==r)return void o?.messages?.push(new p(\"map-notes-layer:invalid-geometry-type\",`Geometry \"${i.type}\" cannot be saved in \"${r}\" layer`,{graphic:t}));if(a(n))return void o?.messages?.push(new p(\"map-notes-layer:no-symbol\",\"Skipping map notes with no symbol\",{graphic:t}));const y={attributes:{...t.attributes},geometry:i.toJSON(),symbol:n.toJSON()};l(s)&&(y.popupInfo=s.toJSON()),e.push(y)}_normalizeObjectIds(e,t){const r=t.name;let o=C(r,e)+1;const i=new Set;for(const l of e){l.attributes||(l.attributes={});const{attributes:e}=l;(null==e[r]||i.has(e[r]))&&(e[r]=o++),i.add(e[r])}}};e([y({readOnly:!0})],K.prototype,\"capabilities\",void 0),e([m([\"portal-item\",\"web-map\"],\"capabilities\",[\"layers\"])],K.prototype,\"readCapabilities\",null),e([y({readOnly:!0})],K.prototype,\"featureCollections\",void 0),e([m([\"web-map\",\"portal-item\"],\"featureCollections\",[\"layers\"])],K.prototype,\"readFeatureCollections\",null),e([y({readOnly:!0,json:{origins:{\"web-map\":{write:{enabled:!0,target:\"featureCollection\"}}}}})],K.prototype,\"featureCollectionJSON\",void 0),e([m([\"web-map\",\"portal-item\"],\"featureCollectionJSON\",[\"featureCollection\"])],K.prototype,\"readLegacyfeatureCollectionJSON\",null),e([y({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],K.prototype,\"featureCollectionType\",void 0),e([y({readOnly:!0})],K.prototype,\"fullExtent\",null),e([y({readOnly:!0,json:{origins:{\"web-map\":{write:{target:\"featureCollection.showLegend\",overridePolicy(){return{enabled:null!=this.featureCollectionJSON}}}}}}})],K.prototype,\"legendEnabled\",void 0),e([y({type:[\"show\",\"hide\",\"hide-children\"]})],K.prototype,\"listMode\",void 0),e([y({type:Number,nonNullable:!0,json:{write:!1}})],K.prototype,\"minScale\",void 0),e([m([\"web-map\",\"portal-item\"],\"minScale\",[\"layers\"])],K.prototype,\"readMinScale\",null),e([y({type:Number,nonNullable:!0,json:{write:!1}})],K.prototype,\"maxScale\",void 0),e([m([\"web-map\",\"portal-item\"],\"maxScale\",[\"layers\"])],K.prototype,\"readMaxScale\",null),e([y({readOnly:!0})],K.prototype,\"multipointLayer\",null),e([y({value:\"ArcGISFeatureLayer\",type:[\"ArcGISFeatureLayer\"]})],K.prototype,\"operationalLayerType\",void 0),e([y({readOnly:!0})],K.prototype,\"pointLayer\",null),e([y({readOnly:!0})],K.prototype,\"polygonLayer\",null),e([y({readOnly:!0})],K.prototype,\"polylineLayer\",null),e([y({type:B})],K.prototype,\"spatialReference\",void 0),e([m([\"web-map\",\"portal-item\"],\"spatialReference\",[\"layers\"])],K.prototype,\"readSpatialReference\",null),e([y({readOnly:!0,json:{origins:{\"web-map\":{write:{ignoreOrigin:!0}}}}})],K.prototype,\"sublayers\",void 0),e([m(\"web-map\",\"sublayers\",[\"layers\"])],K.prototype,\"readSublayers\",null),e([c(\"web-map\",\"sublayers\")],K.prototype,\"writeSublayers\",null),e([y({readOnly:!0})],K.prototype,\"textLayer\",null),e([y()],K.prototype,\"title\",void 0),e([y({readOnly:!0,json:{read:!1}})],K.prototype,\"type\",void 0),K=e([u(\"esri.layers.MapNotesLayer\")],K);const Q=K;export{Q as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nconst t=1;function n(t,n){let o=0;for(const e of n){const n=e.attributes?.[t];\"number\"==typeof n&&isFinite(n)&&(o=Math.max(o,n))}return o}export{n as findLastObjectIdFromFeatures,t as initialObjectId};\n"],"names":["pointLayer","polylineLayer","polygonLayer","textLayer","sketchLayer","pointSymbol","pointSketchViewModel","polylineSketchViewModel","polygonSketchViewModel","textSketchViewModel","sketchLayerView","selectedTool","fillSymbol","SimpleFillSymbol","color","style","outline","width","lineSymbol","SimpleLineSymbol","cap","join","textSymbol","TextSymbol","haloColor","haloSize","text","xoffset","yoffset","font","size","family","weight","createSketchViewModels","layer","view","isText","sketchVM","SketchViewModel","updateOnGraphicClick","on","addGraphic","e","state","graphic","geometry","type","symbol","add","create","tool","toolSelected","activeSketchTool","setActiveSketchTool","error","sketchActivated","cancelSketch","includes","updatingPolygonSymbol","polygonSymbolUpdated","async","fillColor","outlineColor","preview","document","getElementById","activeFillSymbol","updateHighlightedGraphicSymbol","innerHTML","symbolUtils","node","vm","updateGraphics","length","getItemAt","remove","clone","setTimeout","cancel","update","pointSymbolUpdated","ref","request","url","cimRef","replace","CIMSymbol","data","cimSymbolUtils","polylineSymbolUpdated","lineColor","polylineSymbol","forEach","textSymbolUpdated","fontSize","fontColor","showHalo","textContent","ColorButton","props","popover","useRef","picker","setColor","useState","transparency","setTransparency","useEffect","Color","id","label","iconEnd","kind","appearance","toHex","overlayPositioning","placement","referenceElement","heading","icon","slot","onClick","current","open","c","a","colorSet","hideSaved","hideHex","hideChannels","value","onCalciteColorPickerInput","target","hideTransparency","className","max","min","onCalciteSliderInput","numberButtonType","suffixText","onCalciteInputInput","parseInt","React","SizeSlider","setValue","sizeSet","parseFloat","LineSymbols","setLineColor","setWidth","toRgba","PolygonSymbols","setFillColor","setOutlineColor","TextSymbols","setFontColor","setFontSize","setShowHalo","setHaloSize","setHaloColor","setTextContent","scale","requestAnimationFrame","onCalciteInputChange","toString","layout","checked","undefined","onCalciteSwitchChange","hidden","IconPicker","alignment","pickerClicked","src","thumbnail","href","alt","title","height","IconSelectionPanel","symbols","setSymbols","onCalciteFlowItemBack","backClicked","map","i","iconSelected","PointSymbols","setSymbol","pointSize","setPointSize","ids","activeFlow","setActiveFlow","pointColor","setPointColor","Promise","resolve","reject","promises","WebStyleSymbol","styleUrl","name","push","items","all","then","results","result","item","getSymbols","tips","loaded","isActive","setIsActive","selectedGraphics","setSelectedGraphics","MapNotesLayer","listMode","layerView","whenLayerView","activeLineSymbol","viewModel","activeTool","graphics","initializeSketchViewModel","popup","autoOpenEnabled","toolDismissed","useCallback","tipsClicked","showTips","checkGeometryType","geometryType","geometryTypes","uniqueTypes","filter","t","index","indexOf","Sketch","useSketch","closed","closable","onCalcitePanelClose","collapsePanel","closeOnClick","active","removeAll","clearSketch","removeMany","deleteSelectedGraphics","z","featureCollectionType","layers","some","layerDefinition","visibilityField","U","featureSet","r","H","find","geometryTypeJSON","drawingInfo","renderer","identifyingSymbol","W","k","xmin","ymin","xmax","ymax","A","D","alias","nullable","editable","$","q","T","constructor","super","this","visibilityMode","initialize","sourceLayer","fullExtent","spatialReference","fullBounds","f","j","h","o","l","O","extent","w","N","sublayers","y","readOnly","prototype","u","layerId","_","toJSON","G","P","F","K","M","E","I","R","n","v","capabilities","operations","supportsMapNotesEditing","featureCollections","featureCollectionJSON","legendEnabled","minScale","maxScale","B","readCapabilities","origin","readFeatureCollections","J","read","readLegacyfeatureCollectionJSON","featureCollection","readMinScale","readMaxScale","multipointLayer","_findSublayer","readSpatialReference","readSublayers","reduce","Math","s","features","attributes","popupInfo","popupTemplate","writeSublayers","p","messages","m","_writeMapNoteSublayer","load","addResolvingPromise","loadFromPortal","supportedTypes","Object","assign","x","d","g","b","S","L","_writeMapNote","_normalizeObjectIds","objectIdField","fields","C","Set","has","json","origins","write","enabled","ignoreOrigin","overridePolicy","Number","nonNullable","Q","isFinite"],"sourceRoot":""}