{"version":3,"file":"static/js/9667.0abc02a4.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/node_modules/@stencil/core/internal/client|lazy|/^/.//.*/.entry/.js.*$/|include: //.entry/.js$/|exclude: //.system/.entry/.js$/|groupOptions: {}|namespace object","Components/Measure/Measure.tsx"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 67435;\nmodule.exports = webpackEmptyAsyncContext;","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect, useRef, useState } from 'react';\nimport Measurement from '@arcgis/core/widgets/Measurement';\nimport CoordinateConversion from '@arcgis/core/widgets/CoordinateConversion';\nimport Format from '@arcgis/core/widgets/CoordinateConversion/support/Format';\nimport Conversion from '@arcgis/core/widgets/CoordinateConversion/support/Conversion';\n\nimport Point from '@arcgis/core/geometry/Point';\nimport SpatialReference from '@arcgis/core/geometry/SpatialReference';\n\nimport './Measure.scss';\nimport PictureMarkerSymbol from '@arcgis/core/symbols/PictureMarkerSymbol';\nexport const Measure = (props: any) => {\n  const measureRef = useRef<HTMLDivElement>(null);\n  const coordRef = useRef<HTMLDivElement>(null);\n  const measurement = useRef<Measurement>();\n  const coordinates = useRef<CoordinateConversion>();\n  const distanceAction = useRef<HTMLCalciteActionElement>();\n  const areaAction = useRef<HTMLCalciteActionElement>();\n\n  const [widget, setWidget] = useState<string>();\n  const actionClicked = (e: any) => {\n    document.querySelectorAll('.measureTools calcite-action').forEach((element) => {\n      if (element != e.target) {\n        (element as HTMLCalciteActionElement).active = false;\n      }\n    });\n    if (measurement.current) {\n      measurement.current.view = props.view;\n      if (e.target.getAttribute('value') === 'distance') {\n        if (e.target.active) {\n          e.target.active = false;\n          setWidget(undefined);\n          measurement.current.clear();\n        } else {\n          e.target.active = true;\n          measurement.current.activeTool = 'distance';\n          setWidget('measurement');\n          props.measurementActivated(measurement.current, coordinates.current);\n        }\n        if (coordinates.current) {\n          coordinates.current.viewModel.mode = 'live';\n        }\n      }\n      if (e.target.getAttribute('value') === 'area') {\n        if (e.target.active) {\n          e.target.active = false;\n          setWidget(undefined);\n          measurement.current.clear();\n        } else {\n          e.target.active = true;\n          measurement.current.activeTool = 'area';\n          setWidget('measurement');\n          props.measurementActivated(measurement.current);\n        }\n        if (coordinates.current) {\n          coordinates.current.viewModel.mode = 'live';\n        }\n      }\n      if (e.target.getAttribute('value') === 'coordinates') {\n        if (e.target.active) {\n          e.target.active = false;\n          setWidget(undefined);\n        } else {\n          e.target.active = true;\n          props.measurementActivated(measurement.current, coordinates.current);\n          setWidget('coordinates');\n          if (coordinates.current) {\n            coordinates.current.mode = 'capture';\n          }\n        }\n      }\n      if (e.target.getAttribute('value') === 'clear') {\n        measurement.current.clear();\n        if (coordinates.current) {\n          coordinates.current.mode = 'live';\n        }\n        setWidget(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    measurement.current = new Measurement({\n      container: measureRef.current as HTMLDivElement,\n      view: props.view,\n      areaUnit: 'imperial',\n      linearUnit: 'imperial',\n    });\n    measurement.current.viewModel.watch('state', (state) => {\n      if (state === 'ready') {\n        document.querySelectorAll('#measureTools calcite-action').forEach((action) => {\n          (action as HTMLCalciteActionElement).active = false;\n        });\n        props.measurementActivated(measurement.current);\n      }\n      if (state === 'measured' && measurement.current) {\n        measurement.current.view.popup.autoOpenEnabled = true;\n      }\n      if ((state === 'ready' || state === 'measuring') && measurement.current) {\n        measurement.current.view.popup.autoOpenEnabled = false;\n      }\n    });\n    const conversion = new CoordinateConversion({\n      container: coordRef.current as HTMLDivElement,\n      view: props.view,\n    });\n    conversion.viewModel.locationSymbol = new PictureMarkerSymbol({ url: 'assets/pin.svg', height: 36, width: 36 });\n    coordinates.current = conversion;\n    conversion.viewModel.watch('mode', (mode) => {\n      (props.view as __esri.MapView).popup.autoOpenEnabled = mode === 'live';\n    });\n    const numberSearchPattern = /-?\\d+[\\.]?\\d*/;\n\n    const stateplane = new Format({\n      name: 'Stateplane Feet',\n      conversionInfo: {\n        spatialReference: new SpatialReference({ wkid: 2264 }),\n        reverseConvert: function (string: string) {\n          const parts = string.split(',');\n          return new Point({\n            x: parseFloat(parts[0]),\n            y: parseFloat(parts[1]),\n            spatialReference: { wkid: 2264 },\n          });\n        },\n      } as any,\n      coordinateSegments: [\n        {\n          alias: 'X',\n          description: 'easting',\n          searchPattern: numberSearchPattern,\n        },\n        {\n          alias: 'Y',\n          description: 'northing',\n          searchPattern: numberSearchPattern,\n        },\n      ],\n      defaultPattern: 'X, Y',\n    });\n\n    // Add our new format to the widget's dropdown\n    conversion.formats.add(stateplane);\n\n    // Add the two custom formats to the top of the widget's display\n    conversion.conversions.splice(\n      0,\n      0,\n      new Conversion({\n        format: stateplane,\n      }),\n    );\n\n    conversion.when(() => {\n      conversion.formats = conversion.formats.filter((format) => {\n        return !['basemap', 'dd', 'ddm'].includes(format.name);\n      });\n      conversion.formats.find((format) => {\n        return format.name === 'xy';\n      }).name = 'Decimal Degrees';\n      //conversion.storageEnabled = false;\n      // document.querySelectorAll('.esri-coordinate-conversion__select-row option').forEach((format) => {\n      //   format.removeAttribute('disabled');\n      // });\n      // document.querySelector('.esri-coordinate-conversion__select-row')?.addEventListener('change', (event) => {\n      //   console.log(event);\n      //   document.querySelectorAll('.esri-coordinate-conversion__select-row option').forEach((format) => {\n      //     format.removeAttribute('disabled');\n      //   });\n      // });\n    });\n    requestAnimationFrame(() => {\n      const observer: MutationObserver = new MutationObserver((mutations) => {\n        if (mutations.length) {\n          document.querySelector('.esri-distance-measurement-2d__clear-button')?.addEventListener('click', () => {\n            if (!(measurement.current?.view as any).activeTool.attached) {\n              measurement.current?.clear();\n              if (measurement.current) {\n                if (distanceAction.current) {\n                  distanceAction.current.active = true;\n                }\n                measurement.current = new Measurement({\n                  container: measureRef.current as HTMLDivElement,\n                  view: props.view,\n                  areaUnit: 'imperial',\n                  linearUnit: 'imperial',\n                });\n                measurement.current.activeTool = 'distance';\n                setWidget('measurement');\n                props.measurementActivated(measurement.current, coordinates.current);\n              }\n            }\n          });\n          document.querySelector('.esri-area-measurement-2d__clear-button')?.addEventListener('click', () => {\n            if (!(measurement.current?.view as any).activeTool.attached) {\n              measurement.current?.clear();\n              if (measurement.current) {\n                if (areaAction.current) {\n                  areaAction.current.active = true;\n                }\n                measurement.current = new Measurement({\n                  container: measureRef.current as HTMLDivElement,\n                  view: props.view,\n                  areaUnit: 'imperial',\n                  linearUnit: 'imperial',\n                });\n                measurement.current.activeTool = 'area';\n                setWidget('measurement');\n                props.measurementActivated(measurement.current, coordinates.current);\n              }\n            }\n          });\n          //observer.disconnect();\n        }\n      });\n      observer.observe(document.querySelector('#measure') as Node, {\n        attributes: true,\n        childList: true,\n      });\n    });\n\n    return () => {\n      measurement && measurement.current?.destroy();\n    };\n  }, [props.view]); // only after initial render\n\n  return (\n    <div className=\"panel\" id=\"measurePanel\">\n      <div className=\"measureTools\">\n        <calcite-action\n          text=\"Distance\"\n          appearance=\"outline\"\n          icon=\"measure-line\"\n          id=\"lineMeasure\"\n          value=\"distance\"\n          text-enabled\n          onClick={actionClicked}\n          ref={distanceAction}\n        ></calcite-action>\n        <calcite-action\n          text=\"Area\"\n          appearance=\"outline\"\n          icon=\"measure-area\"\n          id=\"areaMeasure\"\n          value=\"area\"\n          text-enabled\n          onClick={actionClicked}\n          ref={areaAction}\n        ></calcite-action>\n        <calcite-action\n          text=\"Coordinates\"\n          appearance=\"outline\"\n          icon=\"pins\"\n          id=\"coordinates\"\n          value=\"coordinates\"\n          text-enabled\n          onClick={actionClicked}\n        ></calcite-action>\n        <calcite-action\n          text=\"Clear\"\n          appearance=\"outline\"\n          icon=\"trash\"\n          id=\"clearMeasure\"\n          value=\"clear\"\n          text-enabled\n          onClick={actionClicked}\n        ></calcite-action>\n      </div>\n      <div ref={measureRef} hidden={widget != 'measurement'}></div>\n      <div ref={coordRef} hidden={widget != 'coordinates'}></div>\n    </div>\n  );\n};\nexport default Measure;\n"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","Measure","props","measureRef","useRef","coordRef","measurement","coordinates","distanceAction","areaAction","widget","setWidget","useState","actionClicked","document","querySelectorAll","forEach","element","target","active","current","view","getAttribute","undefined","clear","activeTool","measurementActivated","viewModel","mode","useEffect","Measurement","container","areaUnit","linearUnit","watch","state","action","popup","autoOpenEnabled","conversion","CoordinateConversion","locationSymbol","PictureMarkerSymbol","url","height","width","numberSearchPattern","stateplane","Format","name","conversionInfo","spatialReference","SpatialReference","wkid","reverseConvert","string","parts","split","Point","x","parseFloat","y","coordinateSegments","alias","description","searchPattern","defaultPattern","formats","add","conversions","splice","Conversion","format","when","filter","includes","find","requestAnimationFrame","MutationObserver","mutations","length","querySelector","addEventListener","attached","observe","attributes","childList","destroy","className","text","appearance","icon","value","onClick","ref","hidden"],"sourceRoot":""}