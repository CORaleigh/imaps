{"version":3,"sources":["Components/PropertyPanel/utils/property.ts","Components/PropertyPanel/PropertyPanel.tsx"],"names":["setSearchParams","features","pin","map","feature","getAttribute","url","URL","window","location","toString","searchParams","set","state","history","pushState","href","replaceState","PropertySearch","lazy","PropertyInfo","PropertyList","PropertyPanel","props","useRef","infoTab","listTab","loaded","setLoaded","useState","infoTabDisabled","setInfoTabDisabled","view","setView","featureRef","filter","setFilter","where","setWhere","table","setTable","selectedTab","setSelectedTab","reloadTable","setReloadTable","addressTable","setAddressTable","properties","layer","setLayer","loading","setLoading","toggleTabs","tabTitle","current","active","clear","undefined","featureSelected","propertiesSelected","graphics","graphic","length","removeMany","useEffect","mapView","allTables","find","title","includes","type","allLayers","mapViewLoaded","document","querySelectorAll","forEach","tab","observer","MutationObserver","mutations","shadow","target","shadowRoot","innerHTML","disconnect","observe","attributes","addEventListener","e","back","decodeURIComponent","split","join","get","geometry","promiseUtils","resolve","reject","queryFeatures","outFields","returnGeometry","outSpatialReference","spatialReference","then","featureSet","oids","getObjectId","queryRelatedFeatures","relationshipId","objectIds","result","reloids","oid","push","geometryChanged","data","f","popupTemplate","prop","catch","selectedProperties","className","id","fallback","condosTable","propertyLayer","searchComplete","setAttribute","position","layout","slot","onCalciteTabChange","event","detail","ref","disabled","match","splice","indexOf","goTo","duration","easing"],"mappings":"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","file":"static/js/216.0a704bdb.chunk.js","sourcesContent":["import * as promiseUtils from '@arcgis/core/core/promiseUtils';\nexport const geometryChanged = (\n  view: __esri.MapView,\n  layer: __esri.FeatureLayer,\n  geometry: __esri.Geometry,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Promise<any> => {\n  return promiseUtils.create((resolve, reject) => {\n    if (geometry != undefined) {\n      layer\n        ?.queryFeatures({\n          geometry: geometry,\n          outFields: ['OBJECTID', 'REID', 'PIN_NUM'],\n          returnGeometry: true,\n          outSpatialReference: view?.spatialReference,\n        })\n        .then((featureSet) => {\n          //view?.goTo(featureSet.features, { duration: 1000, easing: 'ease' });\n          const oids = featureSet.features.map((feature) => {\n            return feature.getObjectId();\n          });\n          layer.queryRelatedFeatures({ relationshipId: 0, objectIds: oids, outFields: ['*'] }).then((result) => {\n            const reloids: number[] = [];\n            const features: __esri.Graphic[] = [];\n            oids.forEach((oid) => {\n              result[oid]?.features.forEach((feature: __esri.Graphic) => {\n                reloids.push(feature.getAttribute('OBJECTID'));\n                features.push(feature);\n              });\n            });\n            if (reloids.length) {\n              resolve({\n                where: `OBJECTID in (${reloids.toString()})`,\n                features: features,\n                properties: featureSet.features,\n              });\n            } else {\n              reject();\n            }\n          });\n        });\n    }\n  });\n};\n\nexport const setSearchParams = (features: __esri.Graphic[]): void => {\n  const pin: string[] = features.map((feature: __esri.Graphic) => {\n    return feature.getAttribute('PIN_NUM');\n  });\n  const url = new URL(window.location.toString());\n  //const searchParams = new URLSearchParams();\n  if (pin) {\n    url.searchParams.set('pin', pin.toString());\n    const state = { pin: pin.toString() };\n    if (history.state) {\n      if (history.state.pin != state.pin) {\n        history.pushState({ pin: pin.toString() }, '', url.href);\n      }\n    } else {\n      history.pushState({ pin: pin.toString() }, '', url.href);\n    }\n\n    //url.searchParams\n  } else {\n    history.replaceState(history.state, '', url.href);\n  }\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { lazy, Suspense, useEffect, useRef, useState } from 'react';\nconst PropertySearch = lazy(() => import('./PropertySearch/PropertySearch'));\nconst PropertyInfo = lazy(() => import('./PropertyInfo/PropertyInfo'));\nconst PropertyList = lazy(() => import('./PropertyList/PropertyList'));\nimport { geometryChanged, setSearchParams } from './utils/property';\nimport './PropertyPanel.scss';\nimport { CalciteTabs, CalciteTabNav, CalciteTabTitle, CalciteTab } from '@esri/calcite-components-react';\nexport const PropertyPanel = (props: any) => {\n  const state = useRef({ pin: '' });\n  const infoTab = useRef<HTMLCalciteTabTitleElement>(null);\n  const listTab = useRef<HTMLCalciteTabTitleElement>(null);\n\n  const [loaded, setLoaded] = useState(false);\n  const [infoTabDisabled, setInfoTabDisabled] = useState(true);\n  const [view, setView] = useState<__esri.MapView>();\n  // const [feature, setFeature] = useState<__esri.Graphic>();\n  const featureRef = useRef<__esri.Graphic>();\n  const [filter, setFilter] = useState('OBJECTID IS NULL');\n  const [where, setWhere] = useState('OBJECTID IS NULL');\n\n  const [table, setTable] = useState<__esri.FeatureLayer>();\n\n  const [selectedTab, setSelectedTab] = useState('list');\n  const [reloadTable, setReloadTable] = useState(false);\n\n  const [addressTable, setAddressTable] = useState<__esri.FeatureLayer>();\n  const properties = useRef<__esri.Graphic[]>();\n  const [layer, setLayer] = useState<__esri.FeatureLayer>();\n  const [loading, setLoading] = useState(false);\n\n  const mapViewLoaded = (mapView: __esri.MapView) => {\n    setTable(\n      mapView.map.allTables.find((layer) => {\n        return layer.title.includes('Condo') && layer.type === 'feature';\n      }) as __esri.FeatureLayer,\n    );\n\n    setAddressTable(\n      mapView.map.allTables.find((layer) => {\n        return layer.title.includes('Address') && layer.type === 'feature';\n      }) as __esri.FeatureLayer,\n    );\n    setLayer(\n      mapView.map.allLayers.find((layer) => {\n        return layer.title.includes('Property') && layer.type === 'feature';\n      }) as __esri.FeatureLayer,\n    );\n    setLoaded(true);\n    setView(mapView);\n    //new FeatureTable({ container: panelRef.current as HTMLDivElement, layer: layer, view: mapView });\n  };\n  const toggleTabs = (tabTitle: string) => {\n    if (infoTab.current && listTab.current) {\n      infoTab.current.active = tabTitle === 'info';\n      listTab.current.active = tabTitle === 'list';\n    }\n\n    //setSelectedTab(tabTitle);\n    //const tabnav: HTMLCalciteTabNavElement = document.querySelector('calcite-tab-nav') as HTMLCalciteTabNavElement;\n\n    //tabnav?.dispatchEvent(new CustomEvent('calciteTabChange', { detail: { tab: tabTitle } }));\n    // const title: HTMLCalciteTabTitleElement = document.querySelector(\n    //   `calcite-tab-title[tab=${tabTitle}]`,\n    // ) as HTMLCalciteTabTitleElement;\n    // title.focus();\n    //title.click();\n    // const ev = new KeyboardEvent('keydown', {\n    //   altKey: false,\n    //   bubbles: true,\n    //   cancelable: true,\n    //   charCode: 0,\n    //   code: 'Enter',\n    //   composed: true,\n    //   ctrlKey: false,\n    //   detail: 0,\n    //   isComposing: false,\n    //   key: 'Enter',\n    //   keyCode: 13,\n    //   location: 0,\n    //   metaKey: false,\n    //   repeat: false,\n    //   shiftKey: false,\n    // });\n\n    // title.dispatchEvent(ev);\n    // setTimeout(() => {\n    //   const tab: HTMLElement = document.querySelector(\n    //     `calcite-tab-title:${tabTitle === 'list' ? 'first' : 'last'}-child`,\n    //   ) as HTMLElement;\n    //   const indicator: HTMLCalciteTabNavElement = document\n    //     ?.querySelector('calcite-tab-nav')\n    //     ?.shadowRoot?.querySelector('.tab-nav-active-indicator') as HTMLCalciteTabNavElement;\n    //   tab.focus();\n    //   indicator.setAttribute(\n    //     'style',\n    //     `transition-duration: 0.3s; width: ${tab.clientWidth}px; left: ${tab.offsetLeft}px;`,\n    //   );\n    // }, 500);\n    setReloadTable(true);\n  };\n  const searchComplete = (result: any) => {\n    if (result.feature || result.features.length === 1) {\n      featureRef.current = result.features[0];\n      props.featureSelected(result.features[0]);\n      setInfoTabDisabled(false);\n      //featureRef.current = result.features[0];\n      setSearchParams([result.features[0]]);\n      toggleTabs('info');\n      setSelectedTab('info');\n    } else {\n      setSearchParams([]);\n      setInfoTabDisabled(true);\n      featureRef.current = undefined;\n      toggleTabs('list');\n      setSelectedTab('list');\n    }\n\n    const oids = result?.features.map((feature: __esri.Graphic) => {\n      return feature.getAttribute('OBJECTID');\n    });\n    setFilter(`OBJECTID in (${oids.toString()})`);\n    properties.current = result.properties;\n    props.selectedProperties?.forEach((prop: __esri.Graphic) => {\n      prop.setAttribute('selected', 0);\n    });\n\n    props.propertiesSelected(properties.current);\n    const graphics = (props.view as __esri.MapView).graphics.filter((graphic) => {\n      return graphic.getAttribute('type') === 'buffer';\n    });\n    props.view.graphics.removeMany(graphics);\n  };\n  const tableFeatureSelected = (feature: __esri.Graphic) => {\n    if (feature) {\n      properties.current?.forEach((prop: __esri.Graphic) => {\n        if (prop?.getAttribute('PIN_NUM') != feature?.getAttribute('PIN_NUM')) {\n          prop?.setAttribute('selected', 0);\n        }\n      });\n      const match: __esri.Graphic = properties.current?.find((prop: __esri.Graphic) => {\n        return prop?.getAttribute('PIN_NUM') === feature?.getAttribute('PIN_NUM');\n      }) as __esri.Graphic;\n      match?.setAttribute('selected', 1);\n      properties.current?.splice(properties.current?.indexOf(match), 1);\n      properties.current?.push(match);\n\n      feature.geometry = match?.geometry as __esri.Geometry;\n\n      view?.goTo(feature.geometry, { duration: 1000, easing: 'ease' });\n      featureRef.current = feature;\n\n      props.featureSelected(feature);\n      setInfoTabDisabled(false);\n      props.propertiesSelected(properties.current);\n\n      //featureRef.current = feature;\n      setSearchParams([feature]);\n\n      toggleTabs('info');\n      setSelectedTab('info');\n    }\n  };\n\n  const clear = () => {\n    setInfoTabDisabled(true);\n    featureRef.current = undefined;\n    props.featureSelected(undefined);\n    setFilter('OBJECTID IS NULL');\n    toggleTabs('list');\n    setSelectedTab('list');\n    props.propertiesSelected([]);\n    const graphics = view?.graphics.filter((graphic) => {\n      return graphic.getAttribute('type') === 'buffer';\n    });\n    if (graphics?.length) {\n      view?.graphics.removeMany(graphics);\n    }\n  };\n\n  useEffect(() => {\n    if (!loaded) {\n      toggleTabs('list');\n      toggleTabs('list');\n\n      const mapView = props.view as __esri.MapView;\n      mapViewLoaded(mapView);\n      // document.querySelectorAll('calcite-tab-nav').forEach((tab) => {\n      //   tab.addEventListener('calciteTabChange', (event) => {\n      //     setReloadTable((event as any).detail.tab === 0 || (event as any).detail.tab === 'list');\n      //   });\n      // });\n\n      //workaround to make calcite-tab used visibility instead of display for hiding/unhiding to handle FeatureTable\n      document.querySelectorAll('calcite-tab').forEach((tab) => {\n        const observer: MutationObserver = new MutationObserver((mutations) => {\n          if (mutations.length) {\n            const shadow = (mutations[0].target as HTMLElement)?.shadowRoot;\n            if (shadow) {\n              shadow.innerHTML +=\n                '<style>:host([active]) section { display: block !important; visibility: visible !important;} section {display: block !important; visiblity: hidden !important;}</style>';\n            }\n\n            observer.disconnect();\n          } else {\n            observer.disconnect();\n          }\n        });\n        tab.innerHTML =\n          '<style>:host([active]) {display: block !important; visibility: visible !important;} :host { display: block; visibility: hidden !important;} calcite-tab {display: block !important; z-index: 1; visibility: hidden !important;} calcite-tab[active] { z-index: 100; visibility: visible !important;;} </style>';\n        observer.observe(tab as Node, { attributes: true });\n      });\n      window.addEventListener('popstate', (e) => {\n        if (e.state?.pin === state.current?.pin) {\n          history.back();\n        } else {\n          if (e.state?.pin.length > 0) {\n            setWhere(`PIN_NUM in ('${decodeURIComponent(history.state?.pin.split(',').join(`','`))}')`);\n            setFilter(`PIN_NUM in ('${decodeURIComponent(history.state?.pin.split(',').join(`','`))}')`);\n          }\n        }\n        state.current = e.state;\n      });\n      const url = new URL(document.URL);\n      const pin = url.searchParams.get('pin');\n\n      if (pin) {\n        if (pin.length > 0) {\n          setWhere(`PIN_NUM in ('${decodeURIComponent(pin.split(',').join(`','`))}')`);\n          setFilter(`PIN_NUM in ('${decodeURIComponent(pin.split(',').join(`','`))}')`);\n        }\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    geometryChanged(view as __esri.MapView, layer as __esri.FeatureLayer, props.geometry)\n      .then((data) => {\n        if (props.geometry != undefined) {\n          setLoading(true);\n          setFilter(data.where);\n          properties.current = data.properties;\n          if (data.features.length === 1) {\n            const f = data.features[0] as __esri.Graphic;\n            f.layer = table as __esri.FeatureLayer;\n            f.popupTemplate = table?.popupTemplate as __esri.PopupTemplate;\n            const feature = data.features[0] as __esri.Graphic;\n            feature.geometry = data.properties?.find((prop: __esri.Graphic) => {\n              return prop.getAttribute('PIN_NUM') === feature.getAttribute('PIN_NUM');\n            })?.geometry;\n            featureRef.current = feature;\n            props.featureSelected(feature);\n            setInfoTabDisabled(false);\n            setSearchParams([feature]);\n\n            toggleTabs('info');\n            setSelectedTab('info');\n          } else {\n            setSearchParams([]);\n            setInfoTabDisabled(true);\n            featureRef.current = undefined;\n            toggleTabs('list');\n            setSelectedTab('list');\n          }\n          props.propertiesSelected(data.properties);\n        } else {\n          clear();\n        }\n      })\n      .catch(() => {\n        clear();\n      });\n  }, [props.geometry, props.propertiesSelected, props.featureSelected, props.selectedProperties]);\n  return (\n    <div className=\"panel\" id=\"propertyPanel\">\n      {loaded && (\n        <Suspense fallback={''}>\n          <PropertySearch\n            view={view}\n            condosTable={table}\n            addressTable={addressTable}\n            propertyLayer={layer}\n            where={where}\n            clear={clear}\n            searchComplete={searchComplete}\n          ></PropertySearch>\n        </Suspense>\n      )}\n\n      <CalciteTabs position=\"below\" layout=\"center\">\n        <CalciteTabNav\n          slot=\"tab-nav\"\n          onCalciteTabChange={(event: any) => {\n            setReloadTable((event as any).detail.tab === 0 || (event as any).detail.tab === 'list');\n          }}\n        >\n          <CalciteTabTitle tab=\"list\" ref={listTab}>\n            List\n          </CalciteTabTitle>\n          <CalciteTabTitle tab=\"info\" ref={infoTab} disabled={infoTabDisabled ? true : undefined}>\n            Info\n          </CalciteTabTitle>\n        </CalciteTabNav>\n\n        <CalciteTab tab=\"list\">\n          {loaded && (\n            <Suspense fallback={''}>\n              <PropertyList\n                view={view}\n                layer={table}\n                filter={filter}\n                loading={loading}\n                reloadTable={reloadTable}\n                selectedTab={selectedTab}\n                featureSelected={tableFeatureSelected}\n              ></PropertyList>\n            </Suspense>\n          )}\n        </CalciteTab>\n\n        <CalciteTab tab=\"info\">\n          {loaded && (\n            <Suspense fallback={''}>\n              <PropertyInfo view={view} feature={featureRef.current} />\n            </Suspense>\n          )}\n        </CalciteTab>\n      </CalciteTabs>\n    </div>\n  );\n};\n\nexport default PropertyPanel;\n"],"sourceRoot":""}